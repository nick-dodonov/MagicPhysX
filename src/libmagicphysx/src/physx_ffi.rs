/* automatically generated by csbindgen */

#[allow(unused)]
use ::std::os::raw::*;

use super::physx_sys::*;


#[no_mangle]
pub unsafe extern "C" fn magicphysx_physx_create_foundation(

) -> *mut PxFoundation
{
    physx_create_foundation(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_physx_create_foundation_with_alloc(
    allocator: *mut PxDefaultAllocator
) -> *mut PxFoundation
{
    physx_create_foundation_with_alloc(
        allocator
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_physx_create_physics(
    foundation: *mut PxFoundation
) -> *mut PxPhysics
{
    physx_create_physics(
        foundation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_get_default_allocator(

) -> *mut PxDefaultAllocator
{
    get_default_allocator(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_get_default_error_callback(

) -> *mut PxDefaultErrorCallback
{
    get_default_error_callback(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_create_raycast_filter_callback(
    actor_to_ignore: *const PxRigidActor
) -> *mut PxQueryFilterCallback
{
    create_raycast_filter_callback(
        actor_to_ignore
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_create_raycast_filter_callback_func(
    callback: RaycastHitCallback,
    userdata: *mut c_void
) -> *mut PxQueryFilterCallback
{
    create_raycast_filter_callback_func(
        callback,
        userdata
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_create_raycast_buffer(

) -> *mut PxRaycastCallback
{
    create_raycast_buffer(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_create_sweep_buffer(

) -> *mut PxSweepCallback
{
    create_sweep_buffer(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_create_overlap_buffer(

) -> *mut PxOverlapCallback
{
    create_overlap_buffer(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_create_raycast_callback(
    process_touches_callback: RaycastProcessTouchesCallback,
    finalize_query_callback: FinalizeQueryCallback,
    touches_buffer: *mut PxRaycastHit,
    num_touches: u32,
    userdata: *mut c_void
) -> *mut PxRaycastCallback
{
    create_raycast_callback(
        process_touches_callback,
        finalize_query_callback,
        touches_buffer,
        num_touches,
        userdata
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_create_sweep_callback(
    process_touches_callback: SweepProcessTouchesCallback,
    finalize_query_callback: FinalizeQueryCallback,
    touches_buffer: *mut PxSweepHit,
    num_touches: u32,
    userdata: *mut c_void
) -> *mut PxSweepCallback
{
    create_sweep_callback(
        process_touches_callback,
        finalize_query_callback,
        touches_buffer,
        num_touches,
        userdata
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_create_overlap_callback(
    process_touches_callback: OverlapProcessTouchesCallback,
    finalize_query_callback: FinalizeQueryCallback,
    touches_buffer: *mut PxOverlapHit,
    num_touches: u32,
    userdata: *mut c_void
) -> *mut PxOverlapCallback
{
    create_overlap_callback(
        process_touches_callback,
        finalize_query_callback,
        touches_buffer,
        num_touches,
        userdata
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_delete_raycast_callback(
    callback: *mut PxRaycastCallback
)
{
    delete_raycast_callback(
        callback
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_delete_sweep_callback(
    callback: *mut PxSweepCallback
)
{
    delete_sweep_callback(
        callback
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_delete_overlap_callback(
    callback: *mut PxOverlapCallback
)
{
    delete_overlap_callback(
        callback
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_create_alloc_callback(
    alloc_callback: AllocCallback,
    dealloc_callback: DeallocCallback,
    userdata: *mut c_void
) -> *mut PxAllocatorCallback
{
    create_alloc_callback(
        alloc_callback,
        dealloc_callback,
        userdata
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_create_profiler_callback(
    zone_start_callback: ZoneStartCallback,
    zone_end_callback: ZoneEndCallback,
    userdata: *mut c_void
) -> *mut PxProfilerCallback
{
    create_profiler_callback(
        zone_start_callback,
        zone_end_callback,
        userdata
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_get_alloc_callback_user_data(
    alloc_callback: *mut PxAllocatorCallback
) -> *mut c_void
{
    get_alloc_callback_user_data(
        alloc_callback
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_create_error_callback(
    error_callback: ErrorCallback,
    userdata: *mut c_void
) -> *mut PxErrorCallback
{
    create_error_callback(
        error_callback,
        userdata
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_create_assert_handler(
    error_callback: AssertHandler,
    userdata: *mut c_void
) -> *mut PxAssertHandler
{
    create_assert_handler(
        error_callback,
        userdata
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_get_default_simulation_filter_shader(

) -> *mut c_void
{
    get_default_simulation_filter_shader(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_create_simulation_event_callbacks(
    callbacks: *const SimulationEventCallbackInfo
) -> *mut PxSimulationEventCallback
{
    create_simulation_event_callbacks(
        callbacks
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_get_simulation_event_info(
    callback: *mut PxSimulationEventCallback
) -> *mut SimulationEventCallbackInfo
{
    get_simulation_event_info(
        callback
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_destroy_simulation_event_callbacks(
    callback: *mut PxSimulationEventCallback
)
{
    destroy_simulation_event_callbacks(
        callback
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_enable_custom_filter_shader(
    scene_desc: *mut PxSceneDesc,
    shader: SimulationFilterShader,
    call_default_filter_shader_first: u32
)
{
    enable_custom_filter_shader(
        scene_desc,
        shader,
        call_default_filter_shader_first
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAssertHandler_opCall_mut(
    self_: *mut PxAssertHandler,
    expr: *const i8,
    file: *const i8,
    line: i32,
    ignore: *mut bool
) -> ()
{
    PxAssertHandler_opCall_mut(
        self_,
        expr,
        file,
        line,
        ignore
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAllocatorCallback_delete(
    self_: *mut PxAllocatorCallback
)
{
    PxAllocatorCallback_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAllocatorCallback_allocate_mut(
    self_: *mut PxAllocatorCallback,
    size: usize,
    typeName: *const c_char,
    filename: *const c_char,
    line: i32
) -> *mut c_void
{
    PxAllocatorCallback_allocate_mut(
        self_,
        size,
        typeName,
        filename,
        line
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAllocatorCallback_deallocate_mut(
    self_: *mut PxAllocatorCallback,
    ptr: *mut c_void
)
{
    PxAllocatorCallback_deallocate_mut(
        self_,
        ptr
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAssertHandler_delete(
    self_: *mut PxAssertHandler
)
{
    PxAssertHandler_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetAssertHandler(

) -> *mut PxAssertHandler
{
    phys_PxGetAssertHandler(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxSetAssertHandler(
    handler: *mut PxAssertHandler
)
{
    phys_PxSetAssertHandler(
        handler
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFoundation_release_mut(
    self_: *mut PxFoundation
)
{
    PxFoundation_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFoundation_getErrorCallback_mut(
    self_: *mut PxFoundation
) -> *mut PxErrorCallback
{
    PxFoundation_getErrorCallback_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFoundation_setErrorLevel_mut(
    self_: *mut PxFoundation,
    mask: u32
)
{
    PxFoundation_setErrorLevel_mut(
        self_,
        mask
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFoundation_getErrorLevel(
    self_: *const PxFoundation
) -> u32
{
    PxFoundation_getErrorLevel(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFoundation_getAllocatorCallback_mut(
    self_: *mut PxFoundation
) -> *mut PxAllocatorCallback
{
    PxFoundation_getAllocatorCallback_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFoundation_getReportAllocationNames(
    self_: *const PxFoundation
) -> bool
{
    PxFoundation_getReportAllocationNames(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFoundation_setReportAllocationNames_mut(
    self_: *mut PxFoundation,
    value: bool
)
{
    PxFoundation_setReportAllocationNames_mut(
        self_,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFoundation_registerAllocationListener_mut(
    self_: *mut PxFoundation,
    listener: *mut PxAllocationListener
)
{
    PxFoundation_registerAllocationListener_mut(
        self_,
        listener
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFoundation_deregisterAllocationListener_mut(
    self_: *mut PxFoundation,
    listener: *mut PxAllocationListener
)
{
    PxFoundation_deregisterAllocationListener_mut(
        self_,
        listener
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFoundation_registerErrorCallback_mut(
    self_: *mut PxFoundation,
    callback: *mut PxErrorCallback
)
{
    PxFoundation_registerErrorCallback_mut(
        self_,
        callback
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFoundation_deregisterErrorCallback_mut(
    self_: *mut PxFoundation,
    callback: *mut PxErrorCallback
)
{
    PxFoundation_deregisterErrorCallback_mut(
        self_,
        callback
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateFoundation(
    version: u32,
    allocator: *mut PxAllocatorCallback,
    errorCallback: *mut PxErrorCallback
) -> *mut PxFoundation
{
    phys_PxCreateFoundation(
        version,
        allocator,
        errorCallback
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxSetFoundationInstance(
    foundation: *mut PxFoundation
)
{
    phys_PxSetFoundationInstance(
        foundation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetFoundation(

) -> *mut PxFoundation
{
    phys_PxGetFoundation(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetProfilerCallback(

) -> *mut PxProfilerCallback
{
    phys_PxGetProfilerCallback(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxSetProfilerCallback(
    profiler: *mut PxProfilerCallback
)
{
    phys_PxSetProfilerCallback(
        profiler
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetAllocatorCallback(

) -> *mut PxAllocatorCallback
{
    phys_PxGetAllocatorCallback(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetBroadcastAllocator(

) -> *mut PxAllocatorCallback
{
    phys_PxGetBroadcastAllocator(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetErrorCallback(

) -> *mut PxErrorCallback
{
    phys_PxGetErrorCallback(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetBroadcastError(

) -> *mut PxErrorCallback
{
    phys_PxGetBroadcastError(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetWarnOnceTimeStamp(

) -> u32
{
    phys_PxGetWarnOnceTimeStamp(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxDecFoundationRefCount(

)
{
    phys_PxDecFoundationRefCount(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxIncFoundationRefCount(

)
{
    phys_PxIncFoundationRefCount(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAllocator_new(
    anon_param0: *const c_char
) -> PxAllocator
{
    PxAllocator_new(
        anon_param0
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAllocator_allocate_mut(
    self_: *mut PxAllocator,
    size: usize,
    file: *const c_char,
    line: i32
) -> *mut c_void
{
    PxAllocator_allocate_mut(
        self_,
        size,
        file,
        line
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAllocator_deallocate_mut(
    self_: *mut PxAllocator,
    ptr: *mut c_void
)
{
    PxAllocator_deallocate_mut(
        self_,
        ptr
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRawAllocator_new(
    anon_param0: *const c_char
) -> PxRawAllocator
{
    PxRawAllocator_new(
        anon_param0
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRawAllocator_allocate_mut(
    self_: *mut PxRawAllocator,
    size: usize,
    anon_param1: *const c_char,
    anon_param2: i32
) -> *mut c_void
{
    PxRawAllocator_allocate_mut(
        self_,
        size,
        anon_param1,
        anon_param2
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRawAllocator_deallocate_mut(
    self_: *mut PxRawAllocator,
    ptr: *mut c_void
)
{
    PxRawAllocator_deallocate_mut(
        self_,
        ptr
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVirtualAllocatorCallback_delete(
    self_: *mut PxVirtualAllocatorCallback
)
{
    PxVirtualAllocatorCallback_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVirtualAllocatorCallback_allocate_mut(
    self_: *mut PxVirtualAllocatorCallback,
    size: usize,
    group: i32,
    file: *const c_char,
    line: i32
) -> *mut c_void
{
    PxVirtualAllocatorCallback_allocate_mut(
        self_,
        size,
        group,
        file,
        line
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVirtualAllocatorCallback_deallocate_mut(
    self_: *mut PxVirtualAllocatorCallback,
    ptr: *mut c_void
)
{
    PxVirtualAllocatorCallback_deallocate_mut(
        self_,
        ptr
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVirtualAllocator_new(
    callback: *mut PxVirtualAllocatorCallback,
    group: i32
) -> PxVirtualAllocator
{
    PxVirtualAllocator_new(
        callback,
        group
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVirtualAllocator_allocate_mut(
    self_: *mut PxVirtualAllocator,
    size: usize,
    file: *const c_char,
    line: i32
) -> *mut c_void
{
    PxVirtualAllocator_allocate_mut(
        self_,
        size,
        file,
        line
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVirtualAllocator_deallocate_mut(
    self_: *mut PxVirtualAllocator,
    ptr: *mut c_void
)
{
    PxVirtualAllocator_deallocate_mut(
        self_,
        ptr
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTempAllocatorChunk_new(

) -> PxTempAllocatorChunk
{
    PxTempAllocatorChunk_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTempAllocator_new(
    anon_param0: *const c_char
) -> PxTempAllocator
{
    PxTempAllocator_new(
        anon_param0
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTempAllocator_allocate_mut(
    self_: *mut PxTempAllocator,
    size: usize,
    file: *const c_char,
    line: i32
) -> *mut c_void
{
    PxTempAllocator_allocate_mut(
        self_,
        size,
        file,
        line
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTempAllocator_deallocate_mut(
    self_: *mut PxTempAllocator,
    ptr: *mut c_void
)
{
    PxTempAllocator_deallocate_mut(
        self_,
        ptr
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxMemZero(
    dest: *mut c_void,
    count: u32
) -> *mut c_void
{
    phys_PxMemZero(
        dest,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxMemSet(
    dest: *mut c_void,
    c: i32,
    count: u32
) -> *mut c_void
{
    phys_PxMemSet(
        dest,
        c,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxMemCopy(
    dest: *mut c_void,
    src: *const c_void,
    count: u32
) -> *mut c_void
{
    phys_PxMemCopy(
        dest,
        src,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxMemMove(
    dest: *mut c_void,
    src: *const c_void,
    count: u32
) -> *mut c_void
{
    phys_PxMemMove(
        dest,
        src,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxMarkSerializedMemory(
    ptr: *mut c_void,
    byteSize: u32
)
{
    phys_PxMarkSerializedMemory(
        ptr,
        byteSize
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxMemoryBarrier(

)
{
    phys_PxMemoryBarrier(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxHighestSetBitUnsafe(
    v: u32
) -> u32
{
    phys_PxHighestSetBitUnsafe(
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxLowestSetBitUnsafe(
    v: u32
) -> u32
{
    phys_PxLowestSetBitUnsafe(
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCountLeadingZeros(
    v: u32
) -> u32
{
    phys_PxCountLeadingZeros(
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxPrefetchLine(
    ptr: *const c_void,
    offset: u32
)
{
    phys_PxPrefetchLine(
        ptr,
        offset
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxPrefetch(
    ptr: *const c_void,
    count: u32
)
{
    phys_PxPrefetch(
        ptr,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxBitCount(
    v: u32
) -> u32
{
    phys_PxBitCount(
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxIsPowerOfTwo(
    x: u32
) -> bool
{
    phys_PxIsPowerOfTwo(
        x
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxNextPowerOfTwo(
    x: u32
) -> u32
{
    phys_PxNextPowerOfTwo(
        x
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxLowestSetBit(
    x: u32
) -> u32
{
    phys_PxLowestSetBit(
        x
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxHighestSetBit(
    x: u32
) -> u32
{
    phys_PxHighestSetBit(
        x
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxILog2(
    num: u32
) -> u32
{
    phys_PxILog2(
        num
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_new(

) -> PxVec3
{
    PxVec3_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_new_1(
    anon_param0: PxZERO
) -> PxVec3
{
    PxVec3_new_1(
        anon_param0
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_new_2(
    a: f32
) -> PxVec3
{
    PxVec3_new_2(
        a
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_new_3(
    nx: f32,
    ny: f32,
    nz: f32
) -> PxVec3
{
    PxVec3_new_3(
        nx,
        ny,
        nz
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_isZero(
    self_: *const PxVec3
) -> bool
{
    PxVec3_isZero(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_isFinite(
    self_: *const PxVec3
) -> bool
{
    PxVec3_isFinite(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_isNormalized(
    self_: *const PxVec3
) -> bool
{
    PxVec3_isNormalized(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_magnitudeSquared(
    self_: *const PxVec3
) -> f32
{
    PxVec3_magnitudeSquared(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_magnitude(
    self_: *const PxVec3
) -> f32
{
    PxVec3_magnitude(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_dot(
    self_: *const PxVec3,
    v: *const PxVec3
) -> f32
{
    PxVec3_dot(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_cross(
    self_: *const PxVec3,
    v: *const PxVec3
) -> PxVec3
{
    PxVec3_cross(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_getNormalized(
    self_: *const PxVec3
) -> PxVec3
{
    PxVec3_getNormalized(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_normalize_mut(
    self_: *mut PxVec3
) -> f32
{
    PxVec3_normalize_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_normalizeSafe_mut(
    self_: *mut PxVec3
) -> f32
{
    PxVec3_normalizeSafe_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_normalizeFast_mut(
    self_: *mut PxVec3
) -> f32
{
    PxVec3_normalizeFast_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_multiply(
    self_: *const PxVec3,
    a: *const PxVec3
) -> PxVec3
{
    PxVec3_multiply(
        self_,
        a
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_minimum(
    self_: *const PxVec3,
    v: *const PxVec3
) -> PxVec3
{
    PxVec3_minimum(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_minElement(
    self_: *const PxVec3
) -> f32
{
    PxVec3_minElement(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_maximum(
    self_: *const PxVec3,
    v: *const PxVec3
) -> PxVec3
{
    PxVec3_maximum(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_maxElement(
    self_: *const PxVec3
) -> f32
{
    PxVec3_maxElement(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3_abs(
    self_: *const PxVec3
) -> PxVec3
{
    PxVec3_abs(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3Padded_new_alloc(

) -> *mut PxVec3Padded
{
    PxVec3Padded_new_alloc(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3Padded_delete(
    self_: *mut PxVec3Padded
)
{
    PxVec3Padded_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3Padded_new_alloc_1(
    p: *const PxVec3
) -> *mut PxVec3Padded
{
    PxVec3Padded_new_alloc_1(
        p
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec3Padded_new_alloc_2(
    f: f32
) -> *mut PxVec3Padded
{
    PxVec3Padded_new_alloc_2(
        f
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_new(

) -> PxQuat
{
    PxQuat_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_new_1(
    anon_param0: PxIDENTITY
) -> PxQuat
{
    PxQuat_new_1(
        anon_param0
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_new_2(
    r: f32
) -> PxQuat
{
    PxQuat_new_2(
        r
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_new_3(
    nx: f32,
    ny: f32,
    nz: f32,
    nw: f32
) -> PxQuat
{
    PxQuat_new_3(
        nx,
        ny,
        nz,
        nw
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_new_4(
    angleRadians: f32,
    unitAxis: *const PxVec3
) -> PxQuat
{
    PxQuat_new_4(
        angleRadians,
        unitAxis
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_new_5(
    m: *const PxMat33
) -> PxQuat
{
    PxQuat_new_5(
        m
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_isIdentity(
    self_: *const PxQuat
) -> bool
{
    PxQuat_isIdentity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_isFinite(
    self_: *const PxQuat
) -> bool
{
    PxQuat_isFinite(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_isUnit(
    self_: *const PxQuat
) -> bool
{
    PxQuat_isUnit(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_isSane(
    self_: *const PxQuat
) -> bool
{
    PxQuat_isSane(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_toRadiansAndUnitAxis(
    self_: *const PxQuat,
    angle: *mut f32,
    axis: *mut PxVec3
)
{
    PxQuat_toRadiansAndUnitAxis(
        self_,
        angle,
        axis
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_getAngle(
    self_: *const PxQuat
) -> f32
{
    PxQuat_getAngle(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_getAngle_1(
    self_: *const PxQuat,
    q: *const PxQuat
) -> f32
{
    PxQuat_getAngle_1(
        self_,
        q
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_magnitudeSquared(
    self_: *const PxQuat
) -> f32
{
    PxQuat_magnitudeSquared(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_dot(
    self_: *const PxQuat,
    v: *const PxQuat
) -> f32
{
    PxQuat_dot(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_getNormalized(
    self_: *const PxQuat
) -> PxQuat
{
    PxQuat_getNormalized(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_magnitude(
    self_: *const PxQuat
) -> f32
{
    PxQuat_magnitude(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_normalize_mut(
    self_: *mut PxQuat
) -> f32
{
    PxQuat_normalize_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_getConjugate(
    self_: *const PxQuat
) -> PxQuat
{
    PxQuat_getConjugate(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_getImaginaryPart(
    self_: *const PxQuat
) -> PxVec3
{
    PxQuat_getImaginaryPart(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_getBasisVector0(
    self_: *const PxQuat
) -> PxVec3
{
    PxQuat_getBasisVector0(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_getBasisVector1(
    self_: *const PxQuat
) -> PxVec3
{
    PxQuat_getBasisVector1(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_getBasisVector2(
    self_: *const PxQuat
) -> PxVec3
{
    PxQuat_getBasisVector2(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_rotate(
    self_: *const PxQuat,
    v: *const PxVec3
) -> PxVec3
{
    PxQuat_rotate(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQuat_rotateInv(
    self_: *const PxQuat,
    v: *const PxVec3
) -> PxVec3
{
    PxQuat_rotateInv(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTransform_new(

) -> PxTransform
{
    PxTransform_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTransform_new_1(
    position: *const PxVec3
) -> PxTransform
{
    PxTransform_new_1(
        position
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTransform_new_2(
    anon_param0: PxIDENTITY
) -> PxTransform
{
    PxTransform_new_2(
        anon_param0
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTransform_new_3(
    orientation: *const PxQuat
) -> PxTransform
{
    PxTransform_new_3(
        orientation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTransform_new_4(
    x: f32,
    y: f32,
    z: f32,
    aQ: PxQuat
) -> PxTransform
{
    PxTransform_new_4(
        x,
        y,
        z,
        aQ
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTransform_new_5(
    p0: *const PxVec3,
    q0: *const PxQuat
) -> PxTransform
{
    PxTransform_new_5(
        p0,
        q0
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTransform_new_6(
    m: *const PxMat44
) -> PxTransform
{
    PxTransform_new_6(
        m
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTransform_getInverse(
    self_: *const PxTransform
) -> PxTransform
{
    PxTransform_getInverse(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTransform_transform(
    self_: *const PxTransform,
    input: *const PxVec3
) -> PxVec3
{
    PxTransform_transform(
        self_,
        input
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTransform_transformInv(
    self_: *const PxTransform,
    input: *const PxVec3
) -> PxVec3
{
    PxTransform_transformInv(
        self_,
        input
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTransform_rotate(
    self_: *const PxTransform,
    input: *const PxVec3
) -> PxVec3
{
    PxTransform_rotate(
        self_,
        input
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTransform_rotateInv(
    self_: *const PxTransform,
    input: *const PxVec3
) -> PxVec3
{
    PxTransform_rotateInv(
        self_,
        input
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTransform_transform_1(
    self_: *const PxTransform,
    src: *const PxTransform
) -> PxTransform
{
    PxTransform_transform_1(
        self_,
        src
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTransform_isValid(
    self_: *const PxTransform
) -> bool
{
    PxTransform_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTransform_isSane(
    self_: *const PxTransform
) -> bool
{
    PxTransform_isSane(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTransform_isFinite(
    self_: *const PxTransform
) -> bool
{
    PxTransform_isFinite(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTransform_transformInv_1(
    self_: *const PxTransform,
    src: *const PxTransform
) -> PxTransform
{
    PxTransform_transformInv_1(
        self_,
        src
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTransform_getNormalized(
    self_: *const PxTransform
) -> PxTransform
{
    PxTransform_getNormalized(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat33_new(

) -> PxMat33
{
    PxMat33_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat33_new_1(
    anon_param0: PxIDENTITY
) -> PxMat33
{
    PxMat33_new_1(
        anon_param0
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat33_new_2(
    anon_param0: PxZERO
) -> PxMat33
{
    PxMat33_new_2(
        anon_param0
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat33_new_3(
    col0: *const PxVec3,
    col1: *const PxVec3,
    col2: *const PxVec3
) -> PxMat33
{
    PxMat33_new_3(
        col0,
        col1,
        col2
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat33_new_4(
    r: f32
) -> PxMat33
{
    PxMat33_new_4(
        r
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat33_new_5(
    values: *mut f32
) -> PxMat33
{
    PxMat33_new_5(
        values
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat33_new_6(
    q: *const PxQuat
) -> PxMat33
{
    PxMat33_new_6(
        q
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat33_createDiagonal(
    d: *const PxVec3
) -> PxMat33
{
    PxMat33_createDiagonal(
        d
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat33_outer(
    a: *const PxVec3,
    b: *const PxVec3
) -> PxMat33
{
    PxMat33_outer(
        a,
        b
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat33_getTranspose(
    self_: *const PxMat33
) -> PxMat33
{
    PxMat33_getTranspose(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat33_getInverse(
    self_: *const PxMat33
) -> PxMat33
{
    PxMat33_getInverse(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat33_getDeterminant(
    self_: *const PxMat33
) -> f32
{
    PxMat33_getDeterminant(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat33_transform(
    self_: *const PxMat33,
    other: *const PxVec3
) -> PxVec3
{
    PxMat33_transform(
        self_,
        other
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat33_transformTranspose(
    self_: *const PxMat33,
    other: *const PxVec3
) -> PxVec3
{
    PxMat33_transformTranspose(
        self_,
        other
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat33_front(
    self_: *const PxMat33
) -> *const f32
{
    PxMat33_front(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_new(

) -> PxBounds3
{
    PxBounds3_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_new_1(
    minimum: *const PxVec3,
    maximum: *const PxVec3
) -> PxBounds3
{
    PxBounds3_new_1(
        minimum,
        maximum
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_empty(

) -> PxBounds3
{
    PxBounds3_empty(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_boundsOfPoints(
    v0: *const PxVec3,
    v1: *const PxVec3
) -> PxBounds3
{
    PxBounds3_boundsOfPoints(
        v0,
        v1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_centerExtents(
    center: *const PxVec3,
    extent: *const PxVec3
) -> PxBounds3
{
    PxBounds3_centerExtents(
        center,
        extent
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_basisExtent(
    center: *const PxVec3,
    basis: *const PxMat33,
    extent: *const PxVec3
) -> PxBounds3
{
    PxBounds3_basisExtent(
        center,
        basis,
        extent
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_poseExtent(
    pose: *const PxTransform,
    extent: *const PxVec3
) -> PxBounds3
{
    PxBounds3_poseExtent(
        pose,
        extent
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_transformSafe(
    matrix: *const PxMat33,
    bounds: *const PxBounds3
) -> PxBounds3
{
    PxBounds3_transformSafe(
        matrix,
        bounds
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_transformFast(
    matrix: *const PxMat33,
    bounds: *const PxBounds3
) -> PxBounds3
{
    PxBounds3_transformFast(
        matrix,
        bounds
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_transformSafe_1(
    transform: *const PxTransform,
    bounds: *const PxBounds3
) -> PxBounds3
{
    PxBounds3_transformSafe_1(
        transform,
        bounds
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_transformFast_1(
    transform: *const PxTransform,
    bounds: *const PxBounds3
) -> PxBounds3
{
    PxBounds3_transformFast_1(
        transform,
        bounds
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_setEmpty_mut(
    self_: *mut PxBounds3
)
{
    PxBounds3_setEmpty_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_setMaximal_mut(
    self_: *mut PxBounds3
)
{
    PxBounds3_setMaximal_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_include_mut(
    self_: *mut PxBounds3,
    v: *const PxVec3
)
{
    PxBounds3_include_mut(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_include_mut_1(
    self_: *mut PxBounds3,
    b: *const PxBounds3
)
{
    PxBounds3_include_mut_1(
        self_,
        b
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_isEmpty(
    self_: *const PxBounds3
) -> bool
{
    PxBounds3_isEmpty(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_intersects(
    self_: *const PxBounds3,
    b: *const PxBounds3
) -> bool
{
    PxBounds3_intersects(
        self_,
        b
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_intersects1D(
    self_: *const PxBounds3,
    a: *const PxBounds3,
    axis: u32
) -> bool
{
    PxBounds3_intersects1D(
        self_,
        a,
        axis
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_contains(
    self_: *const PxBounds3,
    v: *const PxVec3
) -> bool
{
    PxBounds3_contains(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_isInside(
    self_: *const PxBounds3,
    box_: *const PxBounds3
) -> bool
{
    PxBounds3_isInside(
        self_,
        box_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_getCenter(
    self_: *const PxBounds3
) -> PxVec3
{
    PxBounds3_getCenter(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_getCenter_1(
    self_: *const PxBounds3,
    axis: u32
) -> f32
{
    PxBounds3_getCenter_1(
        self_,
        axis
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_getExtents(
    self_: *const PxBounds3,
    axis: u32
) -> f32
{
    PxBounds3_getExtents(
        self_,
        axis
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_getDimensions(
    self_: *const PxBounds3
) -> PxVec3
{
    PxBounds3_getDimensions(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_getExtents_1(
    self_: *const PxBounds3
) -> PxVec3
{
    PxBounds3_getExtents_1(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_scaleSafe_mut(
    self_: *mut PxBounds3,
    scale: f32
)
{
    PxBounds3_scaleSafe_mut(
        self_,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_scaleFast_mut(
    self_: *mut PxBounds3,
    scale: f32
)
{
    PxBounds3_scaleFast_mut(
        self_,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_fattenSafe_mut(
    self_: *mut PxBounds3,
    distance: f32
)
{
    PxBounds3_fattenSafe_mut(
        self_,
        distance
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_fattenFast_mut(
    self_: *mut PxBounds3,
    distance: f32
)
{
    PxBounds3_fattenFast_mut(
        self_,
        distance
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_isFinite(
    self_: *const PxBounds3
) -> bool
{
    PxBounds3_isFinite(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_isValid(
    self_: *const PxBounds3
) -> bool
{
    PxBounds3_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBounds3_closestPoint(
    self_: *const PxBounds3,
    p: *const PxVec3
) -> PxVec3
{
    PxBounds3_closestPoint(
        self_,
        p
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxErrorCallback_delete(
    self_: *mut PxErrorCallback
)
{
    PxErrorCallback_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxErrorCallback_reportError_mut(
    self_: *mut PxErrorCallback,
    code: PxErrorCode,
    message: *const c_char,
    file: *const c_char,
    line: i32
)
{
    PxErrorCallback_reportError_mut(
        self_,
        code,
        message,
        file,
        line
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAllocationListener_onAllocation_mut(
    self_: *mut PxAllocationListener,
    size: usize,
    typeName: *const c_char,
    filename: *const c_char,
    line: i32,
    allocatedMemory: *mut c_void
)
{
    PxAllocationListener_onAllocation_mut(
        self_,
        size,
        typeName,
        filename,
        line,
        allocatedMemory
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAllocationListener_onDeallocation_mut(
    self_: *mut PxAllocationListener,
    allocatedMemory: *mut c_void
)
{
    PxAllocationListener_onDeallocation_mut(
        self_,
        allocatedMemory
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadcastingAllocator_new_alloc(
    allocator: *mut PxAllocatorCallback,
    error: *mut PxErrorCallback
) -> *mut PxBroadcastingAllocator
{
    PxBroadcastingAllocator_new_alloc(
        allocator,
        error
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadcastingAllocator_delete(
    self_: *mut PxBroadcastingAllocator
)
{
    PxBroadcastingAllocator_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadcastingAllocator_allocate_mut(
    self_: *mut PxBroadcastingAllocator,
    size: usize,
    typeName: *const c_char,
    filename: *const c_char,
    line: i32
) -> *mut c_void
{
    PxBroadcastingAllocator_allocate_mut(
        self_,
        size,
        typeName,
        filename,
        line
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadcastingAllocator_deallocate_mut(
    self_: *mut PxBroadcastingAllocator,
    ptr: *mut c_void
)
{
    PxBroadcastingAllocator_deallocate_mut(
        self_,
        ptr
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadcastingErrorCallback_new_alloc(
    errorCallback: *mut PxErrorCallback
) -> *mut PxBroadcastingErrorCallback
{
    PxBroadcastingErrorCallback_new_alloc(
        errorCallback
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadcastingErrorCallback_delete(
    self_: *mut PxBroadcastingErrorCallback
)
{
    PxBroadcastingErrorCallback_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadcastingErrorCallback_reportError_mut(
    self_: *mut PxBroadcastingErrorCallback,
    code: PxErrorCode,
    message: *const c_char,
    file: *const c_char,
    line: i32
)
{
    PxBroadcastingErrorCallback_reportError_mut(
        self_,
        code,
        message,
        file,
        line
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxEnableFPExceptions(

)
{
    phys_PxEnableFPExceptions(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxDisableFPExceptions(

)
{
    phys_PxDisableFPExceptions(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxInputStream_read_mut(
    self_: *mut PxInputStream,
    dest: *mut c_void,
    count: u32
) -> u32
{
    PxInputStream_read_mut(
        self_,
        dest,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxInputStream_delete(
    self_: *mut PxInputStream
)
{
    PxInputStream_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxInputData_getLength(
    self_: *const PxInputData
) -> u32
{
    PxInputData_getLength(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxInputData_seek_mut(
    self_: *mut PxInputData,
    offset: u32
)
{
    PxInputData_seek_mut(
        self_,
        offset
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxInputData_tell(
    self_: *const PxInputData
) -> u32
{
    PxInputData_tell(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxInputData_delete(
    self_: *mut PxInputData
)
{
    PxInputData_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxOutputStream_write_mut(
    self_: *mut PxOutputStream,
    src: *const c_void,
    count: u32
) -> u32
{
    PxOutputStream_write_mut(
        self_,
        src,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxOutputStream_delete(
    self_: *mut PxOutputStream
)
{
    PxOutputStream_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec4_new(

) -> PxVec4
{
    PxVec4_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec4_new_1(
    anon_param0: PxZERO
) -> PxVec4
{
    PxVec4_new_1(
        anon_param0
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec4_new_2(
    a: f32
) -> PxVec4
{
    PxVec4_new_2(
        a
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec4_new_3(
    nx: f32,
    ny: f32,
    nz: f32,
    nw: f32
) -> PxVec4
{
    PxVec4_new_3(
        nx,
        ny,
        nz,
        nw
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec4_new_4(
    v: *const PxVec3,
    nw: f32
) -> PxVec4
{
    PxVec4_new_4(
        v,
        nw
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec4_new_5(
    v: *const f32
) -> PxVec4
{
    PxVec4_new_5(
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec4_isZero(
    self_: *const PxVec4
) -> bool
{
    PxVec4_isZero(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec4_isFinite(
    self_: *const PxVec4
) -> bool
{
    PxVec4_isFinite(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec4_isNormalized(
    self_: *const PxVec4
) -> bool
{
    PxVec4_isNormalized(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec4_magnitudeSquared(
    self_: *const PxVec4
) -> f32
{
    PxVec4_magnitudeSquared(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec4_magnitude(
    self_: *const PxVec4
) -> f32
{
    PxVec4_magnitude(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec4_dot(
    self_: *const PxVec4,
    v: *const PxVec4
) -> f32
{
    PxVec4_dot(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec4_getNormalized(
    self_: *const PxVec4
) -> PxVec4
{
    PxVec4_getNormalized(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec4_normalize_mut(
    self_: *mut PxVec4
) -> f32
{
    PxVec4_normalize_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec4_multiply(
    self_: *const PxVec4,
    a: *const PxVec4
) -> PxVec4
{
    PxVec4_multiply(
        self_,
        a
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec4_minimum(
    self_: *const PxVec4,
    v: *const PxVec4
) -> PxVec4
{
    PxVec4_minimum(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec4_maximum(
    self_: *const PxVec4,
    v: *const PxVec4
) -> PxVec4
{
    PxVec4_maximum(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec4_getXYZ(
    self_: *const PxVec4
) -> PxVec3
{
    PxVec4_getXYZ(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_new(

) -> PxMat44
{
    PxMat44_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_new_1(
    anon_param0: PxIDENTITY
) -> PxMat44
{
    PxMat44_new_1(
        anon_param0
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_new_2(
    anon_param0: PxZERO
) -> PxMat44
{
    PxMat44_new_2(
        anon_param0
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_new_3(
    col0: *const PxVec4,
    col1: *const PxVec4,
    col2: *const PxVec4,
    col3: *const PxVec4
) -> PxMat44
{
    PxMat44_new_3(
        col0,
        col1,
        col2,
        col3
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_new_4(
    r: f32
) -> PxMat44
{
    PxMat44_new_4(
        r
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_new_5(
    col0: *const PxVec3,
    col1: *const PxVec3,
    col2: *const PxVec3,
    col3: *const PxVec3
) -> PxMat44
{
    PxMat44_new_5(
        col0,
        col1,
        col2,
        col3
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_new_6(
    values: *mut f32
) -> PxMat44
{
    PxMat44_new_6(
        values
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_new_7(
    q: *const PxQuat
) -> PxMat44
{
    PxMat44_new_7(
        q
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_new_8(
    diagonal: *const PxVec4
) -> PxMat44
{
    PxMat44_new_8(
        diagonal
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_new_9(
    axes: *const PxMat33,
    position: *const PxVec3
) -> PxMat44
{
    PxMat44_new_9(
        axes,
        position
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_new_10(
    t: *const PxTransform
) -> PxMat44
{
    PxMat44_new_10(
        t
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_getTranspose(
    self_: *const PxMat44
) -> PxMat44
{
    PxMat44_getTranspose(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_transform(
    self_: *const PxMat44,
    other: *const PxVec4
) -> PxVec4
{
    PxMat44_transform(
        self_,
        other
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_transform_1(
    self_: *const PxMat44,
    other: *const PxVec3
) -> PxVec3
{
    PxMat44_transform_1(
        self_,
        other
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_rotate(
    self_: *const PxMat44,
    other: *const PxVec4
) -> PxVec4
{
    PxMat44_rotate(
        self_,
        other
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_rotate_1(
    self_: *const PxMat44,
    other: *const PxVec3
) -> PxVec3
{
    PxMat44_rotate_1(
        self_,
        other
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_getBasis(
    self_: *const PxMat44,
    num: u32
) -> PxVec3
{
    PxMat44_getBasis(
        self_,
        num
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_getPosition(
    self_: *const PxMat44
) -> PxVec3
{
    PxMat44_getPosition(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_setPosition_mut(
    self_: *mut PxMat44,
    position: *const PxVec3
)
{
    PxMat44_setPosition_mut(
        self_,
        position
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_front(
    self_: *const PxMat44
) -> *const f32
{
    PxMat44_front(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_scale_mut(
    self_: *mut PxMat44,
    p: *const PxVec4
)
{
    PxMat44_scale_mut(
        self_,
        p
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_inverseRT(
    self_: *const PxMat44
) -> PxMat44
{
    PxMat44_inverseRT(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMat44_isFinite(
    self_: *const PxMat44
) -> bool
{
    PxMat44_isFinite(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPlane_new(

) -> PxPlane
{
    PxPlane_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPlane_new_1(
    nx: f32,
    ny: f32,
    nz: f32,
    distance: f32
) -> PxPlane
{
    PxPlane_new_1(
        nx,
        ny,
        nz,
        distance
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPlane_new_2(
    normal: *const PxVec3,
    distance: f32
) -> PxPlane
{
    PxPlane_new_2(
        normal,
        distance
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPlane_new_3(
    point: *const PxVec3,
    normal: *const PxVec3
) -> PxPlane
{
    PxPlane_new_3(
        point,
        normal
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPlane_new_4(
    p0: *const PxVec3,
    p1: *const PxVec3,
    p2: *const PxVec3
) -> PxPlane
{
    PxPlane_new_4(
        p0,
        p1,
        p2
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPlane_distance(
    self_: *const PxPlane,
    p: *const PxVec3
) -> f32
{
    PxPlane_distance(
        self_,
        p
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPlane_contains(
    self_: *const PxPlane,
    p: *const PxVec3
) -> bool
{
    PxPlane_contains(
        self_,
        p
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPlane_project(
    self_: *const PxPlane,
    p: *const PxVec3
) -> PxVec3
{
    PxPlane_project(
        self_,
        p
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPlane_pointInPlane(
    self_: *const PxPlane
) -> PxVec3
{
    PxPlane_pointInPlane(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPlane_normalize_mut(
    self_: *mut PxPlane
)
{
    PxPlane_normalize_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPlane_transform(
    self_: *const PxPlane,
    pose: *const PxTransform
) -> PxPlane
{
    PxPlane_transform(
        self_,
        pose
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPlane_inverseTransform(
    self_: *const PxPlane,
    pose: *const PxTransform
) -> PxPlane
{
    PxPlane_inverseTransform(
        self_,
        pose
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxShortestRotation(
    from: *const PxVec3,
    target: *const PxVec3
) -> PxQuat
{
    phys_PxShortestRotation(
        from,
        target
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxDiagonalize(
    m: *const PxMat33,
    axes: *mut PxQuat
) -> PxVec3
{
    phys_PxDiagonalize(
        m,
        axes
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxTransformFromSegment(
    p0: *const PxVec3,
    p1: *const PxVec3,
    halfHeight: *mut f32
) -> PxTransform
{
    phys_PxTransformFromSegment(
        p0,
        p1,
        halfHeight
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxTransformFromPlaneEquation(
    plane: *const PxPlane
) -> PxTransform
{
    phys_PxTransformFromPlaneEquation(
        plane
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxPlaneEquationFromTransform(
    pose: *const PxTransform
) -> PxPlane
{
    phys_PxPlaneEquationFromTransform(
        pose
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxSlerp(
    t: f32,
    left: *const PxQuat,
    right: *const PxQuat
) -> PxQuat
{
    phys_PxSlerp(
        t,
        left,
        right
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxIntegrateTransform(
    curTrans: *const PxTransform,
    linvel: *const PxVec3,
    angvel: *const PxVec3,
    timeStep: f32,
    result: *mut PxTransform
)
{
    phys_PxIntegrateTransform(
        curTrans,
        linvel,
        angvel,
        timeStep,
        result
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxExp(
    v: *const PxVec3
) -> PxQuat
{
    phys_PxExp(
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxOptimizeBoundingBox(
    basis: *mut PxMat33
) -> PxVec3
{
    phys_PxOptimizeBoundingBox(
        basis
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxLog(
    q: *const PxQuat
) -> PxVec3
{
    phys_PxLog(
        q
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxLargestAxis(
    v: *const PxVec3
) -> u32
{
    phys_PxLargestAxis(
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxTanHalf(
    sin: f32,
    cos: f32
) -> f32
{
    phys_PxTanHalf(
        sin,
        cos
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxEllipseClamp(
    point: *const PxVec3,
    radii: *const PxVec3
) -> PxVec3
{
    phys_PxEllipseClamp(
        point,
        radii
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxSeparateSwingTwist(
    q: *const PxQuat,
    swing: *mut PxQuat,
    twist: *mut PxQuat
)
{
    phys_PxSeparateSwingTwist(
        q,
        swing,
        twist
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxComputeAngle(
    v0: *const PxVec3,
    v1: *const PxVec3
) -> f32
{
    phys_PxComputeAngle(
        v0,
        v1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxComputeBasisVectors(
    dir: *const PxVec3,
    right: *mut PxVec3,
    up: *mut PxVec3
)
{
    phys_PxComputeBasisVectors(
        dir,
        right,
        up
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxComputeBasisVectors_1(
    p0: *const PxVec3,
    p1: *const PxVec3,
    dir: *mut PxVec3,
    right: *mut PxVec3,
    up: *mut PxVec3
)
{
    phys_PxComputeBasisVectors_1(
        p0,
        p1,
        dir,
        right,
        up
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetNextIndex3(
    i: u32
) -> u32
{
    phys_PxGetNextIndex3(
        i
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_computeBarycentric(
    a: *const PxVec3,
    b: *const PxVec3,
    c: *const PxVec3,
    d: *const PxVec3,
    p: *const PxVec3,
    bary: *mut PxVec4
)
{
    phys_computeBarycentric(
        a,
        b,
        c,
        d,
        p,
        bary
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_computeBarycentric_1(
    a: *const PxVec3,
    b: *const PxVec3,
    c: *const PxVec3,
    p: *const PxVec3,
    bary: *mut PxVec4
)
{
    phys_computeBarycentric_1(
        a,
        b,
        c,
        p,
        bary
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_Interpolation_PxLerp(
    a: f32,
    b: f32,
    t: f32
) -> f32
{
    Interpolation_PxLerp(
        a,
        b,
        t
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_Interpolation_PxBiLerp(
    f00: f32,
    f10: f32,
    f01: f32,
    f11: f32,
    tx: f32,
    ty: f32
) -> f32
{
    Interpolation_PxBiLerp(
        f00,
        f10,
        f01,
        f11,
        tx,
        ty
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_Interpolation_PxTriLerp(
    f000: f32,
    f100: f32,
    f010: f32,
    f110: f32,
    f001: f32,
    f101: f32,
    f011: f32,
    f111: f32,
    tx: f32,
    ty: f32,
    tz: f32
) -> f32
{
    Interpolation_PxTriLerp(
        f000,
        f100,
        f010,
        f110,
        f001,
        f101,
        f011,
        f111,
        tx,
        ty,
        tz
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_Interpolation_PxSDFIdx(
    i: u32,
    j: u32,
    k: u32,
    nbX: u32,
    nbY: u32
) -> u32
{
    Interpolation_PxSDFIdx(
        i,
        j,
        k,
        nbX,
        nbY
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_Interpolation_PxSDFSampleImpl(
    sdf: *const f32,
    localPos: *const PxVec3,
    sdfBoxLower: *const PxVec3,
    sdfBoxHigher: *const PxVec3,
    sdfDx: f32,
    invSdfDx: f32,
    dimX: u32,
    dimY: u32,
    dimZ: u32,
    tolerance: f32
) -> f32
{
    Interpolation_PxSDFSampleImpl(
        sdf,
        localPos,
        sdfBoxLower,
        sdfBoxHigher,
        sdfDx,
        invSdfDx,
        dimX,
        dimY,
        dimZ,
        tolerance
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxSdfSample(
    sdf: *const f32,
    localPos: *const PxVec3,
    sdfBoxLower: *const PxVec3,
    sdfBoxHigher: *const PxVec3,
    sdfDx: f32,
    invSdfDx: f32,
    dimX: u32,
    dimY: u32,
    dimZ: u32,
    gradient: *mut PxVec3,
    tolerance: f32
) -> f32
{
    phys_PxSdfSample(
        sdf,
        localPos,
        sdfBoxLower,
        sdfBoxHigher,
        sdfDx,
        invSdfDx,
        dimX,
        dimY,
        dimZ,
        gradient,
        tolerance
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMutexImpl_new_alloc(

) -> *mut PxMutexImpl
{
    PxMutexImpl_new_alloc(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMutexImpl_delete(
    self_: *mut PxMutexImpl
)
{
    PxMutexImpl_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMutexImpl_lock_mut(
    self_: *mut PxMutexImpl
)
{
    PxMutexImpl_lock_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMutexImpl_trylock_mut(
    self_: *mut PxMutexImpl
) -> bool
{
    PxMutexImpl_trylock_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMutexImpl_unlock_mut(
    self_: *mut PxMutexImpl
)
{
    PxMutexImpl_unlock_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMutexImpl_getSize(

) -> u32
{
    PxMutexImpl_getSize(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxReadWriteLock_new_alloc(

) -> *mut PxReadWriteLock
{
    PxReadWriteLock_new_alloc(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxReadWriteLock_delete(
    self_: *mut PxReadWriteLock
)
{
    PxReadWriteLock_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxReadWriteLock_lockReader_mut(
    self_: *mut PxReadWriteLock,
    takeLock: bool
)
{
    PxReadWriteLock_lockReader_mut(
        self_,
        takeLock
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxReadWriteLock_lockWriter_mut(
    self_: *mut PxReadWriteLock
)
{
    PxReadWriteLock_lockWriter_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxReadWriteLock_unlockReader_mut(
    self_: *mut PxReadWriteLock
)
{
    PxReadWriteLock_unlockReader_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxReadWriteLock_unlockWriter_mut(
    self_: *mut PxReadWriteLock
)
{
    PxReadWriteLock_unlockWriter_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxProfilerCallback_zoneStart_mut(
    self_: *mut PxProfilerCallback,
    eventName: *const c_char,
    detached: bool,
    contextId: u64
) -> *mut c_void
{
    PxProfilerCallback_zoneStart_mut(
        self_,
        eventName,
        detached,
        contextId
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxProfilerCallback_zoneEnd_mut(
    self_: *mut PxProfilerCallback,
    profilerData: *mut c_void,
    eventName: *const c_char,
    detached: bool,
    contextId: u64
)
{
    PxProfilerCallback_zoneEnd_mut(
        self_,
        profilerData,
        eventName,
        detached,
        contextId
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxProfileScoped_new_alloc(
    callback: *mut PxProfilerCallback,
    eventName: *const c_char,
    detached: bool,
    contextId: u64
) -> *mut PxProfileScoped
{
    PxProfileScoped_new_alloc(
        callback,
        eventName,
        detached,
        contextId
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxProfileScoped_delete(
    self_: *mut PxProfileScoped
)
{
    PxProfileScoped_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSListEntry_new(

) -> PxSListEntry
{
    PxSListEntry_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSListEntry_next_mut(
    self_: *mut PxSListEntry
) -> *mut PxSListEntry
{
    PxSListEntry_next_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSListImpl_new_alloc(

) -> *mut PxSListImpl
{
    PxSListImpl_new_alloc(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSListImpl_delete(
    self_: *mut PxSListImpl
)
{
    PxSListImpl_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSListImpl_push_mut(
    self_: *mut PxSListImpl,
    entry: *mut PxSListEntry
)
{
    PxSListImpl_push_mut(
        self_,
        entry
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSListImpl_pop_mut(
    self_: *mut PxSListImpl
) -> *mut PxSListEntry
{
    PxSListImpl_pop_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSListImpl_flush_mut(
    self_: *mut PxSListImpl
) -> *mut PxSListEntry
{
    PxSListImpl_flush_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSListImpl_getSize(

) -> u32
{
    PxSListImpl_getSize(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSyncImpl_new_alloc(

) -> *mut PxSyncImpl
{
    PxSyncImpl_new_alloc(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSyncImpl_delete(
    self_: *mut PxSyncImpl
)
{
    PxSyncImpl_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSyncImpl_wait_mut(
    self_: *mut PxSyncImpl,
    milliseconds: u32
) -> bool
{
    PxSyncImpl_wait_mut(
        self_,
        milliseconds
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSyncImpl_set_mut(
    self_: *mut PxSyncImpl
)
{
    PxSyncImpl_set_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSyncImpl_reset_mut(
    self_: *mut PxSyncImpl
)
{
    PxSyncImpl_reset_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSyncImpl_getSize(

) -> u32
{
    PxSyncImpl_getSize(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRunnable_new_alloc(

) -> *mut PxRunnable
{
    PxRunnable_new_alloc(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRunnable_delete(
    self_: *mut PxRunnable
)
{
    PxRunnable_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRunnable_execute_mut(
    self_: *mut PxRunnable
)
{
    PxRunnable_execute_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxTlsAlloc(

) -> u32
{
    phys_PxTlsAlloc(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxTlsFree(
    index: u32
)
{
    phys_PxTlsFree(
        index
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxTlsGet(
    index: u32
) -> *mut c_void
{
    phys_PxTlsGet(
        index
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxTlsGetValue(
    index: u32
) -> usize
{
    phys_PxTlsGetValue(
        index
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxTlsSet(
    index: u32,
    value: *mut c_void
) -> u32
{
    phys_PxTlsSet(
        index,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxTlsSetValue(
    index: u32,
    value: usize
) -> u32
{
    phys_PxTlsSetValue(
        index,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCounterFrequencyToTensOfNanos_new(
    inNum: u64,
    inDenom: u64
) -> PxCounterFrequencyToTensOfNanos
{
    PxCounterFrequencyToTensOfNanos_new(
        inNum,
        inDenom
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCounterFrequencyToTensOfNanos_toTensOfNanos(
    self_: *const PxCounterFrequencyToTensOfNanos,
    inCounter: u64
) -> u64
{
    PxCounterFrequencyToTensOfNanos_toTensOfNanos(
        self_,
        inCounter
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTime_getBootCounterFrequency(

) -> *const PxCounterFrequencyToTensOfNanos
{
    PxTime_getBootCounterFrequency(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTime_getCounterFrequency(

) -> PxCounterFrequencyToTensOfNanos
{
    PxTime_getCounterFrequency(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTime_getCurrentCounterValue(

) -> u64
{
    PxTime_getCurrentCounterValue(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTime_getCurrentTimeInTensOfNanoSeconds(

) -> u64
{
    PxTime_getCurrentTimeInTensOfNanoSeconds(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTime_new(

) -> PxTime
{
    PxTime_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTime_getElapsedSeconds_mut(
    self_: *mut PxTime
) -> f64
{
    PxTime_getElapsedSeconds_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTime_peekElapsedSeconds_mut(
    self_: *mut PxTime
) -> f64
{
    PxTime_peekElapsedSeconds_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTime_getLastTime(
    self_: *const PxTime
) -> f64
{
    PxTime_getLastTime(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec2_new(

) -> PxVec2
{
    PxVec2_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec2_new_1(
    anon_param0: PxZERO
) -> PxVec2
{
    PxVec2_new_1(
        anon_param0
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec2_new_2(
    a: f32
) -> PxVec2
{
    PxVec2_new_2(
        a
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec2_new_3(
    nx: f32,
    ny: f32
) -> PxVec2
{
    PxVec2_new_3(
        nx,
        ny
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec2_isZero(
    self_: *const PxVec2
) -> bool
{
    PxVec2_isZero(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec2_isFinite(
    self_: *const PxVec2
) -> bool
{
    PxVec2_isFinite(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec2_isNormalized(
    self_: *const PxVec2
) -> bool
{
    PxVec2_isNormalized(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec2_magnitudeSquared(
    self_: *const PxVec2
) -> f32
{
    PxVec2_magnitudeSquared(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec2_magnitude(
    self_: *const PxVec2
) -> f32
{
    PxVec2_magnitude(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec2_dot(
    self_: *const PxVec2,
    v: *const PxVec2
) -> f32
{
    PxVec2_dot(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec2_getNormalized(
    self_: *const PxVec2
) -> PxVec2
{
    PxVec2_getNormalized(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec2_normalize_mut(
    self_: *mut PxVec2
) -> f32
{
    PxVec2_normalize_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec2_multiply(
    self_: *const PxVec2,
    a: *const PxVec2
) -> PxVec2
{
    PxVec2_multiply(
        self_,
        a
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec2_minimum(
    self_: *const PxVec2,
    v: *const PxVec2
) -> PxVec2
{
    PxVec2_minimum(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec2_minElement(
    self_: *const PxVec2
) -> f32
{
    PxVec2_minElement(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec2_maximum(
    self_: *const PxVec2,
    v: *const PxVec2
) -> PxVec2
{
    PxVec2_maximum(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxVec2_maxElement(
    self_: *const PxVec2
) -> f32
{
    PxVec2_maxElement(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxStridedData_new(

) -> PxStridedData
{
    PxStridedData_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBoundedData_new(

) -> PxBoundedData
{
    PxBoundedData_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDebugPoint_new(
    p: *const PxVec3,
    c: *const u32
) -> PxDebugPoint
{
    PxDebugPoint_new(
        p,
        c
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDebugLine_new(
    p0: *const PxVec3,
    p1: *const PxVec3,
    c: *const u32
) -> PxDebugLine
{
    PxDebugLine_new(
        p0,
        p1,
        c
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDebugTriangle_new(
    p0: *const PxVec3,
    p1: *const PxVec3,
    p2: *const PxVec3,
    c: *const u32
) -> PxDebugTriangle
{
    PxDebugTriangle_new(
        p0,
        p1,
        p2,
        c
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDebugText_new(

) -> PxDebugText
{
    PxDebugText_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDebugText_new_1(
    pos: *const PxVec3,
    sz: *const f32,
    clr: *const u32,
    str: *const c_char
) -> PxDebugText
{
    PxDebugText_new_1(
        pos,
        sz,
        clr,
        str
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRenderBuffer_delete(
    self_: *mut PxRenderBuffer
)
{
    PxRenderBuffer_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRenderBuffer_getNbPoints(
    self_: *const PxRenderBuffer
) -> u32
{
    PxRenderBuffer_getNbPoints(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRenderBuffer_getPoints(
    self_: *const PxRenderBuffer
) -> *const PxDebugPoint
{
    PxRenderBuffer_getPoints(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRenderBuffer_addPoint_mut(
    self_: *mut PxRenderBuffer,
    point: *const PxDebugPoint
)
{
    PxRenderBuffer_addPoint_mut(
        self_,
        point
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRenderBuffer_getNbLines(
    self_: *const PxRenderBuffer
) -> u32
{
    PxRenderBuffer_getNbLines(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRenderBuffer_getLines(
    self_: *const PxRenderBuffer
) -> *const PxDebugLine
{
    PxRenderBuffer_getLines(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRenderBuffer_addLine_mut(
    self_: *mut PxRenderBuffer,
    line: *const PxDebugLine
)
{
    PxRenderBuffer_addLine_mut(
        self_,
        line
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRenderBuffer_reserveLines_mut(
    self_: *mut PxRenderBuffer,
    nbLines: u32
) -> *mut PxDebugLine
{
    PxRenderBuffer_reserveLines_mut(
        self_,
        nbLines
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRenderBuffer_reservePoints_mut(
    self_: *mut PxRenderBuffer,
    nbLines: u32
) -> *mut PxDebugPoint
{
    PxRenderBuffer_reservePoints_mut(
        self_,
        nbLines
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRenderBuffer_getNbTriangles(
    self_: *const PxRenderBuffer
) -> u32
{
    PxRenderBuffer_getNbTriangles(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRenderBuffer_getTriangles(
    self_: *const PxRenderBuffer
) -> *const PxDebugTriangle
{
    PxRenderBuffer_getTriangles(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRenderBuffer_addTriangle_mut(
    self_: *mut PxRenderBuffer,
    triangle: *const PxDebugTriangle
)
{
    PxRenderBuffer_addTriangle_mut(
        self_,
        triangle
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRenderBuffer_append_mut(
    self_: *mut PxRenderBuffer,
    other: *const PxRenderBuffer
)
{
    PxRenderBuffer_append_mut(
        self_,
        other
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRenderBuffer_clear_mut(
    self_: *mut PxRenderBuffer
)
{
    PxRenderBuffer_clear_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRenderBuffer_shift_mut(
    self_: *mut PxRenderBuffer,
    delta: *const PxVec3
)
{
    PxRenderBuffer_shift_mut(
        self_,
        delta
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRenderBuffer_empty(
    self_: *const PxRenderBuffer
) -> bool
{
    PxRenderBuffer_empty(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxProcessPxBaseCallback_delete(
    self_: *mut PxProcessPxBaseCallback
)
{
    PxProcessPxBaseCallback_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxProcessPxBaseCallback_process_mut(
    self_: *mut PxProcessPxBaseCallback,
    anon_param0: *mut PxBase
)
{
    PxProcessPxBaseCallback_process_mut(
        self_,
        anon_param0
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializationContext_registerReference_mut(
    self_: *mut PxSerializationContext,
    base: *mut PxBase,
    kind: u32,
    reference: usize
)
{
    PxSerializationContext_registerReference_mut(
        self_,
        base,
        kind,
        reference
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializationContext_getCollection(
    self_: *const PxSerializationContext
) -> *const PxCollection
{
    PxSerializationContext_getCollection(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializationContext_writeData_mut(
    self_: *mut PxSerializationContext,
    data: *const c_void,
    size: u32
)
{
    PxSerializationContext_writeData_mut(
        self_,
        data,
        size
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializationContext_alignData_mut(
    self_: *mut PxSerializationContext,
    alignment: u32
)
{
    PxSerializationContext_alignData_mut(
        self_,
        alignment
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializationContext_writeName_mut(
    self_: *mut PxSerializationContext,
    name: *const c_char
)
{
    PxSerializationContext_writeName_mut(
        self_,
        name
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDeserializationContext_resolveReference(
    self_: *const PxDeserializationContext,
    kind: u32,
    reference: usize
) -> *mut PxBase
{
    PxDeserializationContext_resolveReference(
        self_,
        kind,
        reference
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDeserializationContext_readName_mut(
    self_: *mut PxDeserializationContext,
    name: *mut *const c_char
)
{
    PxDeserializationContext_readName_mut(
        self_,
        name
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDeserializationContext_alignExtraData_mut(
    self_: *mut PxDeserializationContext,
    alignment: u32
)
{
    PxDeserializationContext_alignExtraData_mut(
        self_,
        alignment
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializationRegistry_registerSerializer_mut(
    self_: *mut PxSerializationRegistry,
    type_: u16,
    serializer: *mut PxSerializer
)
{
    PxSerializationRegistry_registerSerializer_mut(
        self_,
        type_,
        serializer
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializationRegistry_unregisterSerializer_mut(
    self_: *mut PxSerializationRegistry,
    type_: u16
) -> *mut PxSerializer
{
    PxSerializationRegistry_unregisterSerializer_mut(
        self_,
        type_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializationRegistry_getSerializer(
    self_: *const PxSerializationRegistry,
    type_: u16
) -> *const PxSerializer
{
    PxSerializationRegistry_getSerializer(
        self_,
        type_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializationRegistry_registerRepXSerializer_mut(
    self_: *mut PxSerializationRegistry,
    type_: u16,
    serializer: *mut PxRepXSerializer
)
{
    PxSerializationRegistry_registerRepXSerializer_mut(
        self_,
        type_,
        serializer
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializationRegistry_unregisterRepXSerializer_mut(
    self_: *mut PxSerializationRegistry,
    type_: u16
) -> *mut PxRepXSerializer
{
    PxSerializationRegistry_unregisterRepXSerializer_mut(
        self_,
        type_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializationRegistry_getRepXSerializer(
    self_: *const PxSerializationRegistry,
    typeName: *const c_char
) -> *mut PxRepXSerializer
{
    PxSerializationRegistry_getRepXSerializer(
        self_,
        typeName
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializationRegistry_release_mut(
    self_: *mut PxSerializationRegistry
)
{
    PxSerializationRegistry_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollection_add_mut(
    self_: *mut PxCollection,
    object: *mut PxBase,
    id: u64
)
{
    PxCollection_add_mut(
        self_,
        object,
        id
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollection_remove_mut(
    self_: *mut PxCollection,
    object: *mut PxBase
)
{
    PxCollection_remove_mut(
        self_,
        object
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollection_contains(
    self_: *const PxCollection,
    object: *mut PxBase
) -> bool
{
    PxCollection_contains(
        self_,
        object
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollection_addId_mut(
    self_: *mut PxCollection,
    object: *mut PxBase,
    id: u64
)
{
    PxCollection_addId_mut(
        self_,
        object,
        id
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollection_removeId_mut(
    self_: *mut PxCollection,
    id: u64
)
{
    PxCollection_removeId_mut(
        self_,
        id
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollection_add_mut_1(
    self_: *mut PxCollection,
    collection: *mut PxCollection
)
{
    PxCollection_add_mut_1(
        self_,
        collection
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollection_remove_mut_1(
    self_: *mut PxCollection,
    collection: *mut PxCollection
)
{
    PxCollection_remove_mut_1(
        self_,
        collection
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollection_getNbObjects(
    self_: *const PxCollection
) -> u32
{
    PxCollection_getNbObjects(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollection_getObject(
    self_: *const PxCollection,
    index: u32
) -> *mut PxBase
{
    PxCollection_getObject(
        self_,
        index
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollection_getObjects(
    self_: *const PxCollection,
    userBuffer: *mut *mut PxBase,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxCollection_getObjects(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollection_find(
    self_: *const PxCollection,
    id: u64
) -> *mut PxBase
{
    PxCollection_find(
        self_,
        id
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollection_getNbIds(
    self_: *const PxCollection
) -> u32
{
    PxCollection_getNbIds(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollection_getIds(
    self_: *const PxCollection,
    userBuffer: *mut u64,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxCollection_getIds(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollection_getId(
    self_: *const PxCollection,
    object: *const PxBase
) -> u64
{
    PxCollection_getId(
        self_,
        object
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollection_release_mut(
    self_: *mut PxCollection
)
{
    PxCollection_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateCollection(

) -> *mut PxCollection
{
    phys_PxCreateCollection(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBase_release_mut(
    self_: *mut PxBase
)
{
    PxBase_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBase_getConcreteTypeName(
    self_: *const PxBase
) -> *const c_char
{
    PxBase_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBase_getConcreteType(
    self_: *const PxBase
) -> u16
{
    PxBase_getConcreteType(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBase_setBaseFlag_mut(
    self_: *mut PxBase,
    flag: PxBaseFlag,
    value: bool
)
{
    PxBase_setBaseFlag_mut(
        self_,
        flag,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBase_setBaseFlags_mut(
    self_: *mut PxBase,
    inFlags: PxBaseFlags
)
{
    PxBase_setBaseFlags_mut(
        self_,
        inFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBase_getBaseFlags(
    self_: *const PxBase
) -> PxBaseFlags
{
    PxBase_getBaseFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBase_isReleasable(
    self_: *const PxBase
) -> bool
{
    PxBase_isReleasable(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRefCounted_release_mut(
    self_: *mut PxRefCounted
)
{
    PxRefCounted_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRefCounted_getReferenceCount(
    self_: *const PxRefCounted
) -> u32
{
    PxRefCounted_getReferenceCount(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRefCounted_acquireReference_mut(
    self_: *mut PxRefCounted
)
{
    PxRefCounted_acquireReference_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTolerancesScale_new(
    defaultLength: f32,
    defaultSpeed: f32
) -> PxTolerancesScale
{
    PxTolerancesScale_new(
        defaultLength,
        defaultSpeed
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTolerancesScale_isValid(
    self_: *const PxTolerancesScale
) -> bool
{
    PxTolerancesScale_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxStringTable_allocateStr_mut(
    self_: *mut PxStringTable,
    inSrc: *const c_char
) -> *const c_char
{
    PxStringTable_allocateStr_mut(
        self_,
        inSrc
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxStringTable_release_mut(
    self_: *mut PxStringTable
)
{
    PxStringTable_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializer_getConcreteTypeName(
    self_: *const PxSerializer
) -> *const c_char
{
    PxSerializer_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializer_requiresObjects(
    self_: *const PxSerializer,
    anon_param0: *mut PxBase,
    anon_param1: *mut PxProcessPxBaseCallback
)
{
    PxSerializer_requiresObjects(
        self_,
        anon_param0,
        anon_param1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializer_isSubordinate(
    self_: *const PxSerializer
) -> bool
{
    PxSerializer_isSubordinate(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializer_exportExtraData(
    self_: *const PxSerializer,
    anon_param0: *mut PxBase,
    anon_param1: *mut PxSerializationContext
)
{
    PxSerializer_exportExtraData(
        self_,
        anon_param0,
        anon_param1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializer_exportData(
    self_: *const PxSerializer,
    anon_param0: *mut PxBase,
    anon_param1: *mut PxSerializationContext
)
{
    PxSerializer_exportData(
        self_,
        anon_param0,
        anon_param1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializer_registerReferences(
    self_: *const PxSerializer,
    obj: *mut PxBase,
    s: *mut PxSerializationContext
)
{
    PxSerializer_registerReferences(
        self_,
        obj,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializer_getClassSize(
    self_: *const PxSerializer
) -> usize
{
    PxSerializer_getClassSize(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializer_createObject(
    self_: *const PxSerializer,
    address: *mut *mut u8,
    context: *mut PxDeserializationContext
) -> *mut PxBase
{
    PxSerializer_createObject(
        self_,
        address,
        context
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerializer_delete(
    self_: *mut PxSerializer
)
{
    PxSerializer_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxInsertionCallback_buildObjectFromData_mut(
    self_: *mut PxInsertionCallback,
    type_: PxConcreteType,
    data: *mut c_void
) -> *mut PxBase
{
    PxInsertionCallback_buildObjectFromData_mut(
        self_,
        type_,
        data
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTaskManager_setCpuDispatcher_mut(
    self_: *mut PxTaskManager,
    ref_: *mut PxCpuDispatcher
)
{
    PxTaskManager_setCpuDispatcher_mut(
        self_,
        ref_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTaskManager_getCpuDispatcher(
    self_: *const PxTaskManager
) -> *mut PxCpuDispatcher
{
    PxTaskManager_getCpuDispatcher(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTaskManager_resetDependencies_mut(
    self_: *mut PxTaskManager
)
{
    PxTaskManager_resetDependencies_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTaskManager_startSimulation_mut(
    self_: *mut PxTaskManager
)
{
    PxTaskManager_startSimulation_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTaskManager_stopSimulation_mut(
    self_: *mut PxTaskManager
)
{
    PxTaskManager_stopSimulation_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTaskManager_taskCompleted_mut(
    self_: *mut PxTaskManager,
    task: *mut PxTask
)
{
    PxTaskManager_taskCompleted_mut(
        self_,
        task
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTaskManager_getNamedTask_mut(
    self_: *mut PxTaskManager,
    name: *const c_char
) -> u32
{
    PxTaskManager_getNamedTask_mut(
        self_,
        name
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTaskManager_submitNamedTask_mut(
    self_: *mut PxTaskManager,
    task: *mut PxTask,
    name: *const c_char,
    type_: PxTaskType
) -> u32
{
    PxTaskManager_submitNamedTask_mut(
        self_,
        task,
        name,
        type_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTaskManager_submitUnnamedTask_mut(
    self_: *mut PxTaskManager,
    task: *mut PxTask,
    type_: PxTaskType
) -> u32
{
    PxTaskManager_submitUnnamedTask_mut(
        self_,
        task,
        type_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTaskManager_getTaskFromID_mut(
    self_: *mut PxTaskManager,
    id: u32
) -> *mut PxTask
{
    PxTaskManager_getTaskFromID_mut(
        self_,
        id
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTaskManager_release_mut(
    self_: *mut PxTaskManager
)
{
    PxTaskManager_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTaskManager_createTaskManager(
    errorCallback: *mut PxErrorCallback,
    anon_param1: *mut PxCpuDispatcher
) -> *mut PxTaskManager
{
    PxTaskManager_createTaskManager(
        errorCallback,
        anon_param1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCpuDispatcher_submitTask_mut(
    self_: *mut PxCpuDispatcher,
    task: *mut PxBaseTask
)
{
    PxCpuDispatcher_submitTask_mut(
        self_,
        task
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCpuDispatcher_getWorkerCount(
    self_: *const PxCpuDispatcher
) -> u32
{
    PxCpuDispatcher_getWorkerCount(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCpuDispatcher_delete(
    self_: *mut PxCpuDispatcher
)
{
    PxCpuDispatcher_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBaseTask_run_mut(
    self_: *mut PxBaseTask
)
{
    PxBaseTask_run_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBaseTask_getName(
    self_: *const PxBaseTask
) -> *const c_char
{
    PxBaseTask_getName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBaseTask_addReference_mut(
    self_: *mut PxBaseTask
)
{
    PxBaseTask_addReference_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBaseTask_removeReference_mut(
    self_: *mut PxBaseTask
)
{
    PxBaseTask_removeReference_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBaseTask_getReference(
    self_: *const PxBaseTask
) -> i32
{
    PxBaseTask_getReference(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBaseTask_release_mut(
    self_: *mut PxBaseTask
)
{
    PxBaseTask_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBaseTask_getTaskManager(
    self_: *const PxBaseTask
) -> *mut PxTaskManager
{
    PxBaseTask_getTaskManager(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBaseTask_setContextId_mut(
    self_: *mut PxBaseTask,
    id: u64
)
{
    PxBaseTask_setContextId_mut(
        self_,
        id
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBaseTask_getContextId(
    self_: *const PxBaseTask
) -> u64
{
    PxBaseTask_getContextId(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTask_release_mut(
    self_: *mut PxTask
)
{
    PxTask_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTask_finishBefore_mut(
    self_: *mut PxTask,
    taskID: u32
)
{
    PxTask_finishBefore_mut(
        self_,
        taskID
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTask_startAfter_mut(
    self_: *mut PxTask,
    taskID: u32
)
{
    PxTask_startAfter_mut(
        self_,
        taskID
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTask_addReference_mut(
    self_: *mut PxTask
)
{
    PxTask_addReference_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTask_removeReference_mut(
    self_: *mut PxTask
)
{
    PxTask_removeReference_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTask_getReference(
    self_: *const PxTask
) -> i32
{
    PxTask_getReference(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTask_getTaskID(
    self_: *const PxTask
) -> u32
{
    PxTask_getTaskID(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTask_submitted_mut(
    self_: *mut PxTask
)
{
    PxTask_submitted_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxLightCpuTask_setContinuation_mut(
    self_: *mut PxLightCpuTask,
    tm: *mut PxTaskManager,
    c: *mut PxBaseTask
)
{
    PxLightCpuTask_setContinuation_mut(
        self_,
        tm,
        c
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxLightCpuTask_setContinuation_mut_1(
    self_: *mut PxLightCpuTask,
    c: *mut PxBaseTask
)
{
    PxLightCpuTask_setContinuation_mut_1(
        self_,
        c
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxLightCpuTask_getContinuation(
    self_: *const PxLightCpuTask
) -> *mut PxBaseTask
{
    PxLightCpuTask_getContinuation(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxLightCpuTask_removeReference_mut(
    self_: *mut PxLightCpuTask
)
{
    PxLightCpuTask_removeReference_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxLightCpuTask_getReference(
    self_: *const PxLightCpuTask
) -> i32
{
    PxLightCpuTask_getReference(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxLightCpuTask_addReference_mut(
    self_: *mut PxLightCpuTask
)
{
    PxLightCpuTask_addReference_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxLightCpuTask_release_mut(
    self_: *mut PxLightCpuTask
)
{
    PxLightCpuTask_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometry_getType(
    self_: *const PxGeometry
) -> PxGeometryType
{
    PxGeometry_getType(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBoxGeometry_new(
    hx: f32,
    hy: f32,
    hz: f32
) -> PxBoxGeometry
{
    PxBoxGeometry_new(
        hx,
        hy,
        hz
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBoxGeometry_new_1(
    halfExtents_: PxVec3
) -> PxBoxGeometry
{
    PxBoxGeometry_new_1(
        halfExtents_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBoxGeometry_isValid(
    self_: *const PxBoxGeometry
) -> bool
{
    PxBoxGeometry_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVHRaycastCallback_delete(
    self_: *mut PxBVHRaycastCallback
)
{
    PxBVHRaycastCallback_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVHRaycastCallback_reportHit_mut(
    self_: *mut PxBVHRaycastCallback,
    boundsIndex: u32,
    distance: *mut f32
) -> bool
{
    PxBVHRaycastCallback_reportHit_mut(
        self_,
        boundsIndex,
        distance
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVHOverlapCallback_delete(
    self_: *mut PxBVHOverlapCallback
)
{
    PxBVHOverlapCallback_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVHOverlapCallback_reportHit_mut(
    self_: *mut PxBVHOverlapCallback,
    boundsIndex: u32
) -> bool
{
    PxBVHOverlapCallback_reportHit_mut(
        self_,
        boundsIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVHTraversalCallback_delete(
    self_: *mut PxBVHTraversalCallback
)
{
    PxBVHTraversalCallback_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVHTraversalCallback_visitNode_mut(
    self_: *mut PxBVHTraversalCallback,
    bounds: *const PxBounds3
) -> bool
{
    PxBVHTraversalCallback_visitNode_mut(
        self_,
        bounds
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVHTraversalCallback_reportLeaf_mut(
    self_: *mut PxBVHTraversalCallback,
    nbPrims: u32,
    prims: *const u32
) -> bool
{
    PxBVHTraversalCallback_reportLeaf_mut(
        self_,
        nbPrims,
        prims
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVH_raycast(
    self_: *const PxBVH,
    origin: *const PxVec3,
    unitDir: *const PxVec3,
    maxDist: f32,
    cb: *mut PxBVHRaycastCallback,
    queryFlags: PxGeometryQueryFlags
) -> bool
{
    PxBVH_raycast(
        self_,
        origin,
        unitDir,
        maxDist,
        cb,
        queryFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVH_sweep(
    self_: *const PxBVH,
    geom: *const PxGeometry,
    pose: *const PxTransform,
    unitDir: *const PxVec3,
    maxDist: f32,
    cb: *mut PxBVHRaycastCallback,
    queryFlags: PxGeometryQueryFlags
) -> bool
{
    PxBVH_sweep(
        self_,
        geom,
        pose,
        unitDir,
        maxDist,
        cb,
        queryFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVH_overlap(
    self_: *const PxBVH,
    geom: *const PxGeometry,
    pose: *const PxTransform,
    cb: *mut PxBVHOverlapCallback,
    queryFlags: PxGeometryQueryFlags
) -> bool
{
    PxBVH_overlap(
        self_,
        geom,
        pose,
        cb,
        queryFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVH_cull(
    self_: *const PxBVH,
    nbPlanes: u32,
    planes: *const PxPlane,
    cb: *mut PxBVHOverlapCallback,
    queryFlags: PxGeometryQueryFlags
) -> bool
{
    PxBVH_cull(
        self_,
        nbPlanes,
        planes,
        cb,
        queryFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVH_getNbBounds(
    self_: *const PxBVH
) -> u32
{
    PxBVH_getNbBounds(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVH_getBounds(
    self_: *const PxBVH
) -> *const PxBounds3
{
    PxBVH_getBounds(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVH_getBoundsForModification_mut(
    self_: *mut PxBVH
) -> *mut PxBounds3
{
    PxBVH_getBoundsForModification_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVH_refit_mut(
    self_: *mut PxBVH
)
{
    PxBVH_refit_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVH_updateBounds_mut(
    self_: *mut PxBVH,
    boundsIndex: u32,
    newBounds: *const PxBounds3
) -> bool
{
    PxBVH_updateBounds_mut(
        self_,
        boundsIndex,
        newBounds
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVH_partialRefit_mut(
    self_: *mut PxBVH
)
{
    PxBVH_partialRefit_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVH_traverse(
    self_: *const PxBVH,
    cb: *mut PxBVHTraversalCallback
) -> bool
{
    PxBVH_traverse(
        self_,
        cb
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVH_getConcreteTypeName(
    self_: *const PxBVH
) -> *const c_char
{
    PxBVH_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCapsuleGeometry_new(
    radius_: f32,
    halfHeight_: f32
) -> PxCapsuleGeometry
{
    PxCapsuleGeometry_new(
        radius_,
        halfHeight_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCapsuleGeometry_isValid(
    self_: *const PxCapsuleGeometry
) -> bool
{
    PxCapsuleGeometry_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConvexMesh_getNbVertices(
    self_: *const PxConvexMesh
) -> u32
{
    PxConvexMesh_getNbVertices(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConvexMesh_getVertices(
    self_: *const PxConvexMesh
) -> *const PxVec3
{
    PxConvexMesh_getVertices(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConvexMesh_getIndexBuffer(
    self_: *const PxConvexMesh
) -> *const u8
{
    PxConvexMesh_getIndexBuffer(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConvexMesh_getNbPolygons(
    self_: *const PxConvexMesh
) -> u32
{
    PxConvexMesh_getNbPolygons(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConvexMesh_getPolygonData(
    self_: *const PxConvexMesh,
    index: u32,
    data: *mut PxHullPolygon
) -> bool
{
    PxConvexMesh_getPolygonData(
        self_,
        index,
        data
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConvexMesh_release_mut(
    self_: *mut PxConvexMesh
)
{
    PxConvexMesh_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConvexMesh_getMassInformation(
    self_: *const PxConvexMesh,
    mass: *mut f32,
    localInertia: *mut PxMat33,
    localCenterOfMass: *mut PxVec3
)
{
    PxConvexMesh_getMassInformation(
        self_,
        mass,
        localInertia,
        localCenterOfMass
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConvexMesh_getLocalBounds(
    self_: *const PxConvexMesh
) -> PxBounds3
{
    PxConvexMesh_getLocalBounds(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConvexMesh_getSDF(
    self_: *const PxConvexMesh
) -> *const f32
{
    PxConvexMesh_getSDF(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConvexMesh_getConcreteTypeName(
    self_: *const PxConvexMesh
) -> *const c_char
{
    PxConvexMesh_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConvexMesh_isGpuCompatible(
    self_: *const PxConvexMesh
) -> bool
{
    PxConvexMesh_isGpuCompatible(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshScale_new(

) -> PxMeshScale
{
    PxMeshScale_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshScale_new_1(
    r: f32
) -> PxMeshScale
{
    PxMeshScale_new_1(
        r
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshScale_new_2(
    s: *const PxVec3
) -> PxMeshScale
{
    PxMeshScale_new_2(
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshScale_new_3(
    s: *const PxVec3,
    r: *const PxQuat
) -> PxMeshScale
{
    PxMeshScale_new_3(
        s,
        r
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshScale_isIdentity(
    self_: *const PxMeshScale
) -> bool
{
    PxMeshScale_isIdentity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshScale_getInverse(
    self_: *const PxMeshScale
) -> PxMeshScale
{
    PxMeshScale_getInverse(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshScale_toMat33(
    self_: *const PxMeshScale
) -> PxMat33
{
    PxMeshScale_toMat33(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshScale_hasNegativeDeterminant(
    self_: *const PxMeshScale
) -> bool
{
    PxMeshScale_hasNegativeDeterminant(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshScale_transform(
    self_: *const PxMeshScale,
    v: *const PxVec3
) -> PxVec3
{
    PxMeshScale_transform(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshScale_isValidForTriangleMesh(
    self_: *const PxMeshScale
) -> bool
{
    PxMeshScale_isValidForTriangleMesh(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshScale_isValidForConvexMesh(
    self_: *const PxMeshScale
) -> bool
{
    PxMeshScale_isValidForConvexMesh(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConvexMeshGeometry_new(
    mesh: *mut PxConvexMesh,
    scaling: *const PxMeshScale,
    flags: PxConvexMeshGeometryFlags
) -> PxConvexMeshGeometry
{
    PxConvexMeshGeometry_new(
        mesh,
        scaling,
        flags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConvexMeshGeometry_isValid(
    self_: *const PxConvexMeshGeometry
) -> bool
{
    PxConvexMeshGeometry_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSphereGeometry_new(
    ir: f32
) -> PxSphereGeometry
{
    PxSphereGeometry_new(
        ir
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSphereGeometry_isValid(
    self_: *const PxSphereGeometry
) -> bool
{
    PxSphereGeometry_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPlaneGeometry_new(

) -> PxPlaneGeometry
{
    PxPlaneGeometry_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPlaneGeometry_isValid(
    self_: *const PxPlaneGeometry
) -> bool
{
    PxPlaneGeometry_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMeshGeometry_new(
    mesh: *mut PxTriangleMesh,
    scaling: *const PxMeshScale,
    flags: PxMeshGeometryFlags
) -> PxTriangleMeshGeometry
{
    PxTriangleMeshGeometry_new(
        mesh,
        scaling,
        flags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMeshGeometry_isValid(
    self_: *const PxTriangleMeshGeometry
) -> bool
{
    PxTriangleMeshGeometry_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightFieldGeometry_new(
    hf: *mut PxHeightField,
    flags: PxMeshGeometryFlags,
    heightScale_: f32,
    rowScale_: f32,
    columnScale_: f32
) -> PxHeightFieldGeometry
{
    PxHeightFieldGeometry_new(
        hf,
        flags,
        heightScale_,
        rowScale_,
        columnScale_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightFieldGeometry_isValid(
    self_: *const PxHeightFieldGeometry
) -> bool
{
    PxHeightFieldGeometry_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxParticleSystemGeometry_new(

) -> PxParticleSystemGeometry
{
    PxParticleSystemGeometry_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxParticleSystemGeometry_isValid(
    self_: *const PxParticleSystemGeometry
) -> bool
{
    PxParticleSystemGeometry_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHairSystemGeometry_new(

) -> PxHairSystemGeometry
{
    PxHairSystemGeometry_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHairSystemGeometry_isValid(
    self_: *const PxHairSystemGeometry
) -> bool
{
    PxHairSystemGeometry_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTetrahedronMeshGeometry_new(
    mesh: *mut PxTetrahedronMesh
) -> PxTetrahedronMeshGeometry
{
    PxTetrahedronMeshGeometry_new(
        mesh
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTetrahedronMeshGeometry_isValid(
    self_: *const PxTetrahedronMeshGeometry
) -> bool
{
    PxTetrahedronMeshGeometry_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQueryHit_new(

) -> PxQueryHit
{
    PxQueryHit_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxLocationHit_new(

) -> PxLocationHit
{
    PxLocationHit_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxLocationHit_hadInitialOverlap(
    self_: *const PxLocationHit
) -> bool
{
    PxLocationHit_hadInitialOverlap(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeomRaycastHit_new(

) -> PxGeomRaycastHit
{
    PxGeomRaycastHit_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeomOverlapHit_new(

) -> PxGeomOverlapHit
{
    PxGeomOverlapHit_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeomSweepHit_new(

) -> PxGeomSweepHit
{
    PxGeomSweepHit_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeomIndexPair_new(

) -> PxGeomIndexPair
{
    PxGeomIndexPair_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeomIndexPair_new_1(
    _id0: u32,
    _id1: u32
) -> PxGeomIndexPair
{
    PxGeomIndexPair_new_1(
        _id0,
        _id1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCustomGeometry_getUniqueID(

) -> u32
{
    phys_PxCustomGeometry_getUniqueID(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomGeometryType_new(

) -> PxCustomGeometryType
{
    PxCustomGeometryType_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomGeometryType_INVALID(

) -> PxCustomGeometryType
{
    PxCustomGeometryType_INVALID(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomGeometryCallbacks_getCustomType(
    self_: *const PxCustomGeometryCallbacks
) -> PxCustomGeometryType
{
    PxCustomGeometryCallbacks_getCustomType(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomGeometryCallbacks_getLocalBounds(
    self_: *const PxCustomGeometryCallbacks,
    geometry: *const PxGeometry
) -> PxBounds3
{
    PxCustomGeometryCallbacks_getLocalBounds(
        self_,
        geometry
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomGeometryCallbacks_raycast(
    self_: *const PxCustomGeometryCallbacks,
    origin: *const PxVec3,
    unitDir: *const PxVec3,
    geom: *const PxGeometry,
    pose: *const PxTransform,
    maxDist: f32,
    hitFlags: PxHitFlags,
    maxHits: u32,
    rayHits: *mut PxGeomRaycastHit,
    stride: u32,
    threadContext: *mut PxQueryThreadContext
) -> u32
{
    PxCustomGeometryCallbacks_raycast(
        self_,
        origin,
        unitDir,
        geom,
        pose,
        maxDist,
        hitFlags,
        maxHits,
        rayHits,
        stride,
        threadContext
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomGeometryCallbacks_overlap(
    self_: *const PxCustomGeometryCallbacks,
    geom0: *const PxGeometry,
    pose0: *const PxTransform,
    geom1: *const PxGeometry,
    pose1: *const PxTransform,
    threadContext: *mut PxQueryThreadContext
) -> bool
{
    PxCustomGeometryCallbacks_overlap(
        self_,
        geom0,
        pose0,
        geom1,
        pose1,
        threadContext
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomGeometryCallbacks_sweep(
    self_: *const PxCustomGeometryCallbacks,
    unitDir: *const PxVec3,
    maxDist: f32,
    geom0: *const PxGeometry,
    pose0: *const PxTransform,
    geom1: *const PxGeometry,
    pose1: *const PxTransform,
    sweepHit: *mut PxGeomSweepHit,
    hitFlags: PxHitFlags,
    inflation: f32,
    threadContext: *mut PxQueryThreadContext
) -> bool
{
    PxCustomGeometryCallbacks_sweep(
        self_,
        unitDir,
        maxDist,
        geom0,
        pose0,
        geom1,
        pose1,
        sweepHit,
        hitFlags,
        inflation,
        threadContext
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomGeometryCallbacks_computeMassProperties(
    self_: *const PxCustomGeometryCallbacks,
    geometry: *const PxGeometry,
    massProperties: *mut PxMassProperties
)
{
    PxCustomGeometryCallbacks_computeMassProperties(
        self_,
        geometry,
        massProperties
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomGeometryCallbacks_usePersistentContactManifold(
    self_: *const PxCustomGeometryCallbacks,
    geometry: *const PxGeometry,
    breakingThreshold: *mut f32
) -> bool
{
    PxCustomGeometryCallbacks_usePersistentContactManifold(
        self_,
        geometry,
        breakingThreshold
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomGeometryCallbacks_delete(
    self_: *mut PxCustomGeometryCallbacks
)
{
    PxCustomGeometryCallbacks_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomGeometry_new(

) -> PxCustomGeometry
{
    PxCustomGeometry_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomGeometry_new_1(
    _callbacks: *mut PxCustomGeometryCallbacks
) -> PxCustomGeometry
{
    PxCustomGeometry_new_1(
        _callbacks
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomGeometry_isValid(
    self_: *const PxCustomGeometry
) -> bool
{
    PxCustomGeometry_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomGeometry_getCustomType(
    self_: *const PxCustomGeometry
) -> PxCustomGeometryType
{
    PxCustomGeometry_getCustomType(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_getType(
    self_: *const PxGeometryHolder
) -> PxGeometryType
{
    PxGeometryHolder_getType(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_any_mut(
    self_: *mut PxGeometryHolder
) -> *mut PxGeometry
{
    PxGeometryHolder_any_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_any(
    self_: *const PxGeometryHolder
) -> *const PxGeometry
{
    PxGeometryHolder_any(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_sphere_mut(
    self_: *mut PxGeometryHolder
) -> *mut PxSphereGeometry
{
    PxGeometryHolder_sphere_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_sphere(
    self_: *const PxGeometryHolder
) -> *const PxSphereGeometry
{
    PxGeometryHolder_sphere(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_plane_mut(
    self_: *mut PxGeometryHolder
) -> *mut PxPlaneGeometry
{
    PxGeometryHolder_plane_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_plane(
    self_: *const PxGeometryHolder
) -> *const PxPlaneGeometry
{
    PxGeometryHolder_plane(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_capsule_mut(
    self_: *mut PxGeometryHolder
) -> *mut PxCapsuleGeometry
{
    PxGeometryHolder_capsule_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_capsule(
    self_: *const PxGeometryHolder
) -> *const PxCapsuleGeometry
{
    PxGeometryHolder_capsule(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_box_mut(
    self_: *mut PxGeometryHolder
) -> *mut PxBoxGeometry
{
    PxGeometryHolder_box_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_box(
    self_: *const PxGeometryHolder
) -> *const PxBoxGeometry
{
    PxGeometryHolder_box(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_convexMesh_mut(
    self_: *mut PxGeometryHolder
) -> *mut PxConvexMeshGeometry
{
    PxGeometryHolder_convexMesh_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_convexMesh(
    self_: *const PxGeometryHolder
) -> *const PxConvexMeshGeometry
{
    PxGeometryHolder_convexMesh(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_tetMesh_mut(
    self_: *mut PxGeometryHolder
) -> *mut PxTetrahedronMeshGeometry
{
    PxGeometryHolder_tetMesh_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_tetMesh(
    self_: *const PxGeometryHolder
) -> *const PxTetrahedronMeshGeometry
{
    PxGeometryHolder_tetMesh(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_triangleMesh_mut(
    self_: *mut PxGeometryHolder
) -> *mut PxTriangleMeshGeometry
{
    PxGeometryHolder_triangleMesh_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_triangleMesh(
    self_: *const PxGeometryHolder
) -> *const PxTriangleMeshGeometry
{
    PxGeometryHolder_triangleMesh(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_heightField_mut(
    self_: *mut PxGeometryHolder
) -> *mut PxHeightFieldGeometry
{
    PxGeometryHolder_heightField_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_heightField(
    self_: *const PxGeometryHolder
) -> *const PxHeightFieldGeometry
{
    PxGeometryHolder_heightField(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_particleSystem_mut(
    self_: *mut PxGeometryHolder
) -> *mut PxParticleSystemGeometry
{
    PxGeometryHolder_particleSystem_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_particleSystem(
    self_: *const PxGeometryHolder
) -> *const PxParticleSystemGeometry
{
    PxGeometryHolder_particleSystem(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_hairSystem_mut(
    self_: *mut PxGeometryHolder
) -> *mut PxHairSystemGeometry
{
    PxGeometryHolder_hairSystem_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_hairSystem(
    self_: *const PxGeometryHolder
) -> *const PxHairSystemGeometry
{
    PxGeometryHolder_hairSystem(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_custom_mut(
    self_: *mut PxGeometryHolder
) -> *mut PxCustomGeometry
{
    PxGeometryHolder_custom_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_custom(
    self_: *const PxGeometryHolder
) -> *const PxCustomGeometry
{
    PxGeometryHolder_custom(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_storeAny_mut(
    self_: *mut PxGeometryHolder,
    geometry: *const PxGeometry
)
{
    PxGeometryHolder_storeAny_mut(
        self_,
        geometry
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_new(

) -> PxGeometryHolder
{
    PxGeometryHolder_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryHolder_new_1(
    geometry: *const PxGeometry
) -> PxGeometryHolder
{
    PxGeometryHolder_new_1(
        geometry
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryQuery_raycast(
    origin: *const PxVec3,
    unitDir: *const PxVec3,
    geom: *const PxGeometry,
    pose: *const PxTransform,
    maxDist: f32,
    hitFlags: PxHitFlags,
    maxHits: u32,
    rayHits: *mut PxGeomRaycastHit,
    stride: u32,
    queryFlags: PxGeometryQueryFlags,
    threadContext: *mut PxQueryThreadContext
) -> u32
{
    PxGeometryQuery_raycast(
        origin,
        unitDir,
        geom,
        pose,
        maxDist,
        hitFlags,
        maxHits,
        rayHits,
        stride,
        queryFlags,
        threadContext
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryQuery_overlap(
    geom0: *const PxGeometry,
    pose0: *const PxTransform,
    geom1: *const PxGeometry,
    pose1: *const PxTransform,
    queryFlags: PxGeometryQueryFlags,
    threadContext: *mut PxQueryThreadContext
) -> bool
{
    PxGeometryQuery_overlap(
        geom0,
        pose0,
        geom1,
        pose1,
        queryFlags,
        threadContext
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryQuery_sweep(
    unitDir: *const PxVec3,
    maxDist: f32,
    geom0: *const PxGeometry,
    pose0: *const PxTransform,
    geom1: *const PxGeometry,
    pose1: *const PxTransform,
    sweepHit: *mut PxGeomSweepHit,
    hitFlags: PxHitFlags,
    inflation: f32,
    queryFlags: PxGeometryQueryFlags,
    threadContext: *mut PxQueryThreadContext
) -> bool
{
    PxGeometryQuery_sweep(
        unitDir,
        maxDist,
        geom0,
        pose0,
        geom1,
        pose1,
        sweepHit,
        hitFlags,
        inflation,
        queryFlags,
        threadContext
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryQuery_computePenetration(
    direction: *mut PxVec3,
    depth: *mut f32,
    geom0: *const PxGeometry,
    pose0: *const PxTransform,
    geom1: *const PxGeometry,
    pose1: *const PxTransform,
    queryFlags: PxGeometryQueryFlags
) -> bool
{
    PxGeometryQuery_computePenetration(
        direction,
        depth,
        geom0,
        pose0,
        geom1,
        pose1,
        queryFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryQuery_pointDistance(
    point: *const PxVec3,
    geom: *const PxGeometry,
    pose: *const PxTransform,
    closestPoint: *mut PxVec3,
    closestIndex: *mut u32,
    queryFlags: PxGeometryQueryFlags
) -> f32
{
    PxGeometryQuery_pointDistance(
        point,
        geom,
        pose,
        closestPoint,
        closestIndex,
        queryFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryQuery_computeGeomBounds(
    bounds: *mut PxBounds3,
    geom: *const PxGeometry,
    pose: *const PxTransform,
    offset: f32,
    inflation: f32,
    queryFlags: PxGeometryQueryFlags
)
{
    PxGeometryQuery_computeGeomBounds(
        bounds,
        geom,
        pose,
        offset,
        inflation,
        queryFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGeometryQuery_isValid(
    geom: *const PxGeometry
) -> bool
{
    PxGeometryQuery_isValid(
        geom
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightFieldSample_tessFlag(
    self_: *const PxHeightFieldSample
) -> u8
{
    PxHeightFieldSample_tessFlag(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightFieldSample_setTessFlag_mut(
    self_: *mut PxHeightFieldSample
)
{
    PxHeightFieldSample_setTessFlag_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightFieldSample_clearTessFlag_mut(
    self_: *mut PxHeightFieldSample
)
{
    PxHeightFieldSample_clearTessFlag_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightField_release_mut(
    self_: *mut PxHeightField
)
{
    PxHeightField_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightField_saveCells(
    self_: *const PxHeightField,
    destBuffer: *mut c_void,
    destBufferSize: u32
) -> u32
{
    PxHeightField_saveCells(
        self_,
        destBuffer,
        destBufferSize
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightField_modifySamples_mut(
    self_: *mut PxHeightField,
    startCol: i32,
    startRow: i32,
    subfieldDesc: *const PxHeightFieldDesc,
    shrinkBounds: bool
) -> bool
{
    PxHeightField_modifySamples_mut(
        self_,
        startCol,
        startRow,
        subfieldDesc,
        shrinkBounds
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightField_getNbRows(
    self_: *const PxHeightField
) -> u32
{
    PxHeightField_getNbRows(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightField_getNbColumns(
    self_: *const PxHeightField
) -> u32
{
    PxHeightField_getNbColumns(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightField_getFormat(
    self_: *const PxHeightField
) -> PxHeightFieldFormat
{
    PxHeightField_getFormat(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightField_getSampleStride(
    self_: *const PxHeightField
) -> u32
{
    PxHeightField_getSampleStride(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightField_getConvexEdgeThreshold(
    self_: *const PxHeightField
) -> f32
{
    PxHeightField_getConvexEdgeThreshold(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightField_getFlags(
    self_: *const PxHeightField
) -> PxHeightFieldFlags
{
    PxHeightField_getFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightField_getHeight(
    self_: *const PxHeightField,
    x: f32,
    z: f32
) -> f32
{
    PxHeightField_getHeight(
        self_,
        x,
        z
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightField_getTriangleMaterialIndex(
    self_: *const PxHeightField,
    triangleIndex: u32
) -> u16
{
    PxHeightField_getTriangleMaterialIndex(
        self_,
        triangleIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightField_getTriangleNormal(
    self_: *const PxHeightField,
    triangleIndex: u32
) -> PxVec3
{
    PxHeightField_getTriangleNormal(
        self_,
        triangleIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightField_getSample(
    self_: *const PxHeightField,
    row: u32,
    column: u32
) -> *const PxHeightFieldSample
{
    PxHeightField_getSample(
        self_,
        row,
        column
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightField_getTimestamp(
    self_: *const PxHeightField
) -> u32
{
    PxHeightField_getTimestamp(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightField_getConcreteTypeName(
    self_: *const PxHeightField
) -> *const c_char
{
    PxHeightField_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightFieldDesc_new(

) -> PxHeightFieldDesc
{
    PxHeightFieldDesc_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightFieldDesc_setToDefault_mut(
    self_: *mut PxHeightFieldDesc
)
{
    PxHeightFieldDesc_setToDefault_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxHeightFieldDesc_isValid(
    self_: *const PxHeightFieldDesc
) -> bool
{
    PxHeightFieldDesc_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshQuery_getTriangle(
    triGeom: *const PxTriangleMeshGeometry,
    transform: *const PxTransform,
    triangleIndex: u32,
    triangle: *mut PxTriangle,
    vertexIndices: *mut u32,
    adjacencyIndices: *mut u32
)
{
    PxMeshQuery_getTriangle(
        triGeom,
        transform,
        triangleIndex,
        triangle,
        vertexIndices,
        adjacencyIndices
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshQuery_getTriangle_1(
    hfGeom: *const PxHeightFieldGeometry,
    transform: *const PxTransform,
    triangleIndex: u32,
    triangle: *mut PxTriangle,
    vertexIndices: *mut u32,
    adjacencyIndices: *mut u32
)
{
    PxMeshQuery_getTriangle_1(
        hfGeom,
        transform,
        triangleIndex,
        triangle,
        vertexIndices,
        adjacencyIndices
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshQuery_findOverlapTriangleMesh(
    geom: *const PxGeometry,
    geomPose: *const PxTransform,
    meshGeom: *const PxTriangleMeshGeometry,
    meshPose: *const PxTransform,
    results: *mut u32,
    maxResults: u32,
    startIndex: u32,
    overflow: *mut bool,
    queryFlags: PxGeometryQueryFlags
) -> u32
{
    PxMeshQuery_findOverlapTriangleMesh(
        geom,
        geomPose,
        meshGeom,
        meshPose,
        results,
        maxResults,
        startIndex,
        overflow,
        queryFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshQuery_findOverlapHeightField(
    geom: *const PxGeometry,
    geomPose: *const PxTransform,
    hfGeom: *const PxHeightFieldGeometry,
    hfPose: *const PxTransform,
    results: *mut u32,
    maxResults: u32,
    startIndex: u32,
    overflow: *mut bool,
    queryFlags: PxGeometryQueryFlags
) -> u32
{
    PxMeshQuery_findOverlapHeightField(
        geom,
        geomPose,
        hfGeom,
        hfPose,
        results,
        maxResults,
        startIndex,
        overflow,
        queryFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshQuery_sweep(
    unitDir: *const PxVec3,
    distance: f32,
    geom: *const PxGeometry,
    pose: *const PxTransform,
    triangleCount: u32,
    triangles: *const PxTriangle,
    sweepHit: *mut PxGeomSweepHit,
    hitFlags: PxHitFlags,
    cachedIndex: *const u32,
    inflation: f32,
    doubleSided: bool,
    queryFlags: PxGeometryQueryFlags
) -> bool
{
    PxMeshQuery_sweep(
        unitDir,
        distance,
        geom,
        pose,
        triangleCount,
        triangles,
        sweepHit,
        hitFlags,
        cachedIndex,
        inflation,
        doubleSided,
        queryFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimpleTriangleMesh_new(

) -> PxSimpleTriangleMesh
{
    PxSimpleTriangleMesh_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimpleTriangleMesh_setToDefault_mut(
    self_: *mut PxSimpleTriangleMesh
)
{
    PxSimpleTriangleMesh_setToDefault_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimpleTriangleMesh_isValid(
    self_: *const PxSimpleTriangleMesh
) -> bool
{
    PxSimpleTriangleMesh_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangle_new_alloc(

) -> *mut PxTriangle
{
    PxTriangle_new_alloc(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangle_new_alloc_1(
    p0: *const PxVec3,
    p1: *const PxVec3,
    p2: *const PxVec3
) -> *mut PxTriangle
{
    PxTriangle_new_alloc_1(
        p0,
        p1,
        p2
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangle_delete(
    self_: *mut PxTriangle
)
{
    PxTriangle_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangle_normal(
    self_: *const PxTriangle,
    _normal: *mut PxVec3
)
{
    PxTriangle_normal(
        self_,
        _normal
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangle_denormalizedNormal(
    self_: *const PxTriangle,
    _normal: *mut PxVec3
)
{
    PxTriangle_denormalizedNormal(
        self_,
        _normal
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangle_area(
    self_: *const PxTriangle
) -> f32
{
    PxTriangle_area(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangle_pointFromUV(
    self_: *const PxTriangle,
    u: f32,
    v: f32
) -> PxVec3
{
    PxTriangle_pointFromUV(
        self_,
        u,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTrianglePadded_new_alloc(

) -> *mut PxTrianglePadded
{
    PxTrianglePadded_new_alloc(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTrianglePadded_delete(
    self_: *mut PxTrianglePadded
)
{
    PxTrianglePadded_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMesh_getNbVertices(
    self_: *const PxTriangleMesh
) -> u32
{
    PxTriangleMesh_getNbVertices(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMesh_getVertices(
    self_: *const PxTriangleMesh
) -> *const PxVec3
{
    PxTriangleMesh_getVertices(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMesh_getVerticesForModification_mut(
    self_: *mut PxTriangleMesh
) -> *mut PxVec3
{
    PxTriangleMesh_getVerticesForModification_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMesh_refitBVH_mut(
    self_: *mut PxTriangleMesh
) -> PxBounds3
{
    PxTriangleMesh_refitBVH_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMesh_getNbTriangles(
    self_: *const PxTriangleMesh
) -> u32
{
    PxTriangleMesh_getNbTriangles(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMesh_getTriangles(
    self_: *const PxTriangleMesh
) -> *const c_void
{
    PxTriangleMesh_getTriangles(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMesh_getTriangleMeshFlags(
    self_: *const PxTriangleMesh
) -> PxTriangleMeshFlags
{
    PxTriangleMesh_getTriangleMeshFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMesh_getTrianglesRemap(
    self_: *const PxTriangleMesh
) -> *const u32
{
    PxTriangleMesh_getTrianglesRemap(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMesh_release_mut(
    self_: *mut PxTriangleMesh
)
{
    PxTriangleMesh_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMesh_getTriangleMaterialIndex(
    self_: *const PxTriangleMesh,
    triangleIndex: u32
) -> u16
{
    PxTriangleMesh_getTriangleMaterialIndex(
        self_,
        triangleIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMesh_getLocalBounds(
    self_: *const PxTriangleMesh
) -> PxBounds3
{
    PxTriangleMesh_getLocalBounds(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMesh_getSDF(
    self_: *const PxTriangleMesh
) -> *const f32
{
    PxTriangleMesh_getSDF(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMesh_getSDFDimensions(
    self_: *const PxTriangleMesh,
    numX: *mut u32,
    numY: *mut u32,
    numZ: *mut u32
)
{
    PxTriangleMesh_getSDFDimensions(
        self_,
        numX,
        numY,
        numZ
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMesh_setPreferSDFProjection_mut(
    self_: *mut PxTriangleMesh,
    preferProjection: bool
)
{
    PxTriangleMesh_setPreferSDFProjection_mut(
        self_,
        preferProjection
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMesh_getPreferSDFProjection(
    self_: *const PxTriangleMesh
) -> bool
{
    PxTriangleMesh_getPreferSDFProjection(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMesh_getMassInformation(
    self_: *const PxTriangleMesh,
    mass: *mut f32,
    localInertia: *mut PxMat33,
    localCenterOfMass: *mut PxVec3
)
{
    PxTriangleMesh_getMassInformation(
        self_,
        mass,
        localInertia,
        localCenterOfMass
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTetrahedron_new_alloc(

) -> *mut PxTetrahedron
{
    PxTetrahedron_new_alloc(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTetrahedron_new_alloc_1(
    p0: *const PxVec3,
    p1: *const PxVec3,
    p2: *const PxVec3,
    p3: *const PxVec3
) -> *mut PxTetrahedron
{
    PxTetrahedron_new_alloc_1(
        p0,
        p1,
        p2,
        p3
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTetrahedron_delete(
    self_: *mut PxTetrahedron
)
{
    PxTetrahedron_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSoftBodyAuxData_release_mut(
    self_: *mut PxSoftBodyAuxData
)
{
    PxSoftBodyAuxData_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTetrahedronMesh_getNbVertices(
    self_: *const PxTetrahedronMesh
) -> u32
{
    PxTetrahedronMesh_getNbVertices(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTetrahedronMesh_getVertices(
    self_: *const PxTetrahedronMesh
) -> *const PxVec3
{
    PxTetrahedronMesh_getVertices(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTetrahedronMesh_getNbTetrahedrons(
    self_: *const PxTetrahedronMesh
) -> u32
{
    PxTetrahedronMesh_getNbTetrahedrons(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTetrahedronMesh_getTetrahedrons(
    self_: *const PxTetrahedronMesh
) -> *const c_void
{
    PxTetrahedronMesh_getTetrahedrons(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTetrahedronMesh_getTetrahedronMeshFlags(
    self_: *const PxTetrahedronMesh
) -> PxTetrahedronMeshFlags
{
    PxTetrahedronMesh_getTetrahedronMeshFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTetrahedronMesh_getTetrahedraRemap(
    self_: *const PxTetrahedronMesh
) -> *const u32
{
    PxTetrahedronMesh_getTetrahedraRemap(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTetrahedronMesh_getLocalBounds(
    self_: *const PxTetrahedronMesh
) -> PxBounds3
{
    PxTetrahedronMesh_getLocalBounds(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTetrahedronMesh_release_mut(
    self_: *mut PxTetrahedronMesh
)
{
    PxTetrahedronMesh_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSoftBodyMesh_getCollisionMesh(
    self_: *const PxSoftBodyMesh
) -> *const PxTetrahedronMesh
{
    PxSoftBodyMesh_getCollisionMesh(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSoftBodyMesh_getCollisionMesh_mut(
    self_: *mut PxSoftBodyMesh
) -> *mut PxTetrahedronMesh
{
    PxSoftBodyMesh_getCollisionMesh_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSoftBodyMesh_getSimulationMesh(
    self_: *const PxSoftBodyMesh
) -> *const PxTetrahedronMesh
{
    PxSoftBodyMesh_getSimulationMesh(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSoftBodyMesh_getSimulationMesh_mut(
    self_: *mut PxSoftBodyMesh
) -> *mut PxTetrahedronMesh
{
    PxSoftBodyMesh_getSimulationMesh_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSoftBodyMesh_getSoftBodyAuxData(
    self_: *const PxSoftBodyMesh
) -> *const PxSoftBodyAuxData
{
    PxSoftBodyMesh_getSoftBodyAuxData(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSoftBodyMesh_getSoftBodyAuxData_mut(
    self_: *mut PxSoftBodyMesh
) -> *mut PxSoftBodyAuxData
{
    PxSoftBodyMesh_getSoftBodyAuxData_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSoftBodyMesh_release_mut(
    self_: *mut PxSoftBodyMesh
)
{
    PxSoftBodyMesh_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollisionMeshMappingData_release_mut(
    self_: *mut PxCollisionMeshMappingData
)
{
    PxCollisionMeshMappingData_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollisionTetrahedronMeshData_getMesh(
    self_: *const PxCollisionTetrahedronMeshData
) -> *const PxTetrahedronMeshData
{
    PxCollisionTetrahedronMeshData_getMesh(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollisionTetrahedronMeshData_getMesh_mut(
    self_: *mut PxCollisionTetrahedronMeshData
) -> *mut PxTetrahedronMeshData
{
    PxCollisionTetrahedronMeshData_getMesh_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollisionTetrahedronMeshData_getData(
    self_: *const PxCollisionTetrahedronMeshData
) -> *const PxSoftBodyCollisionData
{
    PxCollisionTetrahedronMeshData_getData(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollisionTetrahedronMeshData_getData_mut(
    self_: *mut PxCollisionTetrahedronMeshData
) -> *mut PxSoftBodyCollisionData
{
    PxCollisionTetrahedronMeshData_getData_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCollisionTetrahedronMeshData_release_mut(
    self_: *mut PxCollisionTetrahedronMeshData
)
{
    PxCollisionTetrahedronMeshData_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimulationTetrahedronMeshData_getMesh_mut(
    self_: *mut PxSimulationTetrahedronMeshData
) -> *mut PxTetrahedronMeshData
{
    PxSimulationTetrahedronMeshData_getMesh_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimulationTetrahedronMeshData_getData_mut(
    self_: *mut PxSimulationTetrahedronMeshData
) -> *mut PxSoftBodySimulationData
{
    PxSimulationTetrahedronMeshData_getData_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimulationTetrahedronMeshData_release_mut(
    self_: *mut PxSimulationTetrahedronMeshData
)
{
    PxSimulationTetrahedronMeshData_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxActor_release_mut(
    self_: *mut PxActor
)
{
    PxActor_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxActor_getType(
    self_: *const PxActor
) -> PxActorType
{
    PxActor_getType(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxActor_getScene(
    self_: *const PxActor
) -> *mut PxScene
{
    PxActor_getScene(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxActor_setName_mut(
    self_: *mut PxActor,
    name: *const c_char
)
{
    PxActor_setName_mut(
        self_,
        name
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxActor_getName(
    self_: *const PxActor
) -> *const c_char
{
    PxActor_getName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxActor_getWorldBounds(
    self_: *const PxActor,
    inflation: f32
) -> PxBounds3
{
    PxActor_getWorldBounds(
        self_,
        inflation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxActor_setActorFlag_mut(
    self_: *mut PxActor,
    flag: PxActorFlag,
    value: bool
)
{
    PxActor_setActorFlag_mut(
        self_,
        flag,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxActor_setActorFlags_mut(
    self_: *mut PxActor,
    inFlags: PxActorFlags
)
{
    PxActor_setActorFlags_mut(
        self_,
        inFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxActor_getActorFlags(
    self_: *const PxActor
) -> PxActorFlags
{
    PxActor_getActorFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxActor_setDominanceGroup_mut(
    self_: *mut PxActor,
    dominanceGroup: u8
)
{
    PxActor_setDominanceGroup_mut(
        self_,
        dominanceGroup
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxActor_getDominanceGroup(
    self_: *const PxActor
) -> u8
{
    PxActor_getDominanceGroup(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxActor_setOwnerClient_mut(
    self_: *mut PxActor,
    inClient: u8
)
{
    PxActor_setOwnerClient_mut(
        self_,
        inClient
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxActor_getOwnerClient(
    self_: *const PxActor
) -> u8
{
    PxActor_getOwnerClient(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxActor_getAggregate(
    self_: *const PxActor
) -> *mut PxAggregate
{
    PxActor_getAggregate(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetAggregateFilterHint(
    type_: PxAggregateType,
    enableSelfCollision: bool
) -> u32
{
    phys_PxGetAggregateFilterHint(
        type_,
        enableSelfCollision
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetAggregateSelfCollisionBit(
    hint: u32
) -> u32
{
    phys_PxGetAggregateSelfCollisionBit(
        hint
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetAggregateType(
    hint: u32
) -> PxAggregateType
{
    phys_PxGetAggregateType(
        hint
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAggregate_release_mut(
    self_: *mut PxAggregate
)
{
    PxAggregate_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAggregate_addActor_mut(
    self_: *mut PxAggregate,
    actor: *mut PxActor,
    bvh: *const PxBVH
) -> bool
{
    PxAggregate_addActor_mut(
        self_,
        actor,
        bvh
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAggregate_removeActor_mut(
    self_: *mut PxAggregate,
    actor: *mut PxActor
) -> bool
{
    PxAggregate_removeActor_mut(
        self_,
        actor
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAggregate_addArticulation_mut(
    self_: *mut PxAggregate,
    articulation: *mut PxArticulationReducedCoordinate
) -> bool
{
    PxAggregate_addArticulation_mut(
        self_,
        articulation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAggregate_removeArticulation_mut(
    self_: *mut PxAggregate,
    articulation: *mut PxArticulationReducedCoordinate
) -> bool
{
    PxAggregate_removeArticulation_mut(
        self_,
        articulation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAggregate_getNbActors(
    self_: *const PxAggregate
) -> u32
{
    PxAggregate_getNbActors(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAggregate_getMaxNbShapes(
    self_: *const PxAggregate
) -> u32
{
    PxAggregate_getMaxNbShapes(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAggregate_getActors(
    self_: *const PxAggregate,
    userBuffer: *mut *mut PxActor,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxAggregate_getActors(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAggregate_getScene_mut(
    self_: *mut PxAggregate
) -> *mut PxScene
{
    PxAggregate_getScene_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAggregate_getSelfCollision(
    self_: *const PxAggregate
) -> bool
{
    PxAggregate_getSelfCollision(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAggregate_getConcreteTypeName(
    self_: *const PxAggregate
) -> *const c_char
{
    PxAggregate_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintInvMassScale_new(

) -> PxConstraintInvMassScale
{
    PxConstraintInvMassScale_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintInvMassScale_new_1(
    lin0: f32,
    ang0: f32,
    lin1: f32,
    ang1: f32
) -> PxConstraintInvMassScale
{
    PxConstraintInvMassScale_new_1(
        lin0,
        ang0,
        lin1,
        ang1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintVisualizer_visualizeJointFrames_mut(
    self_: *mut PxConstraintVisualizer,
    parent: *const PxTransform,
    child: *const PxTransform
)
{
    PxConstraintVisualizer_visualizeJointFrames_mut(
        self_,
        parent,
        child
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintVisualizer_visualizeLinearLimit_mut(
    self_: *mut PxConstraintVisualizer,
    t0: *const PxTransform,
    t1: *const PxTransform,
    value: f32,
    active: bool
)
{
    PxConstraintVisualizer_visualizeLinearLimit_mut(
        self_,
        t0,
        t1,
        value,
        active
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintVisualizer_visualizeAngularLimit_mut(
    self_: *mut PxConstraintVisualizer,
    t0: *const PxTransform,
    lower: f32,
    upper: f32,
    active: bool
)
{
    PxConstraintVisualizer_visualizeAngularLimit_mut(
        self_,
        t0,
        lower,
        upper,
        active
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintVisualizer_visualizeLimitCone_mut(
    self_: *mut PxConstraintVisualizer,
    t: *const PxTransform,
    tanQSwingY: f32,
    tanQSwingZ: f32,
    active: bool
)
{
    PxConstraintVisualizer_visualizeLimitCone_mut(
        self_,
        t,
        tanQSwingY,
        tanQSwingZ,
        active
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintVisualizer_visualizeDoubleCone_mut(
    self_: *mut PxConstraintVisualizer,
    t: *const PxTransform,
    angle: f32,
    active: bool
)
{
    PxConstraintVisualizer_visualizeDoubleCone_mut(
        self_,
        t,
        angle,
        active
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintVisualizer_visualizeLine_mut(
    self_: *mut PxConstraintVisualizer,
    p0: *const PxVec3,
    p1: *const PxVec3,
    color: u32
)
{
    PxConstraintVisualizer_visualizeLine_mut(
        self_,
        p0,
        p1,
        color
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintConnector_prepareData_mut(
    self_: *mut PxConstraintConnector
) -> *mut c_void
{
    PxConstraintConnector_prepareData_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintConnector_onConstraintRelease_mut(
    self_: *mut PxConstraintConnector
)
{
    PxConstraintConnector_onConstraintRelease_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintConnector_onComShift_mut(
    self_: *mut PxConstraintConnector,
    actor: u32
)
{
    PxConstraintConnector_onComShift_mut(
        self_,
        actor
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintConnector_onOriginShift_mut(
    self_: *mut PxConstraintConnector,
    shift: *const PxVec3
)
{
    PxConstraintConnector_onOriginShift_mut(
        self_,
        shift
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintConnector_getSerializable_mut(
    self_: *mut PxConstraintConnector
) -> *mut PxBase
{
    PxConstraintConnector_getSerializable_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintConnector_getConstantBlock(
    self_: *const PxConstraintConnector
) -> *const c_void
{
    PxConstraintConnector_getConstantBlock(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintConnector_connectToConstraint_mut(
    self_: *mut PxConstraintConnector,
    anon_param0: *mut PxConstraint
)
{
    PxConstraintConnector_connectToConstraint_mut(
        self_,
        anon_param0
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintConnector_delete(
    self_: *mut PxConstraintConnector
)
{
    PxConstraintConnector_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSolverBody_new(

) -> PxSolverBody
{
    PxSolverBody_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSolverBodyData_projectVelocity(
    self_: *const PxSolverBodyData,
    lin: *const PxVec3,
    ang: *const PxVec3
) -> f32
{
    PxSolverBodyData_projectVelocity(
        self_,
        lin,
        ang
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSolverConstraintPrepDesc_delete(
    self_: *mut PxSolverConstraintPrepDesc
)
{
    PxSolverConstraintPrepDesc_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintAllocator_reserveConstraintData_mut(
    self_: *mut PxConstraintAllocator,
    byteSize: u32
) -> *mut u8
{
    PxConstraintAllocator_reserveConstraintData_mut(
        self_,
        byteSize
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintAllocator_reserveFrictionData_mut(
    self_: *mut PxConstraintAllocator,
    byteSize: u32
) -> *mut u8
{
    PxConstraintAllocator_reserveFrictionData_mut(
        self_,
        byteSize
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintAllocator_delete(
    self_: *mut PxConstraintAllocator
)
{
    PxConstraintAllocator_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationLimit_new(

) -> PxArticulationLimit
{
    PxArticulationLimit_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationLimit_new_1(
    low_: f32,
    high_: f32
) -> PxArticulationLimit
{
    PxArticulationLimit_new_1(
        low_,
        high_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationDrive_new(

) -> PxArticulationDrive
{
    PxArticulationDrive_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationDrive_new_1(
    stiffness_: f32,
    damping_: f32,
    maxForce_: f32,
    driveType_: PxArticulationDriveType
) -> PxArticulationDrive
{
    PxArticulationDrive_new_1(
        stiffness_,
        damping_,
        maxForce_,
        driveType_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTGSSolverBodyVel_projectVelocity(
    self_: *const PxTGSSolverBodyVel,
    lin: *const PxVec3,
    ang: *const PxVec3
) -> f32
{
    PxTGSSolverBodyVel_projectVelocity(
        self_,
        lin,
        ang
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTGSSolverBodyData_projectVelocity(
    self_: *const PxTGSSolverBodyData,
    linear: *const PxVec3,
    angular: *const PxVec3
) -> f32
{
    PxTGSSolverBodyData_projectVelocity(
        self_,
        linear,
        angular
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTGSSolverConstraintPrepDesc_delete(
    self_: *mut PxTGSSolverConstraintPrepDesc
)
{
    PxTGSSolverConstraintPrepDesc_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationAttachment_setRestLength_mut(
    self_: *mut PxArticulationAttachment,
    restLength: f32
)
{
    PxArticulationAttachment_setRestLength_mut(
        self_,
        restLength
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationAttachment_getRestLength(
    self_: *const PxArticulationAttachment
) -> f32
{
    PxArticulationAttachment_getRestLength(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationAttachment_setLimitParameters_mut(
    self_: *mut PxArticulationAttachment,
    parameters: *const PxArticulationTendonLimit
)
{
    PxArticulationAttachment_setLimitParameters_mut(
        self_,
        parameters
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationAttachment_getLimitParameters(
    self_: *const PxArticulationAttachment
) -> PxArticulationTendonLimit
{
    PxArticulationAttachment_getLimitParameters(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationAttachment_setRelativeOffset_mut(
    self_: *mut PxArticulationAttachment,
    offset: *const PxVec3
)
{
    PxArticulationAttachment_setRelativeOffset_mut(
        self_,
        offset
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationAttachment_getRelativeOffset(
    self_: *const PxArticulationAttachment
) -> PxVec3
{
    PxArticulationAttachment_getRelativeOffset(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationAttachment_setCoefficient_mut(
    self_: *mut PxArticulationAttachment,
    coefficient: f32
)
{
    PxArticulationAttachment_setCoefficient_mut(
        self_,
        coefficient
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationAttachment_getCoefficient(
    self_: *const PxArticulationAttachment
) -> f32
{
    PxArticulationAttachment_getCoefficient(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationAttachment_getLink(
    self_: *const PxArticulationAttachment
) -> *mut PxArticulationLink
{
    PxArticulationAttachment_getLink(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationAttachment_getParent(
    self_: *const PxArticulationAttachment
) -> *mut PxArticulationAttachment
{
    PxArticulationAttachment_getParent(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationAttachment_isLeaf(
    self_: *const PxArticulationAttachment
) -> bool
{
    PxArticulationAttachment_isLeaf(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationAttachment_getTendon(
    self_: *const PxArticulationAttachment
) -> *mut PxArticulationSpatialTendon
{
    PxArticulationAttachment_getTendon(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationAttachment_release_mut(
    self_: *mut PxArticulationAttachment
)
{
    PxArticulationAttachment_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationAttachment_getConcreteTypeName(
    self_: *const PxArticulationAttachment
) -> *const c_char
{
    PxArticulationAttachment_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationTendonJoint_setCoefficient_mut(
    self_: *mut PxArticulationTendonJoint,
    axis: PxArticulationAxis,
    coefficient: f32,
    recipCoefficient: f32
)
{
    PxArticulationTendonJoint_setCoefficient_mut(
        self_,
        axis,
        coefficient,
        recipCoefficient
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationTendonJoint_getCoefficient(
    self_: *const PxArticulationTendonJoint,
    axis: *mut PxArticulationAxis,
    coefficient: *mut f32,
    recipCoefficient: *mut f32
)
{
    PxArticulationTendonJoint_getCoefficient(
        self_,
        axis,
        coefficient,
        recipCoefficient
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationTendonJoint_getLink(
    self_: *const PxArticulationTendonJoint
) -> *mut PxArticulationLink
{
    PxArticulationTendonJoint_getLink(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationTendonJoint_getParent(
    self_: *const PxArticulationTendonJoint
) -> *mut PxArticulationTendonJoint
{
    PxArticulationTendonJoint_getParent(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationTendonJoint_getTendon(
    self_: *const PxArticulationTendonJoint
) -> *mut PxArticulationFixedTendon
{
    PxArticulationTendonJoint_getTendon(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationTendonJoint_release_mut(
    self_: *mut PxArticulationTendonJoint
)
{
    PxArticulationTendonJoint_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationTendonJoint_getConcreteTypeName(
    self_: *const PxArticulationTendonJoint
) -> *const c_char
{
    PxArticulationTendonJoint_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationTendon_setStiffness_mut(
    self_: *mut PxArticulationTendon,
    stiffness: f32
)
{
    PxArticulationTendon_setStiffness_mut(
        self_,
        stiffness
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationTendon_getStiffness(
    self_: *const PxArticulationTendon
) -> f32
{
    PxArticulationTendon_getStiffness(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationTendon_setDamping_mut(
    self_: *mut PxArticulationTendon,
    damping: f32
)
{
    PxArticulationTendon_setDamping_mut(
        self_,
        damping
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationTendon_getDamping(
    self_: *const PxArticulationTendon
) -> f32
{
    PxArticulationTendon_getDamping(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationTendon_setLimitStiffness_mut(
    self_: *mut PxArticulationTendon,
    stiffness: f32
)
{
    PxArticulationTendon_setLimitStiffness_mut(
        self_,
        stiffness
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationTendon_getLimitStiffness(
    self_: *const PxArticulationTendon
) -> f32
{
    PxArticulationTendon_getLimitStiffness(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationTendon_setOffset_mut(
    self_: *mut PxArticulationTendon,
    offset: f32,
    autowake: bool
)
{
    PxArticulationTendon_setOffset_mut(
        self_,
        offset,
        autowake
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationTendon_getOffset(
    self_: *const PxArticulationTendon
) -> f32
{
    PxArticulationTendon_getOffset(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationTendon_getArticulation(
    self_: *const PxArticulationTendon
) -> *mut PxArticulationReducedCoordinate
{
    PxArticulationTendon_getArticulation(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationTendon_release_mut(
    self_: *mut PxArticulationTendon
)
{
    PxArticulationTendon_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationSpatialTendon_createAttachment_mut(
    self_: *mut PxArticulationSpatialTendon,
    parent: *mut PxArticulationAttachment,
    coefficient: f32,
    relativeOffset: PxVec3,
    link: *mut PxArticulationLink
) -> *mut PxArticulationAttachment
{
    PxArticulationSpatialTendon_createAttachment_mut(
        self_,
        parent,
        coefficient,
        relativeOffset,
        link
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationSpatialTendon_getAttachments(
    self_: *const PxArticulationSpatialTendon,
    userBuffer: *mut *mut PxArticulationAttachment,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxArticulationSpatialTendon_getAttachments(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationSpatialTendon_getNbAttachments(
    self_: *const PxArticulationSpatialTendon
) -> u32
{
    PxArticulationSpatialTendon_getNbAttachments(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationSpatialTendon_getConcreteTypeName(
    self_: *const PxArticulationSpatialTendon
) -> *const c_char
{
    PxArticulationSpatialTendon_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationFixedTendon_createTendonJoint_mut(
    self_: *mut PxArticulationFixedTendon,
    parent: *mut PxArticulationTendonJoint,
    axis: PxArticulationAxis,
    coefficient: f32,
    recipCoefficient: f32,
    link: *mut PxArticulationLink
) -> *mut PxArticulationTendonJoint
{
    PxArticulationFixedTendon_createTendonJoint_mut(
        self_,
        parent,
        axis,
        coefficient,
        recipCoefficient,
        link
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationFixedTendon_getTendonJoints(
    self_: *const PxArticulationFixedTendon,
    userBuffer: *mut *mut PxArticulationTendonJoint,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxArticulationFixedTendon_getTendonJoints(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationFixedTendon_getNbTendonJoints(
    self_: *const PxArticulationFixedTendon
) -> u32
{
    PxArticulationFixedTendon_getNbTendonJoints(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationFixedTendon_setRestLength_mut(
    self_: *mut PxArticulationFixedTendon,
    restLength: f32
)
{
    PxArticulationFixedTendon_setRestLength_mut(
        self_,
        restLength
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationFixedTendon_getRestLength(
    self_: *const PxArticulationFixedTendon
) -> f32
{
    PxArticulationFixedTendon_getRestLength(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationFixedTendon_setLimitParameters_mut(
    self_: *mut PxArticulationFixedTendon,
    parameter: *const PxArticulationTendonLimit
)
{
    PxArticulationFixedTendon_setLimitParameters_mut(
        self_,
        parameter
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationFixedTendon_getLimitParameters(
    self_: *const PxArticulationFixedTendon
) -> PxArticulationTendonLimit
{
    PxArticulationFixedTendon_getLimitParameters(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationFixedTendon_getConcreteTypeName(
    self_: *const PxArticulationFixedTendon
) -> *const c_char
{
    PxArticulationFixedTendon_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationCache_new(

) -> PxArticulationCache
{
    PxArticulationCache_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationCache_release_mut(
    self_: *mut PxArticulationCache
)
{
    PxArticulationCache_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationSensor_release_mut(
    self_: *mut PxArticulationSensor
)
{
    PxArticulationSensor_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationSensor_getForces(
    self_: *const PxArticulationSensor
) -> PxSpatialForce
{
    PxArticulationSensor_getForces(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationSensor_getRelativePose(
    self_: *const PxArticulationSensor
) -> PxTransform
{
    PxArticulationSensor_getRelativePose(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationSensor_setRelativePose_mut(
    self_: *mut PxArticulationSensor,
    pose: *const PxTransform
)
{
    PxArticulationSensor_setRelativePose_mut(
        self_,
        pose
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationSensor_getLink(
    self_: *const PxArticulationSensor
) -> *mut PxArticulationLink
{
    PxArticulationSensor_getLink(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationSensor_getIndex(
    self_: *const PxArticulationSensor
) -> u32
{
    PxArticulationSensor_getIndex(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationSensor_getArticulation(
    self_: *const PxArticulationSensor
) -> *mut PxArticulationReducedCoordinate
{
    PxArticulationSensor_getArticulation(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationSensor_getFlags(
    self_: *const PxArticulationSensor
) -> PxArticulationSensorFlags
{
    PxArticulationSensor_getFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationSensor_setFlag_mut(
    self_: *mut PxArticulationSensor,
    flag: PxArticulationSensorFlag,
    enabled: bool
)
{
    PxArticulationSensor_setFlag_mut(
        self_,
        flag,
        enabled
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationSensor_getConcreteTypeName(
    self_: *const PxArticulationSensor
) -> *const c_char
{
    PxArticulationSensor_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getScene(
    self_: *const PxArticulationReducedCoordinate
) -> *mut PxScene
{
    PxArticulationReducedCoordinate_getScene(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_setSolverIterationCounts_mut(
    self_: *mut PxArticulationReducedCoordinate,
    minPositionIters: u32,
    minVelocityIters: u32
)
{
    PxArticulationReducedCoordinate_setSolverIterationCounts_mut(
        self_,
        minPositionIters,
        minVelocityIters
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getSolverIterationCounts(
    self_: *const PxArticulationReducedCoordinate,
    minPositionIters: *mut u32,
    minVelocityIters: *mut u32
)
{
    PxArticulationReducedCoordinate_getSolverIterationCounts(
        self_,
        minPositionIters,
        minVelocityIters
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_isSleeping(
    self_: *const PxArticulationReducedCoordinate
) -> bool
{
    PxArticulationReducedCoordinate_isSleeping(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_setSleepThreshold_mut(
    self_: *mut PxArticulationReducedCoordinate,
    threshold: f32
)
{
    PxArticulationReducedCoordinate_setSleepThreshold_mut(
        self_,
        threshold
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getSleepThreshold(
    self_: *const PxArticulationReducedCoordinate
) -> f32
{
    PxArticulationReducedCoordinate_getSleepThreshold(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_setStabilizationThreshold_mut(
    self_: *mut PxArticulationReducedCoordinate,
    threshold: f32
)
{
    PxArticulationReducedCoordinate_setStabilizationThreshold_mut(
        self_,
        threshold
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getStabilizationThreshold(
    self_: *const PxArticulationReducedCoordinate
) -> f32
{
    PxArticulationReducedCoordinate_getStabilizationThreshold(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_setWakeCounter_mut(
    self_: *mut PxArticulationReducedCoordinate,
    wakeCounterValue: f32
)
{
    PxArticulationReducedCoordinate_setWakeCounter_mut(
        self_,
        wakeCounterValue
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getWakeCounter(
    self_: *const PxArticulationReducedCoordinate
) -> f32
{
    PxArticulationReducedCoordinate_getWakeCounter(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_wakeUp_mut(
    self_: *mut PxArticulationReducedCoordinate
)
{
    PxArticulationReducedCoordinate_wakeUp_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_putToSleep_mut(
    self_: *mut PxArticulationReducedCoordinate
)
{
    PxArticulationReducedCoordinate_putToSleep_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_setMaxCOMLinearVelocity_mut(
    self_: *mut PxArticulationReducedCoordinate,
    maxLinearVelocity: f32
)
{
    PxArticulationReducedCoordinate_setMaxCOMLinearVelocity_mut(
        self_,
        maxLinearVelocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getMaxCOMLinearVelocity(
    self_: *const PxArticulationReducedCoordinate
) -> f32
{
    PxArticulationReducedCoordinate_getMaxCOMLinearVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_setMaxCOMAngularVelocity_mut(
    self_: *mut PxArticulationReducedCoordinate,
    maxAngularVelocity: f32
)
{
    PxArticulationReducedCoordinate_setMaxCOMAngularVelocity_mut(
        self_,
        maxAngularVelocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getMaxCOMAngularVelocity(
    self_: *const PxArticulationReducedCoordinate
) -> f32
{
    PxArticulationReducedCoordinate_getMaxCOMAngularVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_createLink_mut(
    self_: *mut PxArticulationReducedCoordinate,
    parent: *mut PxArticulationLink,
    pose: *const PxTransform
) -> *mut PxArticulationLink
{
    PxArticulationReducedCoordinate_createLink_mut(
        self_,
        parent,
        pose
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_release_mut(
    self_: *mut PxArticulationReducedCoordinate
)
{
    PxArticulationReducedCoordinate_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getNbLinks(
    self_: *const PxArticulationReducedCoordinate
) -> u32
{
    PxArticulationReducedCoordinate_getNbLinks(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getLinks(
    self_: *const PxArticulationReducedCoordinate,
    userBuffer: *mut *mut PxArticulationLink,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxArticulationReducedCoordinate_getLinks(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getNbShapes(
    self_: *const PxArticulationReducedCoordinate
) -> u32
{
    PxArticulationReducedCoordinate_getNbShapes(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_setName_mut(
    self_: *mut PxArticulationReducedCoordinate,
    name: *const c_char
)
{
    PxArticulationReducedCoordinate_setName_mut(
        self_,
        name
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getName(
    self_: *const PxArticulationReducedCoordinate
) -> *const c_char
{
    PxArticulationReducedCoordinate_getName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getWorldBounds(
    self_: *const PxArticulationReducedCoordinate,
    inflation: f32
) -> PxBounds3
{
    PxArticulationReducedCoordinate_getWorldBounds(
        self_,
        inflation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getAggregate(
    self_: *const PxArticulationReducedCoordinate
) -> *mut PxAggregate
{
    PxArticulationReducedCoordinate_getAggregate(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_setArticulationFlags_mut(
    self_: *mut PxArticulationReducedCoordinate,
    flags: PxArticulationFlags
)
{
    PxArticulationReducedCoordinate_setArticulationFlags_mut(
        self_,
        flags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_setArticulationFlag_mut(
    self_: *mut PxArticulationReducedCoordinate,
    flag: PxArticulationFlag,
    value: bool
)
{
    PxArticulationReducedCoordinate_setArticulationFlag_mut(
        self_,
        flag,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getArticulationFlags(
    self_: *const PxArticulationReducedCoordinate
) -> PxArticulationFlags
{
    PxArticulationReducedCoordinate_getArticulationFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getDofs(
    self_: *const PxArticulationReducedCoordinate
) -> u32
{
    PxArticulationReducedCoordinate_getDofs(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_createCache(
    self_: *const PxArticulationReducedCoordinate
) -> *mut PxArticulationCache
{
    PxArticulationReducedCoordinate_createCache(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getCacheDataSize(
    self_: *const PxArticulationReducedCoordinate
) -> u32
{
    PxArticulationReducedCoordinate_getCacheDataSize(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_zeroCache(
    self_: *const PxArticulationReducedCoordinate,
    cache: *mut PxArticulationCache
)
{
    PxArticulationReducedCoordinate_zeroCache(
        self_,
        cache
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_applyCache_mut(
    self_: *mut PxArticulationReducedCoordinate,
    cache: *mut PxArticulationCache,
    flags: PxArticulationCacheFlags,
    autowake: bool
)
{
    PxArticulationReducedCoordinate_applyCache_mut(
        self_,
        cache,
        flags,
        autowake
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_copyInternalStateToCache(
    self_: *const PxArticulationReducedCoordinate,
    cache: *mut PxArticulationCache,
    flags: PxArticulationCacheFlags
)
{
    PxArticulationReducedCoordinate_copyInternalStateToCache(
        self_,
        cache,
        flags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_packJointData(
    self_: *const PxArticulationReducedCoordinate,
    maximum: *const f32,
    reduced: *mut f32
)
{
    PxArticulationReducedCoordinate_packJointData(
        self_,
        maximum,
        reduced
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_unpackJointData(
    self_: *const PxArticulationReducedCoordinate,
    reduced: *const f32,
    maximum: *mut f32
)
{
    PxArticulationReducedCoordinate_unpackJointData(
        self_,
        reduced,
        maximum
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_commonInit(
    self_: *const PxArticulationReducedCoordinate
)
{
    PxArticulationReducedCoordinate_commonInit(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_computeGeneralizedGravityForce(
    self_: *const PxArticulationReducedCoordinate,
    cache: *mut PxArticulationCache
)
{
    PxArticulationReducedCoordinate_computeGeneralizedGravityForce(
        self_,
        cache
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_computeCoriolisAndCentrifugalForce(
    self_: *const PxArticulationReducedCoordinate,
    cache: *mut PxArticulationCache
)
{
    PxArticulationReducedCoordinate_computeCoriolisAndCentrifugalForce(
        self_,
        cache
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_computeGeneralizedExternalForce(
    self_: *const PxArticulationReducedCoordinate,
    cache: *mut PxArticulationCache
)
{
    PxArticulationReducedCoordinate_computeGeneralizedExternalForce(
        self_,
        cache
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_computeJointAcceleration(
    self_: *const PxArticulationReducedCoordinate,
    cache: *mut PxArticulationCache
)
{
    PxArticulationReducedCoordinate_computeJointAcceleration(
        self_,
        cache
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_computeJointForce(
    self_: *const PxArticulationReducedCoordinate,
    cache: *mut PxArticulationCache
)
{
    PxArticulationReducedCoordinate_computeJointForce(
        self_,
        cache
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_computeDenseJacobian(
    self_: *const PxArticulationReducedCoordinate,
    cache: *mut PxArticulationCache,
    nRows: *mut u32,
    nCols: *mut u32
)
{
    PxArticulationReducedCoordinate_computeDenseJacobian(
        self_,
        cache,
        nRows,
        nCols
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_computeCoefficientMatrix(
    self_: *const PxArticulationReducedCoordinate,
    cache: *mut PxArticulationCache
)
{
    PxArticulationReducedCoordinate_computeCoefficientMatrix(
        self_,
        cache
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_computeLambda(
    self_: *const PxArticulationReducedCoordinate,
    cache: *mut PxArticulationCache,
    initialState: *mut PxArticulationCache,
    jointTorque: *const f32,
    maxIter: u32
) -> bool
{
    PxArticulationReducedCoordinate_computeLambda(
        self_,
        cache,
        initialState,
        jointTorque,
        maxIter
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_computeGeneralizedMassMatrix(
    self_: *const PxArticulationReducedCoordinate,
    cache: *mut PxArticulationCache
)
{
    PxArticulationReducedCoordinate_computeGeneralizedMassMatrix(
        self_,
        cache
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_addLoopJoint_mut(
    self_: *mut PxArticulationReducedCoordinate,
    joint: *mut PxConstraint
)
{
    PxArticulationReducedCoordinate_addLoopJoint_mut(
        self_,
        joint
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_removeLoopJoint_mut(
    self_: *mut PxArticulationReducedCoordinate,
    joint: *mut PxConstraint
)
{
    PxArticulationReducedCoordinate_removeLoopJoint_mut(
        self_,
        joint
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getNbLoopJoints(
    self_: *const PxArticulationReducedCoordinate
) -> u32
{
    PxArticulationReducedCoordinate_getNbLoopJoints(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getLoopJoints(
    self_: *const PxArticulationReducedCoordinate,
    userBuffer: *mut *mut PxConstraint,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxArticulationReducedCoordinate_getLoopJoints(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getCoefficientMatrixSize(
    self_: *const PxArticulationReducedCoordinate
) -> u32
{
    PxArticulationReducedCoordinate_getCoefficientMatrixSize(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_setRootGlobalPose_mut(
    self_: *mut PxArticulationReducedCoordinate,
    pose: *const PxTransform,
    autowake: bool
)
{
    PxArticulationReducedCoordinate_setRootGlobalPose_mut(
        self_,
        pose,
        autowake
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getRootGlobalPose(
    self_: *const PxArticulationReducedCoordinate
) -> PxTransform
{
    PxArticulationReducedCoordinate_getRootGlobalPose(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_setRootLinearVelocity_mut(
    self_: *mut PxArticulationReducedCoordinate,
    linearVelocity: *const PxVec3,
    autowake: bool
)
{
    PxArticulationReducedCoordinate_setRootLinearVelocity_mut(
        self_,
        linearVelocity,
        autowake
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getRootLinearVelocity(
    self_: *const PxArticulationReducedCoordinate
) -> PxVec3
{
    PxArticulationReducedCoordinate_getRootLinearVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_setRootAngularVelocity_mut(
    self_: *mut PxArticulationReducedCoordinate,
    angularVelocity: *const PxVec3,
    autowake: bool
)
{
    PxArticulationReducedCoordinate_setRootAngularVelocity_mut(
        self_,
        angularVelocity,
        autowake
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getRootAngularVelocity(
    self_: *const PxArticulationReducedCoordinate
) -> PxVec3
{
    PxArticulationReducedCoordinate_getRootAngularVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getLinkAcceleration_mut(
    self_: *mut PxArticulationReducedCoordinate,
    linkId: u32
) -> PxSpatialVelocity
{
    PxArticulationReducedCoordinate_getLinkAcceleration_mut(
        self_,
        linkId
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getGpuArticulationIndex_mut(
    self_: *mut PxArticulationReducedCoordinate
) -> u32
{
    PxArticulationReducedCoordinate_getGpuArticulationIndex_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_createSpatialTendon_mut(
    self_: *mut PxArticulationReducedCoordinate
) -> *mut PxArticulationSpatialTendon
{
    PxArticulationReducedCoordinate_createSpatialTendon_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_createFixedTendon_mut(
    self_: *mut PxArticulationReducedCoordinate
) -> *mut PxArticulationFixedTendon
{
    PxArticulationReducedCoordinate_createFixedTendon_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_createSensor_mut(
    self_: *mut PxArticulationReducedCoordinate,
    link: *mut PxArticulationLink,
    relativePose: *const PxTransform
) -> *mut PxArticulationSensor
{
    PxArticulationReducedCoordinate_createSensor_mut(
        self_,
        link,
        relativePose
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getSpatialTendons(
    self_: *const PxArticulationReducedCoordinate,
    userBuffer: *mut *mut PxArticulationSpatialTendon,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxArticulationReducedCoordinate_getSpatialTendons(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getNbSpatialTendons_mut(
    self_: *mut PxArticulationReducedCoordinate
) -> u32
{
    PxArticulationReducedCoordinate_getNbSpatialTendons_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getFixedTendons(
    self_: *const PxArticulationReducedCoordinate,
    userBuffer: *mut *mut PxArticulationFixedTendon,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxArticulationReducedCoordinate_getFixedTendons(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getNbFixedTendons_mut(
    self_: *mut PxArticulationReducedCoordinate
) -> u32
{
    PxArticulationReducedCoordinate_getNbFixedTendons_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getSensors(
    self_: *const PxArticulationReducedCoordinate,
    userBuffer: *mut *mut PxArticulationSensor,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxArticulationReducedCoordinate_getSensors(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_getNbSensors_mut(
    self_: *mut PxArticulationReducedCoordinate
) -> u32
{
    PxArticulationReducedCoordinate_getNbSensors_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationReducedCoordinate_updateKinematic_mut(
    self_: *mut PxArticulationReducedCoordinate,
    flags: PxArticulationKinematicFlags
)
{
    PxArticulationReducedCoordinate_updateKinematic_mut(
        self_,
        flags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_getParentArticulationLink(
    self_: *const PxArticulationJointReducedCoordinate
) -> *mut PxArticulationLink
{
    PxArticulationJointReducedCoordinate_getParentArticulationLink(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_setParentPose_mut(
    self_: *mut PxArticulationJointReducedCoordinate,
    pose: *const PxTransform
)
{
    PxArticulationJointReducedCoordinate_setParentPose_mut(
        self_,
        pose
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_getParentPose(
    self_: *const PxArticulationJointReducedCoordinate
) -> PxTransform
{
    PxArticulationJointReducedCoordinate_getParentPose(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_getChildArticulationLink(
    self_: *const PxArticulationJointReducedCoordinate
) -> *mut PxArticulationLink
{
    PxArticulationJointReducedCoordinate_getChildArticulationLink(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_setChildPose_mut(
    self_: *mut PxArticulationJointReducedCoordinate,
    pose: *const PxTransform
)
{
    PxArticulationJointReducedCoordinate_setChildPose_mut(
        self_,
        pose
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_getChildPose(
    self_: *const PxArticulationJointReducedCoordinate
) -> PxTransform
{
    PxArticulationJointReducedCoordinate_getChildPose(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_setJointType_mut(
    self_: *mut PxArticulationJointReducedCoordinate,
    jointType: PxArticulationJointType
)
{
    PxArticulationJointReducedCoordinate_setJointType_mut(
        self_,
        jointType
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_getJointType(
    self_: *const PxArticulationJointReducedCoordinate
) -> PxArticulationJointType
{
    PxArticulationJointReducedCoordinate_getJointType(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_setMotion_mut(
    self_: *mut PxArticulationJointReducedCoordinate,
    axis: PxArticulationAxis,
    motion: PxArticulationMotion
)
{
    PxArticulationJointReducedCoordinate_setMotion_mut(
        self_,
        axis,
        motion
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_getMotion(
    self_: *const PxArticulationJointReducedCoordinate,
    axis: PxArticulationAxis
) -> PxArticulationMotion
{
    PxArticulationJointReducedCoordinate_getMotion(
        self_,
        axis
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_setLimitParams_mut(
    self_: *mut PxArticulationJointReducedCoordinate,
    axis: PxArticulationAxis,
    limit: *const PxArticulationLimit
)
{
    PxArticulationJointReducedCoordinate_setLimitParams_mut(
        self_,
        axis,
        limit
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_getLimitParams(
    self_: *const PxArticulationJointReducedCoordinate,
    axis: PxArticulationAxis
) -> PxArticulationLimit
{
    PxArticulationJointReducedCoordinate_getLimitParams(
        self_,
        axis
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_setDriveParams_mut(
    self_: *mut PxArticulationJointReducedCoordinate,
    axis: PxArticulationAxis,
    drive: *const PxArticulationDrive
)
{
    PxArticulationJointReducedCoordinate_setDriveParams_mut(
        self_,
        axis,
        drive
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_getDriveParams(
    self_: *const PxArticulationJointReducedCoordinate,
    axis: PxArticulationAxis
) -> PxArticulationDrive
{
    PxArticulationJointReducedCoordinate_getDriveParams(
        self_,
        axis
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_setDriveTarget_mut(
    self_: *mut PxArticulationJointReducedCoordinate,
    axis: PxArticulationAxis,
    target: f32,
    autowake: bool
)
{
    PxArticulationJointReducedCoordinate_setDriveTarget_mut(
        self_,
        axis,
        target,
        autowake
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_getDriveTarget(
    self_: *const PxArticulationJointReducedCoordinate,
    axis: PxArticulationAxis
) -> f32
{
    PxArticulationJointReducedCoordinate_getDriveTarget(
        self_,
        axis
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_setDriveVelocity_mut(
    self_: *mut PxArticulationJointReducedCoordinate,
    axis: PxArticulationAxis,
    targetVel: f32,
    autowake: bool
)
{
    PxArticulationJointReducedCoordinate_setDriveVelocity_mut(
        self_,
        axis,
        targetVel,
        autowake
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_getDriveVelocity(
    self_: *const PxArticulationJointReducedCoordinate,
    axis: PxArticulationAxis
) -> f32
{
    PxArticulationJointReducedCoordinate_getDriveVelocity(
        self_,
        axis
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_setArmature_mut(
    self_: *mut PxArticulationJointReducedCoordinate,
    axis: PxArticulationAxis,
    armature: f32
)
{
    PxArticulationJointReducedCoordinate_setArmature_mut(
        self_,
        axis,
        armature
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_getArmature(
    self_: *const PxArticulationJointReducedCoordinate,
    axis: PxArticulationAxis
) -> f32
{
    PxArticulationJointReducedCoordinate_getArmature(
        self_,
        axis
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_setFrictionCoefficient_mut(
    self_: *mut PxArticulationJointReducedCoordinate,
    coefficient: f32
)
{
    PxArticulationJointReducedCoordinate_setFrictionCoefficient_mut(
        self_,
        coefficient
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_getFrictionCoefficient(
    self_: *const PxArticulationJointReducedCoordinate
) -> f32
{
    PxArticulationJointReducedCoordinate_getFrictionCoefficient(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_setMaxJointVelocity_mut(
    self_: *mut PxArticulationJointReducedCoordinate,
    maxJointV: f32
)
{
    PxArticulationJointReducedCoordinate_setMaxJointVelocity_mut(
        self_,
        maxJointV
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_getMaxJointVelocity(
    self_: *const PxArticulationJointReducedCoordinate
) -> f32
{
    PxArticulationJointReducedCoordinate_getMaxJointVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_setJointPosition_mut(
    self_: *mut PxArticulationJointReducedCoordinate,
    axis: PxArticulationAxis,
    jointPos: f32
)
{
    PxArticulationJointReducedCoordinate_setJointPosition_mut(
        self_,
        axis,
        jointPos
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_getJointPosition(
    self_: *const PxArticulationJointReducedCoordinate,
    axis: PxArticulationAxis
) -> f32
{
    PxArticulationJointReducedCoordinate_getJointPosition(
        self_,
        axis
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_setJointVelocity_mut(
    self_: *mut PxArticulationJointReducedCoordinate,
    axis: PxArticulationAxis,
    jointVel: f32
)
{
    PxArticulationJointReducedCoordinate_setJointVelocity_mut(
        self_,
        axis,
        jointVel
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_getJointVelocity(
    self_: *const PxArticulationJointReducedCoordinate,
    axis: PxArticulationAxis
) -> f32
{
    PxArticulationJointReducedCoordinate_getJointVelocity(
        self_,
        axis
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationJointReducedCoordinate_getConcreteTypeName(
    self_: *const PxArticulationJointReducedCoordinate
) -> *const c_char
{
    PxArticulationJointReducedCoordinate_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_release_mut(
    self_: *mut PxShape
)
{
    PxShape_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_setGeometry_mut(
    self_: *mut PxShape,
    geometry: *const PxGeometry
)
{
    PxShape_setGeometry_mut(
        self_,
        geometry
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_getGeometry(
    self_: *const PxShape
) -> *const PxGeometry
{
    PxShape_getGeometry(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_getActor(
    self_: *const PxShape
) -> *mut PxRigidActor
{
    PxShape_getActor(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_setLocalPose_mut(
    self_: *mut PxShape,
    pose: *const PxTransform
)
{
    PxShape_setLocalPose_mut(
        self_,
        pose
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_getLocalPose(
    self_: *const PxShape
) -> PxTransform
{
    PxShape_getLocalPose(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_setSimulationFilterData_mut(
    self_: *mut PxShape,
    data: *const PxFilterData
)
{
    PxShape_setSimulationFilterData_mut(
        self_,
        data
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_getSimulationFilterData(
    self_: *const PxShape
) -> PxFilterData
{
    PxShape_getSimulationFilterData(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_setQueryFilterData_mut(
    self_: *mut PxShape,
    data: *const PxFilterData
)
{
    PxShape_setQueryFilterData_mut(
        self_,
        data
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_getQueryFilterData(
    self_: *const PxShape
) -> PxFilterData
{
    PxShape_getQueryFilterData(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_setMaterials_mut(
    self_: *mut PxShape,
    materials: *const *mut PxMaterial,
    materialCount: u16
)
{
    PxShape_setMaterials_mut(
        self_,
        materials,
        materialCount
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_getNbMaterials(
    self_: *const PxShape
) -> u16
{
    PxShape_getNbMaterials(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_getMaterials(
    self_: *const PxShape,
    userBuffer: *mut *mut PxMaterial,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxShape_getMaterials(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_getMaterialFromInternalFaceIndex(
    self_: *const PxShape,
    faceIndex: u32
) -> *mut PxBaseMaterial
{
    PxShape_getMaterialFromInternalFaceIndex(
        self_,
        faceIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_setContactOffset_mut(
    self_: *mut PxShape,
    contactOffset: f32
)
{
    PxShape_setContactOffset_mut(
        self_,
        contactOffset
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_getContactOffset(
    self_: *const PxShape
) -> f32
{
    PxShape_getContactOffset(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_setRestOffset_mut(
    self_: *mut PxShape,
    restOffset: f32
)
{
    PxShape_setRestOffset_mut(
        self_,
        restOffset
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_getRestOffset(
    self_: *const PxShape
) -> f32
{
    PxShape_getRestOffset(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_setDensityForFluid_mut(
    self_: *mut PxShape,
    densityForFluid: f32
)
{
    PxShape_setDensityForFluid_mut(
        self_,
        densityForFluid
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_getDensityForFluid(
    self_: *const PxShape
) -> f32
{
    PxShape_getDensityForFluid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_setTorsionalPatchRadius_mut(
    self_: *mut PxShape,
    radius: f32
)
{
    PxShape_setTorsionalPatchRadius_mut(
        self_,
        radius
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_getTorsionalPatchRadius(
    self_: *const PxShape
) -> f32
{
    PxShape_getTorsionalPatchRadius(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_setMinTorsionalPatchRadius_mut(
    self_: *mut PxShape,
    radius: f32
)
{
    PxShape_setMinTorsionalPatchRadius_mut(
        self_,
        radius
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_getMinTorsionalPatchRadius(
    self_: *const PxShape
) -> f32
{
    PxShape_getMinTorsionalPatchRadius(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_setFlag_mut(
    self_: *mut PxShape,
    flag: PxShapeFlag,
    value: bool
)
{
    PxShape_setFlag_mut(
        self_,
        flag,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_setFlags_mut(
    self_: *mut PxShape,
    inFlags: PxShapeFlags
)
{
    PxShape_setFlags_mut(
        self_,
        inFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_getFlags(
    self_: *const PxShape
) -> PxShapeFlags
{
    PxShape_getFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_isExclusive(
    self_: *const PxShape
) -> bool
{
    PxShape_isExclusive(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_setName_mut(
    self_: *mut PxShape,
    name: *const c_char
)
{
    PxShape_setName_mut(
        self_,
        name
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_getName(
    self_: *const PxShape
) -> *const c_char
{
    PxShape_getName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShape_getConcreteTypeName(
    self_: *const PxShape
) -> *const c_char
{
    PxShape_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidActor_release_mut(
    self_: *mut PxRigidActor
)
{
    PxRigidActor_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidActor_getInternalActorIndex(
    self_: *const PxRigidActor
) -> u32
{
    PxRigidActor_getInternalActorIndex(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidActor_getGlobalPose(
    self_: *const PxRigidActor
) -> PxTransform
{
    PxRigidActor_getGlobalPose(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidActor_setGlobalPose_mut(
    self_: *mut PxRigidActor,
    pose: *const PxTransform,
    autowake: bool
)
{
    PxRigidActor_setGlobalPose_mut(
        self_,
        pose,
        autowake
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidActor_attachShape_mut(
    self_: *mut PxRigidActor,
    shape: *mut PxShape
) -> bool
{
    PxRigidActor_attachShape_mut(
        self_,
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidActor_detachShape_mut(
    self_: *mut PxRigidActor,
    shape: *mut PxShape,
    wakeOnLostTouch: bool
)
{
    PxRigidActor_detachShape_mut(
        self_,
        shape,
        wakeOnLostTouch
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidActor_getNbShapes(
    self_: *const PxRigidActor
) -> u32
{
    PxRigidActor_getNbShapes(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidActor_getShapes(
    self_: *const PxRigidActor,
    userBuffer: *mut *mut PxShape,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxRigidActor_getShapes(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidActor_getNbConstraints(
    self_: *const PxRigidActor
) -> u32
{
    PxRigidActor_getNbConstraints(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidActor_getConstraints(
    self_: *const PxRigidActor,
    userBuffer: *mut *mut PxConstraint,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxRigidActor_getConstraints(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxNodeIndex_new(
    id: u32,
    articLinkId: u32
) -> PxNodeIndex
{
    PxNodeIndex_new(
        id,
        articLinkId
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxNodeIndex_new_1(
    id: u32
) -> PxNodeIndex
{
    PxNodeIndex_new_1(
        id
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxNodeIndex_index(
    self_: *const PxNodeIndex
) -> u32
{
    PxNodeIndex_index(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxNodeIndex_articulationLinkId(
    self_: *const PxNodeIndex
) -> u32
{
    PxNodeIndex_articulationLinkId(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxNodeIndex_isArticulation(
    self_: *const PxNodeIndex
) -> u32
{
    PxNodeIndex_isArticulation(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxNodeIndex_isStaticBody(
    self_: *const PxNodeIndex
) -> bool
{
    PxNodeIndex_isStaticBody(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxNodeIndex_isValid(
    self_: *const PxNodeIndex
) -> bool
{
    PxNodeIndex_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxNodeIndex_setIndices_mut(
    self_: *mut PxNodeIndex,
    index: u32,
    articLinkId: u32
)
{
    PxNodeIndex_setIndices_mut(
        self_,
        index,
        articLinkId
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxNodeIndex_setIndices_mut_1(
    self_: *mut PxNodeIndex,
    index: u32
)
{
    PxNodeIndex_setIndices_mut_1(
        self_,
        index
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxNodeIndex_getInd(
    self_: *const PxNodeIndex
) -> u64
{
    PxNodeIndex_getInd(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_setCMassLocalPose_mut(
    self_: *mut PxRigidBody,
    pose: *const PxTransform
)
{
    PxRigidBody_setCMassLocalPose_mut(
        self_,
        pose
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_getCMassLocalPose(
    self_: *const PxRigidBody
) -> PxTransform
{
    PxRigidBody_getCMassLocalPose(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_setMass_mut(
    self_: *mut PxRigidBody,
    mass: f32
)
{
    PxRigidBody_setMass_mut(
        self_,
        mass
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_getMass(
    self_: *const PxRigidBody
) -> f32
{
    PxRigidBody_getMass(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_getInvMass(
    self_: *const PxRigidBody
) -> f32
{
    PxRigidBody_getInvMass(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_setMassSpaceInertiaTensor_mut(
    self_: *mut PxRigidBody,
    m: *const PxVec3
)
{
    PxRigidBody_setMassSpaceInertiaTensor_mut(
        self_,
        m
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_getMassSpaceInertiaTensor(
    self_: *const PxRigidBody
) -> PxVec3
{
    PxRigidBody_getMassSpaceInertiaTensor(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_getMassSpaceInvInertiaTensor(
    self_: *const PxRigidBody
) -> PxVec3
{
    PxRigidBody_getMassSpaceInvInertiaTensor(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_setLinearDamping_mut(
    self_: *mut PxRigidBody,
    linDamp: f32
)
{
    PxRigidBody_setLinearDamping_mut(
        self_,
        linDamp
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_getLinearDamping(
    self_: *const PxRigidBody
) -> f32
{
    PxRigidBody_getLinearDamping(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_setAngularDamping_mut(
    self_: *mut PxRigidBody,
    angDamp: f32
)
{
    PxRigidBody_setAngularDamping_mut(
        self_,
        angDamp
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_getAngularDamping(
    self_: *const PxRigidBody
) -> f32
{
    PxRigidBody_getAngularDamping(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_getLinearVelocity(
    self_: *const PxRigidBody
) -> PxVec3
{
    PxRigidBody_getLinearVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_getAngularVelocity(
    self_: *const PxRigidBody
) -> PxVec3
{
    PxRigidBody_getAngularVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_setMaxLinearVelocity_mut(
    self_: *mut PxRigidBody,
    maxLinVel: f32
)
{
    PxRigidBody_setMaxLinearVelocity_mut(
        self_,
        maxLinVel
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_getMaxLinearVelocity(
    self_: *const PxRigidBody
) -> f32
{
    PxRigidBody_getMaxLinearVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_setMaxAngularVelocity_mut(
    self_: *mut PxRigidBody,
    maxAngVel: f32
)
{
    PxRigidBody_setMaxAngularVelocity_mut(
        self_,
        maxAngVel
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_getMaxAngularVelocity(
    self_: *const PxRigidBody
) -> f32
{
    PxRigidBody_getMaxAngularVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_addForce_mut(
    self_: *mut PxRigidBody,
    force: *const PxVec3,
    mode: PxForceMode,
    autowake: bool
)
{
    PxRigidBody_addForce_mut(
        self_,
        force,
        mode,
        autowake
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_addTorque_mut(
    self_: *mut PxRigidBody,
    torque: *const PxVec3,
    mode: PxForceMode,
    autowake: bool
)
{
    PxRigidBody_addTorque_mut(
        self_,
        torque,
        mode,
        autowake
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_clearForce_mut(
    self_: *mut PxRigidBody,
    mode: PxForceMode
)
{
    PxRigidBody_clearForce_mut(
        self_,
        mode
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_clearTorque_mut(
    self_: *mut PxRigidBody,
    mode: PxForceMode
)
{
    PxRigidBody_clearTorque_mut(
        self_,
        mode
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_setForceAndTorque_mut(
    self_: *mut PxRigidBody,
    force: *const PxVec3,
    torque: *const PxVec3,
    mode: PxForceMode
)
{
    PxRigidBody_setForceAndTorque_mut(
        self_,
        force,
        torque,
        mode
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_setRigidBodyFlag_mut(
    self_: *mut PxRigidBody,
    flag: PxRigidBodyFlag,
    value: bool
)
{
    PxRigidBody_setRigidBodyFlag_mut(
        self_,
        flag,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_setRigidBodyFlags_mut(
    self_: *mut PxRigidBody,
    inFlags: PxRigidBodyFlags
)
{
    PxRigidBody_setRigidBodyFlags_mut(
        self_,
        inFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_getRigidBodyFlags(
    self_: *const PxRigidBody
) -> PxRigidBodyFlags
{
    PxRigidBody_getRigidBodyFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_setMinCCDAdvanceCoefficient_mut(
    self_: *mut PxRigidBody,
    advanceCoefficient: f32
)
{
    PxRigidBody_setMinCCDAdvanceCoefficient_mut(
        self_,
        advanceCoefficient
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_getMinCCDAdvanceCoefficient(
    self_: *const PxRigidBody
) -> f32
{
    PxRigidBody_getMinCCDAdvanceCoefficient(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_setMaxDepenetrationVelocity_mut(
    self_: *mut PxRigidBody,
    biasClamp: f32
)
{
    PxRigidBody_setMaxDepenetrationVelocity_mut(
        self_,
        biasClamp
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_getMaxDepenetrationVelocity(
    self_: *const PxRigidBody
) -> f32
{
    PxRigidBody_getMaxDepenetrationVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_setMaxContactImpulse_mut(
    self_: *mut PxRigidBody,
    maxImpulse: f32
)
{
    PxRigidBody_setMaxContactImpulse_mut(
        self_,
        maxImpulse
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_getMaxContactImpulse(
    self_: *const PxRigidBody
) -> f32
{
    PxRigidBody_getMaxContactImpulse(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_setContactSlopCoefficient_mut(
    self_: *mut PxRigidBody,
    slopCoefficient: f32
)
{
    PxRigidBody_setContactSlopCoefficient_mut(
        self_,
        slopCoefficient
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_getContactSlopCoefficient(
    self_: *const PxRigidBody
) -> f32
{
    PxRigidBody_getContactSlopCoefficient(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBody_getInternalIslandNodeIndex(
    self_: *const PxRigidBody
) -> PxNodeIndex
{
    PxRigidBody_getInternalIslandNodeIndex(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationLink_release_mut(
    self_: *mut PxArticulationLink
)
{
    PxArticulationLink_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationLink_getArticulation(
    self_: *const PxArticulationLink
) -> *mut PxArticulationReducedCoordinate
{
    PxArticulationLink_getArticulation(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationLink_getInboundJoint(
    self_: *const PxArticulationLink
) -> *mut PxArticulationJointReducedCoordinate
{
    PxArticulationLink_getInboundJoint(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationLink_getInboundJointDof(
    self_: *const PxArticulationLink
) -> u32
{
    PxArticulationLink_getInboundJointDof(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationLink_getNbChildren(
    self_: *const PxArticulationLink
) -> u32
{
    PxArticulationLink_getNbChildren(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationLink_getLinkIndex(
    self_: *const PxArticulationLink
) -> u32
{
    PxArticulationLink_getLinkIndex(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationLink_getChildren(
    self_: *const PxArticulationLink,
    userBuffer: *mut *mut PxArticulationLink,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxArticulationLink_getChildren(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationLink_setCfmScale_mut(
    self_: *mut PxArticulationLink,
    cfm: f32
)
{
    PxArticulationLink_setCfmScale_mut(
        self_,
        cfm
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationLink_getCfmScale(
    self_: *const PxArticulationLink
) -> f32
{
    PxArticulationLink_getCfmScale(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationLink_getLinearVelocity(
    self_: *const PxArticulationLink
) -> PxVec3
{
    PxArticulationLink_getLinearVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationLink_getAngularVelocity(
    self_: *const PxArticulationLink
) -> PxVec3
{
    PxArticulationLink_getAngularVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxArticulationLink_getConcreteTypeName(
    self_: *const PxArticulationLink
) -> *const c_char
{
    PxArticulationLink_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConeLimitedConstraint_new(

) -> PxConeLimitedConstraint
{
    PxConeLimitedConstraint_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraint_release_mut(
    self_: *mut PxConstraint
)
{
    PxConstraint_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraint_getScene(
    self_: *const PxConstraint
) -> *mut PxScene
{
    PxConstraint_getScene(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraint_getActors(
    self_: *const PxConstraint,
    actor0: *mut *mut PxRigidActor,
    actor1: *mut *mut PxRigidActor
)
{
    PxConstraint_getActors(
        self_,
        actor0,
        actor1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraint_setActors_mut(
    self_: *mut PxConstraint,
    actor0: *mut PxRigidActor,
    actor1: *mut PxRigidActor
)
{
    PxConstraint_setActors_mut(
        self_,
        actor0,
        actor1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraint_markDirty_mut(
    self_: *mut PxConstraint
)
{
    PxConstraint_markDirty_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraint_getFlags(
    self_: *const PxConstraint
) -> PxConstraintFlags
{
    PxConstraint_getFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraint_setFlags_mut(
    self_: *mut PxConstraint,
    flags: PxConstraintFlags
)
{
    PxConstraint_setFlags_mut(
        self_,
        flags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraint_setFlag_mut(
    self_: *mut PxConstraint,
    flag: PxConstraintFlag,
    value: bool
)
{
    PxConstraint_setFlag_mut(
        self_,
        flag,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraint_getForce(
    self_: *const PxConstraint,
    linear: *mut PxVec3,
    angular: *mut PxVec3
)
{
    PxConstraint_getForce(
        self_,
        linear,
        angular
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraint_isValid(
    self_: *const PxConstraint
) -> bool
{
    PxConstraint_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraint_setBreakForce_mut(
    self_: *mut PxConstraint,
    linear: f32,
    angular: f32
)
{
    PxConstraint_setBreakForce_mut(
        self_,
        linear,
        angular
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraint_getBreakForce(
    self_: *const PxConstraint,
    linear: *mut f32,
    angular: *mut f32
)
{
    PxConstraint_getBreakForce(
        self_,
        linear,
        angular
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraint_setMinResponseThreshold_mut(
    self_: *mut PxConstraint,
    threshold: f32
)
{
    PxConstraint_setMinResponseThreshold_mut(
        self_,
        threshold
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraint_getMinResponseThreshold(
    self_: *const PxConstraint
) -> f32
{
    PxConstraint_getMinResponseThreshold(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraint_getExternalReference_mut(
    self_: *mut PxConstraint,
    typeID: *mut u32
) -> *mut c_void
{
    PxConstraint_getExternalReference_mut(
        self_,
        typeID
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraint_setConstraintFunctions_mut(
    self_: *mut PxConstraint,
    connector: *mut PxConstraintConnector,
    shaders: *const PxConstraintShaderTable
)
{
    PxConstraint_setConstraintFunctions_mut(
        self_,
        connector,
        shaders
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraint_getConcreteTypeName(
    self_: *const PxConstraint
) -> *const c_char
{
    PxConstraint_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_new(
    contactPatches: *const u8,
    contactPoints: *const u8,
    contactFaceIndices: *const u32,
    nbPatches: u32,
    nbContacts: u32
) -> PxContactStreamIterator
{
    PxContactStreamIterator_new(
        contactPatches,
        contactPoints,
        contactFaceIndices,
        nbPatches,
        nbContacts
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_hasNextPatch(
    self_: *const PxContactStreamIterator
) -> bool
{
    PxContactStreamIterator_hasNextPatch(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getTotalContactCount(
    self_: *const PxContactStreamIterator
) -> u32
{
    PxContactStreamIterator_getTotalContactCount(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getTotalPatchCount(
    self_: *const PxContactStreamIterator
) -> u32
{
    PxContactStreamIterator_getTotalPatchCount(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_nextPatch_mut(
    self_: *mut PxContactStreamIterator
)
{
    PxContactStreamIterator_nextPatch_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_hasNextContact(
    self_: *const PxContactStreamIterator
) -> bool
{
    PxContactStreamIterator_hasNextContact(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_nextContact_mut(
    self_: *mut PxContactStreamIterator
)
{
    PxContactStreamIterator_nextContact_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getContactNormal(
    self_: *const PxContactStreamIterator
) -> *const PxVec3
{
    PxContactStreamIterator_getContactNormal(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getInvMassScale0(
    self_: *const PxContactStreamIterator
) -> f32
{
    PxContactStreamIterator_getInvMassScale0(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getInvMassScale1(
    self_: *const PxContactStreamIterator
) -> f32
{
    PxContactStreamIterator_getInvMassScale1(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getInvInertiaScale0(
    self_: *const PxContactStreamIterator
) -> f32
{
    PxContactStreamIterator_getInvInertiaScale0(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getInvInertiaScale1(
    self_: *const PxContactStreamIterator
) -> f32
{
    PxContactStreamIterator_getInvInertiaScale1(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getMaxImpulse(
    self_: *const PxContactStreamIterator
) -> f32
{
    PxContactStreamIterator_getMaxImpulse(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getTargetVel(
    self_: *const PxContactStreamIterator
) -> *const PxVec3
{
    PxContactStreamIterator_getTargetVel(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getContactPoint(
    self_: *const PxContactStreamIterator
) -> *const PxVec3
{
    PxContactStreamIterator_getContactPoint(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getSeparation(
    self_: *const PxContactStreamIterator
) -> f32
{
    PxContactStreamIterator_getSeparation(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getFaceIndex0(
    self_: *const PxContactStreamIterator
) -> u32
{
    PxContactStreamIterator_getFaceIndex0(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getFaceIndex1(
    self_: *const PxContactStreamIterator
) -> u32
{
    PxContactStreamIterator_getFaceIndex1(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getStaticFriction(
    self_: *const PxContactStreamIterator
) -> f32
{
    PxContactStreamIterator_getStaticFriction(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getDynamicFriction(
    self_: *const PxContactStreamIterator
) -> f32
{
    PxContactStreamIterator_getDynamicFriction(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getRestitution(
    self_: *const PxContactStreamIterator
) -> f32
{
    PxContactStreamIterator_getRestitution(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getDamping(
    self_: *const PxContactStreamIterator
) -> f32
{
    PxContactStreamIterator_getDamping(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getMaterialFlags(
    self_: *const PxContactStreamIterator
) -> u32
{
    PxContactStreamIterator_getMaterialFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getMaterialIndex0(
    self_: *const PxContactStreamIterator
) -> u16
{
    PxContactStreamIterator_getMaterialIndex0(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_getMaterialIndex1(
    self_: *const PxContactStreamIterator
) -> u16
{
    PxContactStreamIterator_getMaterialIndex1(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactStreamIterator_advanceToIndex_mut(
    self_: *mut PxContactStreamIterator,
    initialIndex: u32
) -> bool
{
    PxContactStreamIterator_advanceToIndex_mut(
        self_,
        initialIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_getPoint(
    self_: *const PxContactSet,
    i: u32
) -> *const PxVec3
{
    PxContactSet_getPoint(
        self_,
        i
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_setPoint_mut(
    self_: *mut PxContactSet,
    i: u32,
    p: *const PxVec3
)
{
    PxContactSet_setPoint_mut(
        self_,
        i,
        p
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_getNormal(
    self_: *const PxContactSet,
    i: u32
) -> *const PxVec3
{
    PxContactSet_getNormal(
        self_,
        i
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_setNormal_mut(
    self_: *mut PxContactSet,
    i: u32,
    n: *const PxVec3
)
{
    PxContactSet_setNormal_mut(
        self_,
        i,
        n
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_getSeparation(
    self_: *const PxContactSet,
    i: u32
) -> f32
{
    PxContactSet_getSeparation(
        self_,
        i
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_setSeparation_mut(
    self_: *mut PxContactSet,
    i: u32,
    s: f32
)
{
    PxContactSet_setSeparation_mut(
        self_,
        i,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_getTargetVelocity(
    self_: *const PxContactSet,
    i: u32
) -> *const PxVec3
{
    PxContactSet_getTargetVelocity(
        self_,
        i
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_setTargetVelocity_mut(
    self_: *mut PxContactSet,
    i: u32,
    v: *const PxVec3
)
{
    PxContactSet_setTargetVelocity_mut(
        self_,
        i,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_getInternalFaceIndex0(
    self_: *const PxContactSet,
    i: u32
) -> u32
{
    PxContactSet_getInternalFaceIndex0(
        self_,
        i
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_getInternalFaceIndex1(
    self_: *const PxContactSet,
    i: u32
) -> u32
{
    PxContactSet_getInternalFaceIndex1(
        self_,
        i
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_getMaxImpulse(
    self_: *const PxContactSet,
    i: u32
) -> f32
{
    PxContactSet_getMaxImpulse(
        self_,
        i
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_setMaxImpulse_mut(
    self_: *mut PxContactSet,
    i: u32,
    s: f32
)
{
    PxContactSet_setMaxImpulse_mut(
        self_,
        i,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_getRestitution(
    self_: *const PxContactSet,
    i: u32
) -> f32
{
    PxContactSet_getRestitution(
        self_,
        i
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_setRestitution_mut(
    self_: *mut PxContactSet,
    i: u32,
    r: f32
)
{
    PxContactSet_setRestitution_mut(
        self_,
        i,
        r
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_getStaticFriction(
    self_: *const PxContactSet,
    i: u32
) -> f32
{
    PxContactSet_getStaticFriction(
        self_,
        i
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_setStaticFriction_mut(
    self_: *mut PxContactSet,
    i: u32,
    f: f32
)
{
    PxContactSet_setStaticFriction_mut(
        self_,
        i,
        f
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_getDynamicFriction(
    self_: *const PxContactSet,
    i: u32
) -> f32
{
    PxContactSet_getDynamicFriction(
        self_,
        i
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_setDynamicFriction_mut(
    self_: *mut PxContactSet,
    i: u32,
    f: f32
)
{
    PxContactSet_setDynamicFriction_mut(
        self_,
        i,
        f
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_ignore_mut(
    self_: *mut PxContactSet,
    i: u32
)
{
    PxContactSet_ignore_mut(
        self_,
        i
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_size(
    self_: *const PxContactSet
) -> u32
{
    PxContactSet_size(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_getInvMassScale0(
    self_: *const PxContactSet
) -> f32
{
    PxContactSet_getInvMassScale0(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_getInvMassScale1(
    self_: *const PxContactSet
) -> f32
{
    PxContactSet_getInvMassScale1(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_getInvInertiaScale0(
    self_: *const PxContactSet
) -> f32
{
    PxContactSet_getInvInertiaScale0(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_getInvInertiaScale1(
    self_: *const PxContactSet
) -> f32
{
    PxContactSet_getInvInertiaScale1(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_setInvMassScale0_mut(
    self_: *mut PxContactSet,
    scale: f32
)
{
    PxContactSet_setInvMassScale0_mut(
        self_,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_setInvMassScale1_mut(
    self_: *mut PxContactSet,
    scale: f32
)
{
    PxContactSet_setInvMassScale1_mut(
        self_,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_setInvInertiaScale0_mut(
    self_: *mut PxContactSet,
    scale: f32
)
{
    PxContactSet_setInvInertiaScale0_mut(
        self_,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactSet_setInvInertiaScale1_mut(
    self_: *mut PxContactSet,
    scale: f32
)
{
    PxContactSet_setInvInertiaScale1_mut(
        self_,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactModifyCallback_onContactModify_mut(
    self_: *mut PxContactModifyCallback,
    pairs: *mut PxContactModifyPair,
    count: u32
)
{
    PxContactModifyCallback_onContactModify_mut(
        self_,
        pairs,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCCDContactModifyCallback_onCCDContactModify_mut(
    self_: *mut PxCCDContactModifyCallback,
    pairs: *mut PxContactModifyPair,
    count: u32
)
{
    PxCCDContactModifyCallback_onCCDContactModify_mut(
        self_,
        pairs,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDeletionListener_onRelease_mut(
    self_: *mut PxDeletionListener,
    observed: *const PxBase,
    userData: *mut c_void,
    deletionEvent: PxDeletionEventFlag
)
{
    PxDeletionListener_onRelease_mut(
        self_,
        observed,
        userData,
        deletionEvent
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBaseMaterial_isKindOf(
    self_: *const PxBaseMaterial,
    name: *const c_char
) -> bool
{
    PxBaseMaterial_isKindOf(
        self_,
        name
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFEMMaterial_setYoungsModulus_mut(
    self_: *mut PxFEMMaterial,
    young: f32
)
{
    PxFEMMaterial_setYoungsModulus_mut(
        self_,
        young
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFEMMaterial_getYoungsModulus(
    self_: *const PxFEMMaterial
) -> f32
{
    PxFEMMaterial_getYoungsModulus(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFEMMaterial_setPoissons_mut(
    self_: *mut PxFEMMaterial,
    poisson: f32
)
{
    PxFEMMaterial_setPoissons_mut(
        self_,
        poisson
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFEMMaterial_getPoissons(
    self_: *const PxFEMMaterial
) -> f32
{
    PxFEMMaterial_getPoissons(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFEMMaterial_setDynamicFriction_mut(
    self_: *mut PxFEMMaterial,
    dynamicFriction: f32
)
{
    PxFEMMaterial_setDynamicFriction_mut(
        self_,
        dynamicFriction
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFEMMaterial_getDynamicFriction(
    self_: *const PxFEMMaterial
) -> f32
{
    PxFEMMaterial_getDynamicFriction(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFilterData_new(
    anon_param0: PxEMPTY
) -> PxFilterData
{
    PxFilterData_new(
        anon_param0
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFilterData_new_1(

) -> PxFilterData
{
    PxFilterData_new_1(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFilterData_new_2(
    w0: u32,
    w1: u32,
    w2: u32,
    w3: u32
) -> PxFilterData
{
    PxFilterData_new_2(
        w0,
        w1,
        w2,
        w3
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFilterData_setToDefault_mut(
    self_: *mut PxFilterData
)
{
    PxFilterData_setToDefault_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetFilterObjectType(
    attr: u32
) -> PxFilterObjectType
{
    phys_PxGetFilterObjectType(
        attr
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxFilterObjectIsKinematic(
    attr: u32
) -> bool
{
    phys_PxFilterObjectIsKinematic(
        attr
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxFilterObjectIsTrigger(
    attr: u32
) -> bool
{
    phys_PxFilterObjectIsTrigger(
        attr
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimulationFilterCallback_pairFound_mut(
    self_: *mut PxSimulationFilterCallback,
    pairID: u32,
    attributes0: u32,
    filterData0: PxFilterData,
    a0: *const PxActor,
    s0: *const PxShape,
    attributes1: u32,
    filterData1: PxFilterData,
    a1: *const PxActor,
    s1: *const PxShape,
    pairFlags: *mut PxPairFlags
) -> PxFilterFlags
{
    PxSimulationFilterCallback_pairFound_mut(
        self_,
        pairID,
        attributes0,
        filterData0,
        a0,
        s0,
        attributes1,
        filterData1,
        a1,
        s1,
        pairFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimulationFilterCallback_pairLost_mut(
    self_: *mut PxSimulationFilterCallback,
    pairID: u32,
    attributes0: u32,
    filterData0: PxFilterData,
    attributes1: u32,
    filterData1: PxFilterData,
    objectRemoved: bool
)
{
    PxSimulationFilterCallback_pairLost_mut(
        self_,
        pairID,
        attributes0,
        filterData0,
        attributes1,
        filterData1,
        objectRemoved
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimulationFilterCallback_statusChange_mut(
    self_: *mut PxSimulationFilterCallback,
    pairID: *mut u32,
    pairFlags: *mut PxPairFlags,
    filterFlags: *mut PxFilterFlags
) -> bool
{
    PxSimulationFilterCallback_statusChange_mut(
        self_,
        pairID,
        pairFlags,
        filterFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxLockedData_getDataAccessFlags_mut(
    self_: *mut PxLockedData
) -> PxDataAccessFlags
{
    PxLockedData_getDataAccessFlags_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxLockedData_unlock_mut(
    self_: *mut PxLockedData
)
{
    PxLockedData_unlock_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxLockedData_delete(
    self_: *mut PxLockedData
)
{
    PxLockedData_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMaterial_setDynamicFriction_mut(
    self_: *mut PxMaterial,
    coef: f32
)
{
    PxMaterial_setDynamicFriction_mut(
        self_,
        coef
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMaterial_getDynamicFriction(
    self_: *const PxMaterial
) -> f32
{
    PxMaterial_getDynamicFriction(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMaterial_setStaticFriction_mut(
    self_: *mut PxMaterial,
    coef: f32
)
{
    PxMaterial_setStaticFriction_mut(
        self_,
        coef
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMaterial_getStaticFriction(
    self_: *const PxMaterial
) -> f32
{
    PxMaterial_getStaticFriction(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMaterial_setRestitution_mut(
    self_: *mut PxMaterial,
    rest: f32
)
{
    PxMaterial_setRestitution_mut(
        self_,
        rest
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMaterial_getRestitution(
    self_: *const PxMaterial
) -> f32
{
    PxMaterial_getRestitution(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMaterial_setDamping_mut(
    self_: *mut PxMaterial,
    damping: f32
)
{
    PxMaterial_setDamping_mut(
        self_,
        damping
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMaterial_getDamping(
    self_: *const PxMaterial
) -> f32
{
    PxMaterial_getDamping(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMaterial_setFlag_mut(
    self_: *mut PxMaterial,
    flag: PxMaterialFlag,
    b: bool
)
{
    PxMaterial_setFlag_mut(
        self_,
        flag,
        b
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMaterial_setFlags_mut(
    self_: *mut PxMaterial,
    flags: PxMaterialFlags
)
{
    PxMaterial_setFlags_mut(
        self_,
        flags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMaterial_getFlags(
    self_: *const PxMaterial
) -> PxMaterialFlags
{
    PxMaterial_getFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMaterial_setFrictionCombineMode_mut(
    self_: *mut PxMaterial,
    combMode: PxCombineMode
)
{
    PxMaterial_setFrictionCombineMode_mut(
        self_,
        combMode
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMaterial_getFrictionCombineMode(
    self_: *const PxMaterial
) -> PxCombineMode
{
    PxMaterial_getFrictionCombineMode(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMaterial_setRestitutionCombineMode_mut(
    self_: *mut PxMaterial,
    combMode: PxCombineMode
)
{
    PxMaterial_setRestitutionCombineMode_mut(
        self_,
        combMode
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMaterial_getRestitutionCombineMode(
    self_: *const PxMaterial
) -> PxCombineMode
{
    PxMaterial_getRestitutionCombineMode(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMaterial_getConcreteTypeName(
    self_: *const PxMaterial
) -> *const c_char
{
    PxMaterial_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDiffuseParticleParams_new(

) -> PxDiffuseParticleParams
{
    PxDiffuseParticleParams_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDiffuseParticleParams_setToDefault_mut(
    self_: *mut PxDiffuseParticleParams
)
{
    PxDiffuseParticleParams_setToDefault_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxParticleMaterial_setFriction_mut(
    self_: *mut PxParticleMaterial,
    friction: f32
)
{
    PxParticleMaterial_setFriction_mut(
        self_,
        friction
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxParticleMaterial_getFriction(
    self_: *const PxParticleMaterial
) -> f32
{
    PxParticleMaterial_getFriction(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxParticleMaterial_setDamping_mut(
    self_: *mut PxParticleMaterial,
    damping: f32
)
{
    PxParticleMaterial_setDamping_mut(
        self_,
        damping
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxParticleMaterial_getDamping(
    self_: *const PxParticleMaterial
) -> f32
{
    PxParticleMaterial_getDamping(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxParticleMaterial_setAdhesion_mut(
    self_: *mut PxParticleMaterial,
    adhesion: f32
)
{
    PxParticleMaterial_setAdhesion_mut(
        self_,
        adhesion
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxParticleMaterial_getAdhesion(
    self_: *const PxParticleMaterial
) -> f32
{
    PxParticleMaterial_getAdhesion(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxParticleMaterial_setGravityScale_mut(
    self_: *mut PxParticleMaterial,
    scale: f32
)
{
    PxParticleMaterial_setGravityScale_mut(
        self_,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxParticleMaterial_getGravityScale(
    self_: *const PxParticleMaterial
) -> f32
{
    PxParticleMaterial_getGravityScale(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxParticleMaterial_setAdhesionRadiusScale_mut(
    self_: *mut PxParticleMaterial,
    scale: f32
)
{
    PxParticleMaterial_setAdhesionRadiusScale_mut(
        self_,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxParticleMaterial_getAdhesionRadiusScale(
    self_: *const PxParticleMaterial
) -> f32
{
    PxParticleMaterial_getAdhesionRadiusScale(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_release_mut(
    self_: *mut PxPhysics
)
{
    PxPhysics_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getFoundation_mut(
    self_: *mut PxPhysics
) -> *mut PxFoundation
{
    PxPhysics_getFoundation_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_createAggregate_mut(
    self_: *mut PxPhysics,
    maxActor: u32,
    maxShape: u32,
    filterHint: u32
) -> *mut PxAggregate
{
    PxPhysics_createAggregate_mut(
        self_,
        maxActor,
        maxShape,
        filterHint
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getTolerancesScale(
    self_: *const PxPhysics
) -> *const PxTolerancesScale
{
    PxPhysics_getTolerancesScale(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_createTriangleMesh_mut(
    self_: *mut PxPhysics,
    stream: *mut PxInputStream
) -> *mut PxTriangleMesh
{
    PxPhysics_createTriangleMesh_mut(
        self_,
        stream
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getNbTriangleMeshes(
    self_: *const PxPhysics
) -> u32
{
    PxPhysics_getNbTriangleMeshes(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getTriangleMeshes(
    self_: *const PxPhysics,
    userBuffer: *mut *mut PxTriangleMesh,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxPhysics_getTriangleMeshes(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_createTetrahedronMesh_mut(
    self_: *mut PxPhysics,
    stream: *mut PxInputStream
) -> *mut PxTetrahedronMesh
{
    PxPhysics_createTetrahedronMesh_mut(
        self_,
        stream
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_createSoftBodyMesh_mut(
    self_: *mut PxPhysics,
    stream: *mut PxInputStream
) -> *mut PxSoftBodyMesh
{
    PxPhysics_createSoftBodyMesh_mut(
        self_,
        stream
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getNbTetrahedronMeshes(
    self_: *const PxPhysics
) -> u32
{
    PxPhysics_getNbTetrahedronMeshes(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getTetrahedronMeshes(
    self_: *const PxPhysics,
    userBuffer: *mut *mut PxTetrahedronMesh,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxPhysics_getTetrahedronMeshes(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_createHeightField_mut(
    self_: *mut PxPhysics,
    stream: *mut PxInputStream
) -> *mut PxHeightField
{
    PxPhysics_createHeightField_mut(
        self_,
        stream
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getNbHeightFields(
    self_: *const PxPhysics
) -> u32
{
    PxPhysics_getNbHeightFields(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getHeightFields(
    self_: *const PxPhysics,
    userBuffer: *mut *mut PxHeightField,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxPhysics_getHeightFields(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_createConvexMesh_mut(
    self_: *mut PxPhysics,
    stream: *mut PxInputStream
) -> *mut PxConvexMesh
{
    PxPhysics_createConvexMesh_mut(
        self_,
        stream
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getNbConvexMeshes(
    self_: *const PxPhysics
) -> u32
{
    PxPhysics_getNbConvexMeshes(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getConvexMeshes(
    self_: *const PxPhysics,
    userBuffer: *mut *mut PxConvexMesh,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxPhysics_getConvexMeshes(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_createBVH_mut(
    self_: *mut PxPhysics,
    stream: *mut PxInputStream
) -> *mut PxBVH
{
    PxPhysics_createBVH_mut(
        self_,
        stream
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getNbBVHs(
    self_: *const PxPhysics
) -> u32
{
    PxPhysics_getNbBVHs(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getBVHs(
    self_: *const PxPhysics,
    userBuffer: *mut *mut PxBVH,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxPhysics_getBVHs(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_createScene_mut(
    self_: *mut PxPhysics,
    sceneDesc: *const PxSceneDesc
) -> *mut PxScene
{
    PxPhysics_createScene_mut(
        self_,
        sceneDesc
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getNbScenes(
    self_: *const PxPhysics
) -> u32
{
    PxPhysics_getNbScenes(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getScenes(
    self_: *const PxPhysics,
    userBuffer: *mut *mut PxScene,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxPhysics_getScenes(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_createRigidStatic_mut(
    self_: *mut PxPhysics,
    pose: *const PxTransform
) -> *mut PxRigidStatic
{
    PxPhysics_createRigidStatic_mut(
        self_,
        pose
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_createRigidDynamic_mut(
    self_: *mut PxPhysics,
    pose: *const PxTransform
) -> *mut PxRigidDynamic
{
    PxPhysics_createRigidDynamic_mut(
        self_,
        pose
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_createPruningStructure_mut(
    self_: *mut PxPhysics,
    actors: *const *mut PxRigidActor,
    nbActors: u32
) -> *mut PxPruningStructure
{
    PxPhysics_createPruningStructure_mut(
        self_,
        actors,
        nbActors
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_createShape_mut(
    self_: *mut PxPhysics,
    geometry: *const PxGeometry,
    material: *const PxMaterial,
    isExclusive: bool,
    shapeFlags: PxShapeFlags
) -> *mut PxShape
{
    PxPhysics_createShape_mut(
        self_,
        geometry,
        material,
        isExclusive,
        shapeFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_createShape_mut_1(
    self_: *mut PxPhysics,
    geometry: *const PxGeometry,
    materials: *const *mut PxMaterial,
    materialCount: u16,
    isExclusive: bool,
    shapeFlags: PxShapeFlags
) -> *mut PxShape
{
    PxPhysics_createShape_mut_1(
        self_,
        geometry,
        materials,
        materialCount,
        isExclusive,
        shapeFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getNbShapes(
    self_: *const PxPhysics
) -> u32
{
    PxPhysics_getNbShapes(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getShapes(
    self_: *const PxPhysics,
    userBuffer: *mut *mut PxShape,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxPhysics_getShapes(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_createConstraint_mut(
    self_: *mut PxPhysics,
    actor0: *mut PxRigidActor,
    actor1: *mut PxRigidActor,
    connector: *mut PxConstraintConnector,
    shaders: *const PxConstraintShaderTable,
    dataSize: u32
) -> *mut PxConstraint
{
    PxPhysics_createConstraint_mut(
        self_,
        actor0,
        actor1,
        connector,
        shaders,
        dataSize
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_createArticulationReducedCoordinate_mut(
    self_: *mut PxPhysics
) -> *mut PxArticulationReducedCoordinate
{
    PxPhysics_createArticulationReducedCoordinate_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_createMaterial_mut(
    self_: *mut PxPhysics,
    staticFriction: f32,
    dynamicFriction: f32,
    restitution: f32
) -> *mut PxMaterial
{
    PxPhysics_createMaterial_mut(
        self_,
        staticFriction,
        dynamicFriction,
        restitution
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getNbMaterials(
    self_: *const PxPhysics
) -> u32
{
    PxPhysics_getNbMaterials(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getMaterials(
    self_: *const PxPhysics,
    userBuffer: *mut *mut PxMaterial,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxPhysics_getMaterials(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_registerDeletionListener_mut(
    self_: *mut PxPhysics,
    observer: *mut PxDeletionListener,
    deletionEvents: *const PxDeletionEventFlags,
    restrictedObjectSet: bool
)
{
    PxPhysics_registerDeletionListener_mut(
        self_,
        observer,
        deletionEvents,
        restrictedObjectSet
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_unregisterDeletionListener_mut(
    self_: *mut PxPhysics,
    observer: *mut PxDeletionListener
)
{
    PxPhysics_unregisterDeletionListener_mut(
        self_,
        observer
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_registerDeletionListenerObjects_mut(
    self_: *mut PxPhysics,
    observer: *mut PxDeletionListener,
    observables: *const *const PxBase,
    observableCount: u32
)
{
    PxPhysics_registerDeletionListenerObjects_mut(
        self_,
        observer,
        observables,
        observableCount
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_unregisterDeletionListenerObjects_mut(
    self_: *mut PxPhysics,
    observer: *mut PxDeletionListener,
    observables: *const *const PxBase,
    observableCount: u32
)
{
    PxPhysics_unregisterDeletionListenerObjects_mut(
        self_,
        observer,
        observables,
        observableCount
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPhysics_getPhysicsInsertionCallback_mut(
    self_: *mut PxPhysics
) -> *mut PxInsertionCallback
{
    PxPhysics_getPhysicsInsertionCallback_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreatePhysics(
    version: u32,
    foundation: *mut PxFoundation,
    scale: *const PxTolerancesScale,
    trackOutstandingAllocations: bool,
    pvd: *mut PxPvd,
    omniPvd: *mut PxOmniPvd
) -> *mut PxPhysics
{
    phys_PxCreatePhysics(
        version,
        foundation,
        scale,
        trackOutstandingAllocations,
        pvd,
        omniPvd
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetPhysics(

) -> *mut PxPhysics
{
    phys_PxGetPhysics(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxActorShape_new(

) -> PxActorShape
{
    PxActorShape_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxActorShape_new_1(
    a: *mut PxRigidActor,
    s: *mut PxShape
) -> PxActorShape
{
    PxActorShape_new_1(
        a,
        s
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQueryCache_new(

) -> PxQueryCache
{
    PxQueryCache_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQueryCache_new_1(
    s: *mut PxShape,
    findex: u32
) -> PxQueryCache
{
    PxQueryCache_new_1(
        s,
        findex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQueryFilterData_new(

) -> PxQueryFilterData
{
    PxQueryFilterData_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQueryFilterData_new_1(
    fd: *const PxFilterData,
    f: PxQueryFlags
) -> PxQueryFilterData
{
    PxQueryFilterData_new_1(
        fd,
        f
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQueryFilterData_new_2(
    f: PxQueryFlags
) -> PxQueryFilterData
{
    PxQueryFilterData_new_2(
        f
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQueryFilterCallback_preFilter_mut(
    self_: *mut PxQueryFilterCallback,
    filterData: *const PxFilterData,
    shape: *const PxShape,
    actor: *const PxRigidActor,
    queryFlags: *mut PxHitFlags
) -> PxQueryHitType
{
    PxQueryFilterCallback_preFilter_mut(
        self_,
        filterData,
        shape,
        actor,
        queryFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQueryFilterCallback_postFilter_mut(
    self_: *mut PxQueryFilterCallback,
    filterData: *const PxFilterData,
    hit: *const PxQueryHit,
    shape: *const PxShape,
    actor: *const PxRigidActor
) -> PxQueryHitType
{
    PxQueryFilterCallback_postFilter_mut(
        self_,
        filterData,
        hit,
        shape,
        actor
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxQueryFilterCallback_delete(
    self_: *mut PxQueryFilterCallback
)
{
    PxQueryFilterCallback_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_setKinematicTarget_mut(
    self_: *mut PxRigidDynamic,
    destination: *const PxTransform
)
{
    PxRigidDynamic_setKinematicTarget_mut(
        self_,
        destination
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_getKinematicTarget(
    self_: *const PxRigidDynamic,
    target: *mut PxTransform
) -> bool
{
    PxRigidDynamic_getKinematicTarget(
        self_,
        target
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_isSleeping(
    self_: *const PxRigidDynamic
) -> bool
{
    PxRigidDynamic_isSleeping(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_setSleepThreshold_mut(
    self_: *mut PxRigidDynamic,
    threshold: f32
)
{
    PxRigidDynamic_setSleepThreshold_mut(
        self_,
        threshold
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_getSleepThreshold(
    self_: *const PxRigidDynamic
) -> f32
{
    PxRigidDynamic_getSleepThreshold(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_setStabilizationThreshold_mut(
    self_: *mut PxRigidDynamic,
    threshold: f32
)
{
    PxRigidDynamic_setStabilizationThreshold_mut(
        self_,
        threshold
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_getStabilizationThreshold(
    self_: *const PxRigidDynamic
) -> f32
{
    PxRigidDynamic_getStabilizationThreshold(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_getRigidDynamicLockFlags(
    self_: *const PxRigidDynamic
) -> PxRigidDynamicLockFlags
{
    PxRigidDynamic_getRigidDynamicLockFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_setRigidDynamicLockFlag_mut(
    self_: *mut PxRigidDynamic,
    flag: PxRigidDynamicLockFlag,
    value: bool
)
{
    PxRigidDynamic_setRigidDynamicLockFlag_mut(
        self_,
        flag,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_setRigidDynamicLockFlags_mut(
    self_: *mut PxRigidDynamic,
    flags: PxRigidDynamicLockFlags
)
{
    PxRigidDynamic_setRigidDynamicLockFlags_mut(
        self_,
        flags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_getLinearVelocity(
    self_: *const PxRigidDynamic
) -> PxVec3
{
    PxRigidDynamic_getLinearVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_setLinearVelocity_mut(
    self_: *mut PxRigidDynamic,
    linVel: *const PxVec3,
    autowake: bool
)
{
    PxRigidDynamic_setLinearVelocity_mut(
        self_,
        linVel,
        autowake
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_getAngularVelocity(
    self_: *const PxRigidDynamic
) -> PxVec3
{
    PxRigidDynamic_getAngularVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_setAngularVelocity_mut(
    self_: *mut PxRigidDynamic,
    angVel: *const PxVec3,
    autowake: bool
)
{
    PxRigidDynamic_setAngularVelocity_mut(
        self_,
        angVel,
        autowake
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_setWakeCounter_mut(
    self_: *mut PxRigidDynamic,
    wakeCounterValue: f32
)
{
    PxRigidDynamic_setWakeCounter_mut(
        self_,
        wakeCounterValue
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_getWakeCounter(
    self_: *const PxRigidDynamic
) -> f32
{
    PxRigidDynamic_getWakeCounter(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_wakeUp_mut(
    self_: *mut PxRigidDynamic
)
{
    PxRigidDynamic_wakeUp_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_putToSleep_mut(
    self_: *mut PxRigidDynamic
)
{
    PxRigidDynamic_putToSleep_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_setSolverIterationCounts_mut(
    self_: *mut PxRigidDynamic,
    minPositionIters: u32,
    minVelocityIters: u32
)
{
    PxRigidDynamic_setSolverIterationCounts_mut(
        self_,
        minPositionIters,
        minVelocityIters
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_getSolverIterationCounts(
    self_: *const PxRigidDynamic,
    minPositionIters: *mut u32,
    minVelocityIters: *mut u32
)
{
    PxRigidDynamic_getSolverIterationCounts(
        self_,
        minPositionIters,
        minVelocityIters
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_getContactReportThreshold(
    self_: *const PxRigidDynamic
) -> f32
{
    PxRigidDynamic_getContactReportThreshold(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_setContactReportThreshold_mut(
    self_: *mut PxRigidDynamic,
    threshold: f32
)
{
    PxRigidDynamic_setContactReportThreshold_mut(
        self_,
        threshold
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidDynamic_getConcreteTypeName(
    self_: *const PxRigidDynamic
) -> *const c_char
{
    PxRigidDynamic_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidStatic_getConcreteTypeName(
    self_: *const PxRigidStatic
) -> *const c_char
{
    PxRigidStatic_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQueryDesc_new(

) -> PxSceneQueryDesc
{
    PxSceneQueryDesc_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQueryDesc_setToDefault_mut(
    self_: *mut PxSceneQueryDesc
)
{
    PxSceneQueryDesc_setToDefault_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQueryDesc_isValid(
    self_: *const PxSceneQueryDesc
) -> bool
{
    PxSceneQueryDesc_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystemBase_setDynamicTreeRebuildRateHint_mut(
    self_: *mut PxSceneQuerySystemBase,
    dynamicTreeRebuildRateHint: u32
)
{
    PxSceneQuerySystemBase_setDynamicTreeRebuildRateHint_mut(
        self_,
        dynamicTreeRebuildRateHint
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystemBase_getDynamicTreeRebuildRateHint(
    self_: *const PxSceneQuerySystemBase
) -> u32
{
    PxSceneQuerySystemBase_getDynamicTreeRebuildRateHint(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystemBase_forceRebuildDynamicTree_mut(
    self_: *mut PxSceneQuerySystemBase,
    prunerIndex: u32
)
{
    PxSceneQuerySystemBase_forceRebuildDynamicTree_mut(
        self_,
        prunerIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystemBase_setUpdateMode_mut(
    self_: *mut PxSceneQuerySystemBase,
    updateMode: PxSceneQueryUpdateMode
)
{
    PxSceneQuerySystemBase_setUpdateMode_mut(
        self_,
        updateMode
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystemBase_getUpdateMode(
    self_: *const PxSceneQuerySystemBase
) -> PxSceneQueryUpdateMode
{
    PxSceneQuerySystemBase_getUpdateMode(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystemBase_getStaticTimestamp(
    self_: *const PxSceneQuerySystemBase
) -> u32
{
    PxSceneQuerySystemBase_getStaticTimestamp(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystemBase_flushUpdates_mut(
    self_: *mut PxSceneQuerySystemBase
)
{
    PxSceneQuerySystemBase_flushUpdates_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystemBase_raycast(
    self_: *const PxSceneQuerySystemBase,
    origin: *const PxVec3,
    unitDir: *const PxVec3,
    distance: f32,
    hitCall: *mut PxRaycastCallback,
    hitFlags: PxHitFlags,
    filterData: *const PxQueryFilterData,
    filterCall: *mut PxQueryFilterCallback,
    cache: *const PxQueryCache,
    queryFlags: PxGeometryQueryFlags
) -> bool
{
    PxSceneQuerySystemBase_raycast(
        self_,
        origin,
        unitDir,
        distance,
        hitCall,
        hitFlags,
        filterData,
        filterCall,
        cache,
        queryFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystemBase_sweep(
    self_: *const PxSceneQuerySystemBase,
    geometry: *const PxGeometry,
    pose: *const PxTransform,
    unitDir: *const PxVec3,
    distance: f32,
    hitCall: *mut PxSweepCallback,
    hitFlags: PxHitFlags,
    filterData: *const PxQueryFilterData,
    filterCall: *mut PxQueryFilterCallback,
    cache: *const PxQueryCache,
    inflation: f32,
    queryFlags: PxGeometryQueryFlags
) -> bool
{
    PxSceneQuerySystemBase_sweep(
        self_,
        geometry,
        pose,
        unitDir,
        distance,
        hitCall,
        hitFlags,
        filterData,
        filterCall,
        cache,
        inflation,
        queryFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystemBase_overlap(
    self_: *const PxSceneQuerySystemBase,
    geometry: *const PxGeometry,
    pose: *const PxTransform,
    hitCall: *mut PxOverlapCallback,
    filterData: *const PxQueryFilterData,
    filterCall: *mut PxQueryFilterCallback,
    cache: *const PxQueryCache,
    queryFlags: PxGeometryQueryFlags
) -> bool
{
    PxSceneQuerySystemBase_overlap(
        self_,
        geometry,
        pose,
        hitCall,
        filterData,
        filterCall,
        cache,
        queryFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneSQSystem_setSceneQueryUpdateMode_mut(
    self_: *mut PxSceneSQSystem,
    updateMode: PxSceneQueryUpdateMode
)
{
    PxSceneSQSystem_setSceneQueryUpdateMode_mut(
        self_,
        updateMode
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneSQSystem_getSceneQueryUpdateMode(
    self_: *const PxSceneSQSystem
) -> PxSceneQueryUpdateMode
{
    PxSceneSQSystem_getSceneQueryUpdateMode(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneSQSystem_getSceneQueryStaticTimestamp(
    self_: *const PxSceneSQSystem
) -> u32
{
    PxSceneSQSystem_getSceneQueryStaticTimestamp(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneSQSystem_flushQueryUpdates_mut(
    self_: *mut PxSceneSQSystem
)
{
    PxSceneSQSystem_flushQueryUpdates_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneSQSystem_forceDynamicTreeRebuild_mut(
    self_: *mut PxSceneSQSystem,
    rebuildStaticStructure: bool,
    rebuildDynamicStructure: bool
)
{
    PxSceneSQSystem_forceDynamicTreeRebuild_mut(
        self_,
        rebuildStaticStructure,
        rebuildDynamicStructure
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneSQSystem_getStaticStructure(
    self_: *const PxSceneSQSystem
) -> PxPruningStructureType
{
    PxSceneSQSystem_getStaticStructure(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneSQSystem_getDynamicStructure(
    self_: *const PxSceneSQSystem
) -> PxPruningStructureType
{
    PxSceneSQSystem_getDynamicStructure(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneSQSystem_sceneQueriesUpdate_mut(
    self_: *mut PxSceneSQSystem,
    completionTask: *mut PxBaseTask,
    controlSimulation: bool
)
{
    PxSceneSQSystem_sceneQueriesUpdate_mut(
        self_,
        completionTask,
        controlSimulation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneSQSystem_checkQueries_mut(
    self_: *mut PxSceneSQSystem,
    block: bool
) -> bool
{
    PxSceneSQSystem_checkQueries_mut(
        self_,
        block
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneSQSystem_fetchQueries_mut(
    self_: *mut PxSceneSQSystem,
    block: bool
) -> bool
{
    PxSceneSQSystem_fetchQueries_mut(
        self_,
        block
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystem_release_mut(
    self_: *mut PxSceneQuerySystem
)
{
    PxSceneQuerySystem_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystem_acquireReference_mut(
    self_: *mut PxSceneQuerySystem
)
{
    PxSceneQuerySystem_acquireReference_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystem_preallocate_mut(
    self_: *mut PxSceneQuerySystem,
    prunerIndex: u32,
    nbShapes: u32
)
{
    PxSceneQuerySystem_preallocate_mut(
        self_,
        prunerIndex,
        nbShapes
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystem_flushMemory_mut(
    self_: *mut PxSceneQuerySystem
)
{
    PxSceneQuerySystem_flushMemory_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystem_addSQShape_mut(
    self_: *mut PxSceneQuerySystem,
    actor: *const PxRigidActor,
    shape: *const PxShape,
    bounds: *const PxBounds3,
    transform: *const PxTransform,
    compoundHandle: *const u32,
    hasPruningStructure: bool
)
{
    PxSceneQuerySystem_addSQShape_mut(
        self_,
        actor,
        shape,
        bounds,
        transform,
        compoundHandle,
        hasPruningStructure
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystem_removeSQShape_mut(
    self_: *mut PxSceneQuerySystem,
    actor: *const PxRigidActor,
    shape: *const PxShape
)
{
    PxSceneQuerySystem_removeSQShape_mut(
        self_,
        actor,
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystem_updateSQShape_mut(
    self_: *mut PxSceneQuerySystem,
    actor: *const PxRigidActor,
    shape: *const PxShape,
    transform: *const PxTransform
)
{
    PxSceneQuerySystem_updateSQShape_mut(
        self_,
        actor,
        shape,
        transform
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystem_addSQCompound_mut(
    self_: *mut PxSceneQuerySystem,
    actor: *const PxRigidActor,
    shapes: *mut *const PxShape,
    bvh: *const PxBVH,
    transforms: *const PxTransform
) -> u32
{
    PxSceneQuerySystem_addSQCompound_mut(
        self_,
        actor,
        shapes,
        bvh,
        transforms
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystem_removeSQCompound_mut(
    self_: *mut PxSceneQuerySystem,
    compoundHandle: u32
)
{
    PxSceneQuerySystem_removeSQCompound_mut(
        self_,
        compoundHandle
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystem_updateSQCompound_mut(
    self_: *mut PxSceneQuerySystem,
    compoundHandle: u32,
    compoundTransform: *const PxTransform
)
{
    PxSceneQuerySystem_updateSQCompound_mut(
        self_,
        compoundHandle,
        compoundTransform
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystem_shiftOrigin_mut(
    self_: *mut PxSceneQuerySystem,
    shift: *const PxVec3
)
{
    PxSceneQuerySystem_shiftOrigin_mut(
        self_,
        shift
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystem_merge_mut(
    self_: *mut PxSceneQuerySystem,
    pruningStructure: *const PxPruningStructure
)
{
    PxSceneQuerySystem_merge_mut(
        self_,
        pruningStructure
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystem_getHandle(
    self_: *const PxSceneQuerySystem,
    actor: *const PxRigidActor,
    shape: *const PxShape,
    prunerIndex: *mut u32
) -> u32
{
    PxSceneQuerySystem_getHandle(
        self_,
        actor,
        shape,
        prunerIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystem_sync_mut(
    self_: *mut PxSceneQuerySystem,
    prunerIndex: u32,
    handles: *const u32,
    indices: *const u32,
    bounds: *const PxBounds3,
    transforms: *const PxTransformPadded,
    count: u32,
    ignoredIndices: *const PxBitMap
)
{
    PxSceneQuerySystem_sync_mut(
        self_,
        prunerIndex,
        handles,
        indices,
        bounds,
        transforms,
        count,
        ignoredIndices
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystem_finalizeUpdates_mut(
    self_: *mut PxSceneQuerySystem
)
{
    PxSceneQuerySystem_finalizeUpdates_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystem_prepareSceneQueryBuildStep_mut(
    self_: *mut PxSceneQuerySystem,
    prunerIndex: u32
) -> *mut c_void
{
    PxSceneQuerySystem_prepareSceneQueryBuildStep_mut(
        self_,
        prunerIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQuerySystem_sceneQueryBuildStep_mut(
    self_: *mut PxSceneQuerySystem,
    handle: *mut c_void
)
{
    PxSceneQuerySystem_sceneQueryBuildStep_mut(
        self_,
        handle
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhaseDesc_new(
    type_: PxBroadPhaseType
) -> PxBroadPhaseDesc
{
    PxBroadPhaseDesc_new(
        type_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhaseDesc_isValid(
    self_: *const PxBroadPhaseDesc
) -> bool
{
    PxBroadPhaseDesc_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetBroadPhaseStaticFilterGroup(

) -> u32
{
    phys_PxGetBroadPhaseStaticFilterGroup(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetBroadPhaseDynamicFilterGroup(
    id: u32
) -> u32
{
    phys_PxGetBroadPhaseDynamicFilterGroup(
        id
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetBroadPhaseKinematicFilterGroup(
    id: u32
) -> u32
{
    phys_PxGetBroadPhaseKinematicFilterGroup(
        id
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhaseUpdateData_new(
    created: *const u32,
    nbCreated: u32,
    updated: *const u32,
    nbUpdated: u32,
    removed: *const u32,
    nbRemoved: u32,
    bounds: *const PxBounds3,
    groups: *const u32,
    distances: *const f32,
    capacity: u32
) -> PxBroadPhaseUpdateData
{
    PxBroadPhaseUpdateData_new(
        created,
        nbCreated,
        updated,
        nbUpdated,
        removed,
        nbRemoved,
        bounds,
        groups,
        distances,
        capacity
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhaseResults_new(

) -> PxBroadPhaseResults
{
    PxBroadPhaseResults_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhaseRegions_getNbRegions(
    self_: *const PxBroadPhaseRegions
) -> u32
{
    PxBroadPhaseRegions_getNbRegions(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhaseRegions_getRegions(
    self_: *const PxBroadPhaseRegions,
    userBuffer: *mut PxBroadPhaseRegionInfo,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxBroadPhaseRegions_getRegions(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhaseRegions_addRegion_mut(
    self_: *mut PxBroadPhaseRegions,
    region: *const PxBroadPhaseRegion,
    populateRegion: bool,
    bounds: *const PxBounds3,
    distances: *const f32
) -> u32
{
    PxBroadPhaseRegions_addRegion_mut(
        self_,
        region,
        populateRegion,
        bounds,
        distances
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhaseRegions_removeRegion_mut(
    self_: *mut PxBroadPhaseRegions,
    handle: u32
) -> bool
{
    PxBroadPhaseRegions_removeRegion_mut(
        self_,
        handle
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhaseRegions_getNbOutOfBoundsObjects(
    self_: *const PxBroadPhaseRegions
) -> u32
{
    PxBroadPhaseRegions_getNbOutOfBoundsObjects(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhaseRegions_getOutOfBoundsObjects(
    self_: *const PxBroadPhaseRegions
) -> *const u32
{
    PxBroadPhaseRegions_getOutOfBoundsObjects(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhase_release_mut(
    self_: *mut PxBroadPhase
)
{
    PxBroadPhase_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhase_getType(
    self_: *const PxBroadPhase
) -> PxBroadPhaseType
{
    PxBroadPhase_getType(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhase_getCaps(
    self_: *const PxBroadPhase,
    caps: *mut PxBroadPhaseCaps
)
{
    PxBroadPhase_getCaps(
        self_,
        caps
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhase_getRegions_mut(
    self_: *mut PxBroadPhase
) -> *mut PxBroadPhaseRegions
{
    PxBroadPhase_getRegions_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhase_getAllocator_mut(
    self_: *mut PxBroadPhase
) -> *mut PxAllocatorCallback
{
    PxBroadPhase_getAllocator_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhase_getContextID(
    self_: *const PxBroadPhase
) -> u64
{
    PxBroadPhase_getContextID(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhase_setScratchBlock_mut(
    self_: *mut PxBroadPhase,
    scratchBlock: *mut c_void,
    size: u32
)
{
    PxBroadPhase_setScratchBlock_mut(
        self_,
        scratchBlock,
        size
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhase_update_mut(
    self_: *mut PxBroadPhase,
    updateData: *const PxBroadPhaseUpdateData,
    continuation: *mut PxBaseTask
)
{
    PxBroadPhase_update_mut(
        self_,
        updateData,
        continuation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhase_fetchResults_mut(
    self_: *mut PxBroadPhase,
    results: *mut PxBroadPhaseResults
)
{
    PxBroadPhase_fetchResults_mut(
        self_,
        results
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhase_update_mut_1(
    self_: *mut PxBroadPhase,
    results: *mut PxBroadPhaseResults,
    updateData: *const PxBroadPhaseUpdateData
)
{
    PxBroadPhase_update_mut_1(
        self_,
        results,
        updateData
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateBroadPhase(
    desc: *const PxBroadPhaseDesc
) -> *mut PxBroadPhase
{
    phys_PxCreateBroadPhase(
        desc
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAABBManager_release_mut(
    self_: *mut PxAABBManager
)
{
    PxAABBManager_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAABBManager_getBroadPhase_mut(
    self_: *mut PxAABBManager
) -> *mut PxBroadPhase
{
    PxAABBManager_getBroadPhase_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAABBManager_getBounds(
    self_: *const PxAABBManager
) -> *const PxBounds3
{
    PxAABBManager_getBounds(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAABBManager_getDistances(
    self_: *const PxAABBManager
) -> *const f32
{
    PxAABBManager_getDistances(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAABBManager_getGroups(
    self_: *const PxAABBManager
) -> *const u32
{
    PxAABBManager_getGroups(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAABBManager_getCapacity(
    self_: *const PxAABBManager
) -> u32
{
    PxAABBManager_getCapacity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAABBManager_addObject_mut(
    self_: *mut PxAABBManager,
    index: u32,
    bounds: *const PxBounds3,
    group: u32,
    distance: f32
)
{
    PxAABBManager_addObject_mut(
        self_,
        index,
        bounds,
        group,
        distance
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAABBManager_removeObject_mut(
    self_: *mut PxAABBManager,
    index: u32
)
{
    PxAABBManager_removeObject_mut(
        self_,
        index
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAABBManager_updateObject_mut(
    self_: *mut PxAABBManager,
    index: u32,
    bounds: *const PxBounds3,
    distance: *const f32
)
{
    PxAABBManager_updateObject_mut(
        self_,
        index,
        bounds,
        distance
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAABBManager_update_mut(
    self_: *mut PxAABBManager,
    continuation: *mut PxBaseTask
)
{
    PxAABBManager_update_mut(
        self_,
        continuation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAABBManager_fetchResults_mut(
    self_: *mut PxAABBManager,
    results: *mut PxBroadPhaseResults
)
{
    PxAABBManager_fetchResults_mut(
        self_,
        results
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxAABBManager_update_mut_1(
    self_: *mut PxAABBManager,
    results: *mut PxBroadPhaseResults
)
{
    PxAABBManager_update_mut_1(
        self_,
        results
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateAABBManager(
    broadphase: *mut PxBroadPhase
) -> *mut PxAABBManager
{
    phys_PxCreateAABBManager(
        broadphase
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneLimits_new(

) -> PxSceneLimits
{
    PxSceneLimits_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneLimits_setToDefault_mut(
    self_: *mut PxSceneLimits
)
{
    PxSceneLimits_setToDefault_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneLimits_isValid(
    self_: *const PxSceneLimits
) -> bool
{
    PxSceneLimits_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxgDynamicsMemoryConfig_new(

) -> PxgDynamicsMemoryConfig
{
    PxgDynamicsMemoryConfig_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxgDynamicsMemoryConfig_isValid(
    self_: *const PxgDynamicsMemoryConfig
) -> bool
{
    PxgDynamicsMemoryConfig_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneDesc_new(
    scale: *const PxTolerancesScale
) -> PxSceneDesc
{
    PxSceneDesc_new(
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneDesc_setToDefault_mut(
    self_: *mut PxSceneDesc,
    scale: *const PxTolerancesScale
)
{
    PxSceneDesc_setToDefault_mut(
        self_,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneDesc_isValid(
    self_: *const PxSceneDesc
) -> bool
{
    PxSceneDesc_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneDesc_getTolerancesScale(
    self_: *const PxSceneDesc
) -> *const PxTolerancesScale
{
    PxSceneDesc_getTolerancesScale(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimulationStatistics_getNbBroadPhaseAdds(
    self_: *const PxSimulationStatistics
) -> u32
{
    PxSimulationStatistics_getNbBroadPhaseAdds(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimulationStatistics_getNbBroadPhaseRemoves(
    self_: *const PxSimulationStatistics
) -> u32
{
    PxSimulationStatistics_getNbBroadPhaseRemoves(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimulationStatistics_getRbPairStats(
    self_: *const PxSimulationStatistics,
    pairType: RbPairStatsType,
    g0: PxGeometryType,
    g1: PxGeometryType
) -> u32
{
    PxSimulationStatistics_getRbPairStats(
        self_,
        pairType,
        g0,
        g1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimulationStatistics_new(

) -> PxSimulationStatistics
{
    PxSimulationStatistics_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvdSceneClient_setScenePvdFlag_mut(
    self_: *mut PxPvdSceneClient,
    flag: PxPvdSceneFlag,
    value: bool
)
{
    PxPvdSceneClient_setScenePvdFlag_mut(
        self_,
        flag,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvdSceneClient_setScenePvdFlags_mut(
    self_: *mut PxPvdSceneClient,
    flags: PxPvdSceneFlags
)
{
    PxPvdSceneClient_setScenePvdFlags_mut(
        self_,
        flags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvdSceneClient_getScenePvdFlags(
    self_: *const PxPvdSceneClient
) -> PxPvdSceneFlags
{
    PxPvdSceneClient_getScenePvdFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvdSceneClient_updateCamera_mut(
    self_: *mut PxPvdSceneClient,
    name: *const c_char,
    origin: *const PxVec3,
    up: *const PxVec3,
    target: *const PxVec3
)
{
    PxPvdSceneClient_updateCamera_mut(
        self_,
        name,
        origin,
        up,
        target
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvdSceneClient_drawPoints_mut(
    self_: *mut PxPvdSceneClient,
    points: *const PxDebugPoint,
    count: u32
)
{
    PxPvdSceneClient_drawPoints_mut(
        self_,
        points,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvdSceneClient_drawLines_mut(
    self_: *mut PxPvdSceneClient,
    lines: *const PxDebugLine,
    count: u32
)
{
    PxPvdSceneClient_drawLines_mut(
        self_,
        lines,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvdSceneClient_drawTriangles_mut(
    self_: *mut PxPvdSceneClient,
    triangles: *const PxDebugTriangle,
    count: u32
)
{
    PxPvdSceneClient_drawTriangles_mut(
        self_,
        triangles,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvdSceneClient_drawText_mut(
    self_: *mut PxPvdSceneClient,
    text: *const PxDebugText
)
{
    PxPvdSceneClient_drawText_mut(
        self_,
        text
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDominanceGroupPair_new(
    a: u8,
    b: u8
) -> PxDominanceGroupPair
{
    PxDominanceGroupPair_new(
        a,
        b
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhaseCallback_delete(
    self_: *mut PxBroadPhaseCallback
)
{
    PxBroadPhaseCallback_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhaseCallback_onObjectOutOfBounds_mut(
    self_: *mut PxBroadPhaseCallback,
    shape: *mut PxShape,
    actor: *mut PxActor
)
{
    PxBroadPhaseCallback_onObjectOutOfBounds_mut(
        self_,
        shape,
        actor
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhaseCallback_onObjectOutOfBounds_mut_1(
    self_: *mut PxBroadPhaseCallback,
    aggregate: *mut PxAggregate
)
{
    PxBroadPhaseCallback_onObjectOutOfBounds_mut_1(
        self_,
        aggregate
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_release_mut(
    self_: *mut PxScene
)
{
    PxScene_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setFlag_mut(
    self_: *mut PxScene,
    flag: PxSceneFlag,
    value: bool
)
{
    PxScene_setFlag_mut(
        self_,
        flag,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getFlags(
    self_: *const PxScene
) -> PxSceneFlags
{
    PxScene_getFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setLimits_mut(
    self_: *mut PxScene,
    limits: *const PxSceneLimits
)
{
    PxScene_setLimits_mut(
        self_,
        limits
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getLimits(
    self_: *const PxScene
) -> PxSceneLimits
{
    PxScene_getLimits(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getPhysics_mut(
    self_: *mut PxScene
) -> *mut PxPhysics
{
    PxScene_getPhysics_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getTimestamp(
    self_: *const PxScene
) -> u32
{
    PxScene_getTimestamp(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_addArticulation_mut(
    self_: *mut PxScene,
    articulation: *mut PxArticulationReducedCoordinate
) -> bool
{
    PxScene_addArticulation_mut(
        self_,
        articulation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_removeArticulation_mut(
    self_: *mut PxScene,
    articulation: *mut PxArticulationReducedCoordinate,
    wakeOnLostTouch: bool
)
{
    PxScene_removeArticulation_mut(
        self_,
        articulation,
        wakeOnLostTouch
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_addActor_mut(
    self_: *mut PxScene,
    actor: *mut PxActor,
    bvh: *const PxBVH
) -> bool
{
    PxScene_addActor_mut(
        self_,
        actor,
        bvh
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_addActors_mut(
    self_: *mut PxScene,
    actors: *const *mut PxActor,
    nbActors: u32
) -> bool
{
    PxScene_addActors_mut(
        self_,
        actors,
        nbActors
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_addActors_mut_1(
    self_: *mut PxScene,
    pruningStructure: *const PxPruningStructure
) -> bool
{
    PxScene_addActors_mut_1(
        self_,
        pruningStructure
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_removeActor_mut(
    self_: *mut PxScene,
    actor: *mut PxActor,
    wakeOnLostTouch: bool
)
{
    PxScene_removeActor_mut(
        self_,
        actor,
        wakeOnLostTouch
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_removeActors_mut(
    self_: *mut PxScene,
    actors: *const *mut PxActor,
    nbActors: u32,
    wakeOnLostTouch: bool
)
{
    PxScene_removeActors_mut(
        self_,
        actors,
        nbActors,
        wakeOnLostTouch
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_addAggregate_mut(
    self_: *mut PxScene,
    aggregate: *mut PxAggregate
) -> bool
{
    PxScene_addAggregate_mut(
        self_,
        aggregate
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_removeAggregate_mut(
    self_: *mut PxScene,
    aggregate: *mut PxAggregate,
    wakeOnLostTouch: bool
)
{
    PxScene_removeAggregate_mut(
        self_,
        aggregate,
        wakeOnLostTouch
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_addCollection_mut(
    self_: *mut PxScene,
    collection: *const PxCollection
) -> bool
{
    PxScene_addCollection_mut(
        self_,
        collection
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getNbActors(
    self_: *const PxScene,
    types: PxActorTypeFlags
) -> u32
{
    PxScene_getNbActors(
        self_,
        types
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getActors(
    self_: *const PxScene,
    types: PxActorTypeFlags,
    userBuffer: *mut *mut PxActor,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxScene_getActors(
        self_,
        types,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getActiveActors_mut(
    self_: *mut PxScene,
    nbActorsOut: *mut u32
) -> *mut *mut PxActor
{
    PxScene_getActiveActors_mut(
        self_,
        nbActorsOut
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getNbArticulations(
    self_: *const PxScene
) -> u32
{
    PxScene_getNbArticulations(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getArticulations(
    self_: *const PxScene,
    userBuffer: *mut *mut PxArticulationReducedCoordinate,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxScene_getArticulations(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getNbConstraints(
    self_: *const PxScene
) -> u32
{
    PxScene_getNbConstraints(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getConstraints(
    self_: *const PxScene,
    userBuffer: *mut *mut PxConstraint,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxScene_getConstraints(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getNbAggregates(
    self_: *const PxScene
) -> u32
{
    PxScene_getNbAggregates(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getAggregates(
    self_: *const PxScene,
    userBuffer: *mut *mut PxAggregate,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxScene_getAggregates(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setDominanceGroupPair_mut(
    self_: *mut PxScene,
    group1: u8,
    group2: u8,
    dominance: *const PxDominanceGroupPair
)
{
    PxScene_setDominanceGroupPair_mut(
        self_,
        group1,
        group2,
        dominance
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getDominanceGroupPair(
    self_: *const PxScene,
    group1: u8,
    group2: u8
) -> PxDominanceGroupPair
{
    PxScene_getDominanceGroupPair(
        self_,
        group1,
        group2
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getCpuDispatcher(
    self_: *const PxScene
) -> *mut PxCpuDispatcher
{
    PxScene_getCpuDispatcher(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_createClient_mut(
    self_: *mut PxScene
) -> u8
{
    PxScene_createClient_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setSimulationEventCallback_mut(
    self_: *mut PxScene,
    callback: *mut PxSimulationEventCallback
)
{
    PxScene_setSimulationEventCallback_mut(
        self_,
        callback
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getSimulationEventCallback(
    self_: *const PxScene
) -> *mut PxSimulationEventCallback
{
    PxScene_getSimulationEventCallback(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setContactModifyCallback_mut(
    self_: *mut PxScene,
    callback: *mut PxContactModifyCallback
)
{
    PxScene_setContactModifyCallback_mut(
        self_,
        callback
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setCCDContactModifyCallback_mut(
    self_: *mut PxScene,
    callback: *mut PxCCDContactModifyCallback
)
{
    PxScene_setCCDContactModifyCallback_mut(
        self_,
        callback
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getContactModifyCallback(
    self_: *const PxScene
) -> *mut PxContactModifyCallback
{
    PxScene_getContactModifyCallback(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getCCDContactModifyCallback(
    self_: *const PxScene
) -> *mut PxCCDContactModifyCallback
{
    PxScene_getCCDContactModifyCallback(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setBroadPhaseCallback_mut(
    self_: *mut PxScene,
    callback: *mut PxBroadPhaseCallback
)
{
    PxScene_setBroadPhaseCallback_mut(
        self_,
        callback
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getBroadPhaseCallback(
    self_: *const PxScene
) -> *mut PxBroadPhaseCallback
{
    PxScene_getBroadPhaseCallback(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setFilterShaderData_mut(
    self_: *mut PxScene,
    data: *const c_void,
    dataSize: u32
)
{
    PxScene_setFilterShaderData_mut(
        self_,
        data,
        dataSize
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getFilterShaderData(
    self_: *const PxScene
) -> *const c_void
{
    PxScene_getFilterShaderData(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getFilterShaderDataSize(
    self_: *const PxScene
) -> u32
{
    PxScene_getFilterShaderDataSize(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_resetFiltering_mut(
    self_: *mut PxScene,
    actor: *mut PxActor
) -> bool
{
    PxScene_resetFiltering_mut(
        self_,
        actor
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_resetFiltering_mut_1(
    self_: *mut PxScene,
    actor: *mut PxRigidActor,
    shapes: *const *mut PxShape,
    shapeCount: u32
) -> bool
{
    PxScene_resetFiltering_mut_1(
        self_,
        actor,
        shapes,
        shapeCount
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getKinematicKinematicFilteringMode(
    self_: *const PxScene
) -> PxPairFilteringMode
{
    PxScene_getKinematicKinematicFilteringMode(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getStaticKinematicFilteringMode(
    self_: *const PxScene
) -> PxPairFilteringMode
{
    PxScene_getStaticKinematicFilteringMode(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_simulate_mut(
    self_: *mut PxScene,
    elapsedTime: f32,
    completionTask: *mut PxBaseTask,
    scratchMemBlock: *mut c_void,
    scratchMemBlockSize: u32,
    controlSimulation: bool
) -> bool
{
    PxScene_simulate_mut(
        self_,
        elapsedTime,
        completionTask,
        scratchMemBlock,
        scratchMemBlockSize,
        controlSimulation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_advance_mut(
    self_: *mut PxScene,
    completionTask: *mut PxBaseTask
) -> bool
{
    PxScene_advance_mut(
        self_,
        completionTask
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_collide_mut(
    self_: *mut PxScene,
    elapsedTime: f32,
    completionTask: *mut PxBaseTask,
    scratchMemBlock: *mut c_void,
    scratchMemBlockSize: u32,
    controlSimulation: bool
) -> bool
{
    PxScene_collide_mut(
        self_,
        elapsedTime,
        completionTask,
        scratchMemBlock,
        scratchMemBlockSize,
        controlSimulation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_checkResults_mut(
    self_: *mut PxScene,
    block: bool
) -> bool
{
    PxScene_checkResults_mut(
        self_,
        block
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_fetchCollision_mut(
    self_: *mut PxScene,
    block: bool
) -> bool
{
    PxScene_fetchCollision_mut(
        self_,
        block
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_fetchResults_mut(
    self_: *mut PxScene,
    block: bool,
    errorState: *mut u32
) -> bool
{
    PxScene_fetchResults_mut(
        self_,
        block,
        errorState
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_fetchResultsStart_mut(
    self_: *mut PxScene,
    contactPairs: *mut *const PxContactPairHeader,
    nbContactPairs: *mut u32,
    block: bool
) -> bool
{
    PxScene_fetchResultsStart_mut(
        self_,
        contactPairs,
        nbContactPairs,
        block
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_processCallbacks_mut(
    self_: *mut PxScene,
    continuation: *mut PxBaseTask
)
{
    PxScene_processCallbacks_mut(
        self_,
        continuation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_fetchResultsFinish_mut(
    self_: *mut PxScene,
    errorState: *mut u32
)
{
    PxScene_fetchResultsFinish_mut(
        self_,
        errorState
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_fetchResultsParticleSystem_mut(
    self_: *mut PxScene
)
{
    PxScene_fetchResultsParticleSystem_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_flushSimulation_mut(
    self_: *mut PxScene,
    sendPendingReports: bool
)
{
    PxScene_flushSimulation_mut(
        self_,
        sendPendingReports
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setGravity_mut(
    self_: *mut PxScene,
    vec: *const PxVec3
)
{
    PxScene_setGravity_mut(
        self_,
        vec
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getGravity(
    self_: *const PxScene
) -> PxVec3
{
    PxScene_getGravity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setBounceThresholdVelocity_mut(
    self_: *mut PxScene,
    t: f32
)
{
    PxScene_setBounceThresholdVelocity_mut(
        self_,
        t
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getBounceThresholdVelocity(
    self_: *const PxScene
) -> f32
{
    PxScene_getBounceThresholdVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setCCDMaxPasses_mut(
    self_: *mut PxScene,
    ccdMaxPasses: u32
)
{
    PxScene_setCCDMaxPasses_mut(
        self_,
        ccdMaxPasses
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getCCDMaxPasses(
    self_: *const PxScene
) -> u32
{
    PxScene_getCCDMaxPasses(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setCCDMaxSeparation_mut(
    self_: *mut PxScene,
    t: f32
)
{
    PxScene_setCCDMaxSeparation_mut(
        self_,
        t
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getCCDMaxSeparation(
    self_: *const PxScene
) -> f32
{
    PxScene_getCCDMaxSeparation(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setCCDThreshold_mut(
    self_: *mut PxScene,
    t: f32
)
{
    PxScene_setCCDThreshold_mut(
        self_,
        t
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getCCDThreshold(
    self_: *const PxScene
) -> f32
{
    PxScene_getCCDThreshold(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setMaxBiasCoefficient_mut(
    self_: *mut PxScene,
    t: f32
)
{
    PxScene_setMaxBiasCoefficient_mut(
        self_,
        t
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getMaxBiasCoefficient(
    self_: *const PxScene
) -> f32
{
    PxScene_getMaxBiasCoefficient(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setFrictionOffsetThreshold_mut(
    self_: *mut PxScene,
    t: f32
)
{
    PxScene_setFrictionOffsetThreshold_mut(
        self_,
        t
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getFrictionOffsetThreshold(
    self_: *const PxScene
) -> f32
{
    PxScene_getFrictionOffsetThreshold(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setFrictionCorrelationDistance_mut(
    self_: *mut PxScene,
    t: f32
)
{
    PxScene_setFrictionCorrelationDistance_mut(
        self_,
        t
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getFrictionCorrelationDistance(
    self_: *const PxScene
) -> f32
{
    PxScene_getFrictionCorrelationDistance(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getFrictionType(
    self_: *const PxScene
) -> PxFrictionType
{
    PxScene_getFrictionType(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getSolverType(
    self_: *const PxScene
) -> PxSolverType
{
    PxScene_getSolverType(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setVisualizationParameter_mut(
    self_: *mut PxScene,
    param: PxVisualizationParameter,
    value: f32
) -> bool
{
    PxScene_setVisualizationParameter_mut(
        self_,
        param,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getVisualizationParameter(
    self_: *const PxScene,
    paramEnum: PxVisualizationParameter
) -> f32
{
    PxScene_getVisualizationParameter(
        self_,
        paramEnum
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setVisualizationCullingBox_mut(
    self_: *mut PxScene,
    box_: *const PxBounds3
)
{
    PxScene_setVisualizationCullingBox_mut(
        self_,
        box_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getVisualizationCullingBox(
    self_: *const PxScene
) -> PxBounds3
{
    PxScene_getVisualizationCullingBox(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getRenderBuffer_mut(
    self_: *mut PxScene
) -> *const PxRenderBuffer
{
    PxScene_getRenderBuffer_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getSimulationStatistics(
    self_: *const PxScene,
    stats: *mut PxSimulationStatistics
)
{
    PxScene_getSimulationStatistics(
        self_,
        stats
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getBroadPhaseType(
    self_: *const PxScene
) -> PxBroadPhaseType
{
    PxScene_getBroadPhaseType(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getBroadPhaseCaps(
    self_: *const PxScene,
    caps: *mut PxBroadPhaseCaps
) -> bool
{
    PxScene_getBroadPhaseCaps(
        self_,
        caps
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getNbBroadPhaseRegions(
    self_: *const PxScene
) -> u32
{
    PxScene_getNbBroadPhaseRegions(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getBroadPhaseRegions(
    self_: *const PxScene,
    userBuffer: *mut PxBroadPhaseRegionInfo,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxScene_getBroadPhaseRegions(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_addBroadPhaseRegion_mut(
    self_: *mut PxScene,
    region: *const PxBroadPhaseRegion,
    populateRegion: bool
) -> u32
{
    PxScene_addBroadPhaseRegion_mut(
        self_,
        region,
        populateRegion
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_removeBroadPhaseRegion_mut(
    self_: *mut PxScene,
    handle: u32
) -> bool
{
    PxScene_removeBroadPhaseRegion_mut(
        self_,
        handle
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getTaskManager(
    self_: *const PxScene
) -> *mut PxTaskManager
{
    PxScene_getTaskManager(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_lockRead_mut(
    self_: *mut PxScene,
    file: *const c_char,
    line: u32
)
{
    PxScene_lockRead_mut(
        self_,
        file,
        line
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_unlockRead_mut(
    self_: *mut PxScene
)
{
    PxScene_unlockRead_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_lockWrite_mut(
    self_: *mut PxScene,
    file: *const c_char,
    line: u32
)
{
    PxScene_lockWrite_mut(
        self_,
        file,
        line
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_unlockWrite_mut(
    self_: *mut PxScene
)
{
    PxScene_unlockWrite_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setNbContactDataBlocks_mut(
    self_: *mut PxScene,
    numBlocks: u32
)
{
    PxScene_setNbContactDataBlocks_mut(
        self_,
        numBlocks
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getNbContactDataBlocksUsed(
    self_: *const PxScene
) -> u32
{
    PxScene_getNbContactDataBlocksUsed(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getMaxNbContactDataBlocksUsed(
    self_: *const PxScene
) -> u32
{
    PxScene_getMaxNbContactDataBlocksUsed(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getContactReportStreamBufferSize(
    self_: *const PxScene
) -> u32
{
    PxScene_getContactReportStreamBufferSize(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setSolverBatchSize_mut(
    self_: *mut PxScene,
    solverBatchSize: u32
)
{
    PxScene_setSolverBatchSize_mut(
        self_,
        solverBatchSize
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getSolverBatchSize(
    self_: *const PxScene
) -> u32
{
    PxScene_getSolverBatchSize(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_setSolverArticulationBatchSize_mut(
    self_: *mut PxScene,
    solverBatchSize: u32
)
{
    PxScene_setSolverArticulationBatchSize_mut(
        self_,
        solverBatchSize
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getSolverArticulationBatchSize(
    self_: *const PxScene
) -> u32
{
    PxScene_getSolverArticulationBatchSize(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getWakeCounterResetValue(
    self_: *const PxScene
) -> f32
{
    PxScene_getWakeCounterResetValue(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_shiftOrigin_mut(
    self_: *mut PxScene,
    shift: *const PxVec3
)
{
    PxScene_shiftOrigin_mut(
        self_,
        shift
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getScenePvdClient_mut(
    self_: *mut PxScene
) -> *mut PxPvdSceneClient
{
    PxScene_getScenePvdClient_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_copyArticulationData_mut(
    self_: *mut PxScene,
    data: *mut c_void,
    index: *mut c_void,
    dataType: PxArticulationGpuDataType,
    nbCopyArticulations: u32,
    copyEvent: *mut c_void
)
{
    PxScene_copyArticulationData_mut(
        self_,
        data,
        index,
        dataType,
        nbCopyArticulations,
        copyEvent
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_applyArticulationData_mut(
    self_: *mut PxScene,
    data: *mut c_void,
    index: *mut c_void,
    dataType: PxArticulationGpuDataType,
    nbUpdatedArticulations: u32,
    waitEvent: *mut c_void,
    signalEvent: *mut c_void
)
{
    PxScene_applyArticulationData_mut(
        self_,
        data,
        index,
        dataType,
        nbUpdatedArticulations,
        waitEvent,
        signalEvent
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_copySoftBodyData_mut(
    self_: *mut PxScene,
    data: *mut *mut c_void,
    dataSizes: *mut c_void,
    softBodyIndices: *mut c_void,
    flag: PxSoftBodyDataFlag,
    nbCopySoftBodies: u32,
    maxSize: u32,
    copyEvent: *mut c_void
)
{
    PxScene_copySoftBodyData_mut(
        self_,
        data,
        dataSizes,
        softBodyIndices,
        flag,
        nbCopySoftBodies,
        maxSize,
        copyEvent
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_applySoftBodyData_mut(
    self_: *mut PxScene,
    data: *mut *mut c_void,
    dataSizes: *mut c_void,
    softBodyIndices: *mut c_void,
    flag: PxSoftBodyDataFlag,
    nbUpdatedSoftBodies: u32,
    maxSize: u32,
    applyEvent: *mut c_void
)
{
    PxScene_applySoftBodyData_mut(
        self_,
        data,
        dataSizes,
        softBodyIndices,
        flag,
        nbUpdatedSoftBodies,
        maxSize,
        applyEvent
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_copyContactData_mut(
    self_: *mut PxScene,
    data: *mut c_void,
    maxContactPairs: u32,
    numContactPairs: *mut c_void,
    copyEvent: *mut c_void
)
{
    PxScene_copyContactData_mut(
        self_,
        data,
        maxContactPairs,
        numContactPairs,
        copyEvent
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_copyBodyData_mut(
    self_: *mut PxScene,
    data: *mut PxGpuBodyData,
    index: *mut PxGpuActorPair,
    nbCopyActors: u32,
    copyEvent: *mut c_void
)
{
    PxScene_copyBodyData_mut(
        self_,
        data,
        index,
        nbCopyActors,
        copyEvent
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_applyActorData_mut(
    self_: *mut PxScene,
    data: *mut c_void,
    index: *mut PxGpuActorPair,
    flag: PxActorCacheFlag,
    nbUpdatedActors: u32,
    waitEvent: *mut c_void,
    signalEvent: *mut c_void
)
{
    PxScene_applyActorData_mut(
        self_,
        data,
        index,
        flag,
        nbUpdatedActors,
        waitEvent,
        signalEvent
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_computeDenseJacobians_mut(
    self_: *mut PxScene,
    indices: *const PxIndexDataPair,
    nbIndices: u32,
    computeEvent: *mut c_void
)
{
    PxScene_computeDenseJacobians_mut(
        self_,
        indices,
        nbIndices,
        computeEvent
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_computeGeneralizedMassMatrices_mut(
    self_: *mut PxScene,
    indices: *const PxIndexDataPair,
    nbIndices: u32,
    computeEvent: *mut c_void
)
{
    PxScene_computeGeneralizedMassMatrices_mut(
        self_,
        indices,
        nbIndices,
        computeEvent
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_computeGeneralizedGravityForces_mut(
    self_: *mut PxScene,
    indices: *const PxIndexDataPair,
    nbIndices: u32,
    computeEvent: *mut c_void
)
{
    PxScene_computeGeneralizedGravityForces_mut(
        self_,
        indices,
        nbIndices,
        computeEvent
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_computeCoriolisAndCentrifugalForces_mut(
    self_: *mut PxScene,
    indices: *const PxIndexDataPair,
    nbIndices: u32,
    computeEvent: *mut c_void
)
{
    PxScene_computeCoriolisAndCentrifugalForces_mut(
        self_,
        indices,
        nbIndices,
        computeEvent
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_getGpuDynamicsConfig(
    self_: *const PxScene
) -> PxgDynamicsMemoryConfig
{
    PxScene_getGpuDynamicsConfig(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxScene_applyParticleBufferData_mut(
    self_: *mut PxScene,
    indices: *const u32,
    bufferIndexPair: *const PxGpuParticleBufferIndexPair,
    flags: *const PxParticleBufferFlags,
    nbUpdatedBuffers: u32,
    waitEvent: *mut c_void,
    signalEvent: *mut c_void
)
{
    PxScene_applyParticleBufferData_mut(
        self_,
        indices,
        bufferIndexPair,
        flags,
        nbUpdatedBuffers,
        waitEvent,
        signalEvent
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneReadLock_new_alloc(
    scene: *mut PxScene,
    file: *const c_char,
    line: u32
) -> *mut PxSceneReadLock
{
    PxSceneReadLock_new_alloc(
        scene,
        file,
        line
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneReadLock_delete(
    self_: *mut PxSceneReadLock
)
{
    PxSceneReadLock_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneWriteLock_new_alloc(
    scene: *mut PxScene,
    file: *const c_char,
    line: u32
) -> *mut PxSceneWriteLock
{
    PxSceneWriteLock_new_alloc(
        scene,
        file,
        line
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneWriteLock_delete(
    self_: *mut PxSceneWriteLock
)
{
    PxSceneWriteLock_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactPairExtraDataItem_new(

) -> PxContactPairExtraDataItem
{
    PxContactPairExtraDataItem_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactPairVelocity_new(

) -> PxContactPairVelocity
{
    PxContactPairVelocity_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactPairPose_new(

) -> PxContactPairPose
{
    PxContactPairPose_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactPairIndex_new(

) -> PxContactPairIndex
{
    PxContactPairIndex_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactPairExtraDataIterator_new(
    stream: *const u8,
    size: u32
) -> PxContactPairExtraDataIterator
{
    PxContactPairExtraDataIterator_new(
        stream,
        size
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactPairExtraDataIterator_nextItemSet_mut(
    self_: *mut PxContactPairExtraDataIterator
) -> bool
{
    PxContactPairExtraDataIterator_nextItemSet_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactPairHeader_new(

) -> PxContactPairHeader
{
    PxContactPairHeader_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactPair_new(

) -> PxContactPair
{
    PxContactPair_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactPair_extractContacts(
    self_: *const PxContactPair,
    userBuffer: *mut PxContactPairPoint,
    bufferSize: u32
) -> u32
{
    PxContactPair_extractContacts(
        self_,
        userBuffer,
        bufferSize
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactPair_bufferContacts(
    self_: *const PxContactPair,
    newPair: *mut PxContactPair,
    bufferMemory: *mut u8
)
{
    PxContactPair_bufferContacts(
        self_,
        newPair,
        bufferMemory
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactPair_getInternalFaceIndices(
    self_: *const PxContactPair
) -> *const u32
{
    PxContactPair_getInternalFaceIndices(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriggerPair_new(

) -> PxTriggerPair
{
    PxTriggerPair_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintInfo_new(

) -> PxConstraintInfo
{
    PxConstraintInfo_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConstraintInfo_new_1(
    c: *mut PxConstraint,
    extRef: *mut c_void,
    t: u32
) -> PxConstraintInfo
{
    PxConstraintInfo_new_1(
        c,
        extRef,
        t
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimulationEventCallback_onConstraintBreak_mut(
    self_: *mut PxSimulationEventCallback,
    constraints: *mut PxConstraintInfo,
    count: u32
)
{
    PxSimulationEventCallback_onConstraintBreak_mut(
        self_,
        constraints,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimulationEventCallback_onWake_mut(
    self_: *mut PxSimulationEventCallback,
    actors: *mut *mut PxActor,
    count: u32
)
{
    PxSimulationEventCallback_onWake_mut(
        self_,
        actors,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimulationEventCallback_onSleep_mut(
    self_: *mut PxSimulationEventCallback,
    actors: *mut *mut PxActor,
    count: u32
)
{
    PxSimulationEventCallback_onSleep_mut(
        self_,
        actors,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimulationEventCallback_onContact_mut(
    self_: *mut PxSimulationEventCallback,
    pairHeader: *const PxContactPairHeader,
    pairs: *const PxContactPair,
    nbPairs: u32
)
{
    PxSimulationEventCallback_onContact_mut(
        self_,
        pairHeader,
        pairs,
        nbPairs
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimulationEventCallback_onTrigger_mut(
    self_: *mut PxSimulationEventCallback,
    pairs: *mut PxTriggerPair,
    count: u32
)
{
    PxSimulationEventCallback_onTrigger_mut(
        self_,
        pairs,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimulationEventCallback_onAdvance_mut(
    self_: *mut PxSimulationEventCallback,
    bodyBuffer: *const *const PxRigidBody,
    poseBuffer: *const PxTransform,
    count: u32
)
{
    PxSimulationEventCallback_onAdvance_mut(
        self_,
        bodyBuffer,
        poseBuffer,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSimulationEventCallback_delete(
    self_: *mut PxSimulationEventCallback
)
{
    PxSimulationEventCallback_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFEMParameters_new(

) -> PxFEMParameters
{
    PxFEMParameters_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPruningStructure_release_mut(
    self_: *mut PxPruningStructure
)
{
    PxPruningStructure_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPruningStructure_getRigidActors(
    self_: *const PxPruningStructure,
    userBuffer: *mut *mut PxRigidActor,
    bufferSize: u32,
    startIndex: u32
) -> u32
{
    PxPruningStructure_getRigidActors(
        self_,
        userBuffer,
        bufferSize,
        startIndex
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPruningStructure_getNbRigidActors(
    self_: *const PxPruningStructure
) -> u32
{
    PxPruningStructure_getNbRigidActors(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPruningStructure_getStaticMergeData(
    self_: *const PxPruningStructure
) -> *const c_void
{
    PxPruningStructure_getStaticMergeData(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPruningStructure_getDynamicMergeData(
    self_: *const PxPruningStructure
) -> *const c_void
{
    PxPruningStructure_getDynamicMergeData(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPruningStructure_getConcreteTypeName(
    self_: *const PxPruningStructure
) -> *const c_char
{
    PxPruningStructure_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxExtendedVec3_new(

) -> PxExtendedVec3
{
    PxExtendedVec3_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxExtendedVec3_new_1(
    _x: f64,
    _y: f64,
    _z: f64
) -> PxExtendedVec3
{
    PxExtendedVec3_new_1(
        _x,
        _y,
        _z
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxExtendedVec3_isZero(
    self_: *const PxExtendedVec3
) -> bool
{
    PxExtendedVec3_isZero(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxExtendedVec3_dot(
    self_: *const PxExtendedVec3,
    v: *const PxVec3
) -> f64
{
    PxExtendedVec3_dot(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxExtendedVec3_distanceSquared(
    self_: *const PxExtendedVec3,
    v: *const PxExtendedVec3
) -> f64
{
    PxExtendedVec3_distanceSquared(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxExtendedVec3_magnitudeSquared(
    self_: *const PxExtendedVec3
) -> f64
{
    PxExtendedVec3_magnitudeSquared(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxExtendedVec3_magnitude(
    self_: *const PxExtendedVec3
) -> f64
{
    PxExtendedVec3_magnitude(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxExtendedVec3_normalize_mut(
    self_: *mut PxExtendedVec3
) -> f64
{
    PxExtendedVec3_normalize_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxExtendedVec3_isFinite(
    self_: *const PxExtendedVec3
) -> bool
{
    PxExtendedVec3_isFinite(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxExtendedVec3_maximum_mut(
    self_: *mut PxExtendedVec3,
    v: *const PxExtendedVec3
)
{
    PxExtendedVec3_maximum_mut(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxExtendedVec3_minimum_mut(
    self_: *mut PxExtendedVec3,
    v: *const PxExtendedVec3
)
{
    PxExtendedVec3_minimum_mut(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxExtendedVec3_set_mut(
    self_: *mut PxExtendedVec3,
    x_: f64,
    y_: f64,
    z_: f64
)
{
    PxExtendedVec3_set_mut(
        self_,
        x_,
        y_,
        z_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxExtendedVec3_setPlusInfinity_mut(
    self_: *mut PxExtendedVec3
)
{
    PxExtendedVec3_setPlusInfinity_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxExtendedVec3_setMinusInfinity_mut(
    self_: *mut PxExtendedVec3
)
{
    PxExtendedVec3_setMinusInfinity_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxExtendedVec3_cross_mut(
    self_: *mut PxExtendedVec3,
    left: *const PxExtendedVec3,
    right: *const PxVec3
)
{
    PxExtendedVec3_cross_mut(
        self_,
        left,
        right
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxExtendedVec3_cross_mut_1(
    self_: *mut PxExtendedVec3,
    left: *const PxExtendedVec3,
    right: *const PxExtendedVec3
)
{
    PxExtendedVec3_cross_mut_1(
        self_,
        left,
        right
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxExtendedVec3_cross(
    self_: *const PxExtendedVec3,
    v: *const PxExtendedVec3
) -> PxExtendedVec3
{
    PxExtendedVec3_cross(
        self_,
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxExtendedVec3_cross_mut_2(
    self_: *mut PxExtendedVec3,
    left: *const PxVec3,
    right: *const PxExtendedVec3
)
{
    PxExtendedVec3_cross_mut_2(
        self_,
        left,
        right
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_toVec3(
    v: *const PxExtendedVec3
) -> PxVec3
{
    phys_toVec3(
        v
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxObstacle_getType(
    self_: *const PxObstacle
) -> PxGeometryType
{
    PxObstacle_getType(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBoxObstacle_new(

) -> PxBoxObstacle
{
    PxBoxObstacle_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCapsuleObstacle_new(

) -> PxCapsuleObstacle
{
    PxCapsuleObstacle_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxObstacleContext_release_mut(
    self_: *mut PxObstacleContext
)
{
    PxObstacleContext_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxObstacleContext_getControllerManager(
    self_: *const PxObstacleContext
) -> *mut PxControllerManager
{
    PxObstacleContext_getControllerManager(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxObstacleContext_addObstacle_mut(
    self_: *mut PxObstacleContext,
    obstacle: *const PxObstacle
) -> u32
{
    PxObstacleContext_addObstacle_mut(
        self_,
        obstacle
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxObstacleContext_removeObstacle_mut(
    self_: *mut PxObstacleContext,
    handle: u32
) -> bool
{
    PxObstacleContext_removeObstacle_mut(
        self_,
        handle
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxObstacleContext_updateObstacle_mut(
    self_: *mut PxObstacleContext,
    handle: u32,
    obstacle: *const PxObstacle
) -> bool
{
    PxObstacleContext_updateObstacle_mut(
        self_,
        handle,
        obstacle
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxObstacleContext_getNbObstacles(
    self_: *const PxObstacleContext
) -> u32
{
    PxObstacleContext_getNbObstacles(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxObstacleContext_getObstacle(
    self_: *const PxObstacleContext,
    i: u32
) -> *const PxObstacle
{
    PxObstacleContext_getObstacle(
        self_,
        i
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxObstacleContext_getObstacleByHandle(
    self_: *const PxObstacleContext,
    handle: u32
) -> *const PxObstacle
{
    PxObstacleContext_getObstacleByHandle(
        self_,
        handle
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxUserControllerHitReport_onShapeHit_mut(
    self_: *mut PxUserControllerHitReport,
    hit: *const PxControllerShapeHit
)
{
    PxUserControllerHitReport_onShapeHit_mut(
        self_,
        hit
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxUserControllerHitReport_onControllerHit_mut(
    self_: *mut PxUserControllerHitReport,
    hit: *const PxControllersHit
)
{
    PxUserControllerHitReport_onControllerHit_mut(
        self_,
        hit
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxUserControllerHitReport_onObstacleHit_mut(
    self_: *mut PxUserControllerHitReport,
    hit: *const PxControllerObstacleHit
)
{
    PxUserControllerHitReport_onObstacleHit_mut(
        self_,
        hit
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerFilterCallback_delete(
    self_: *mut PxControllerFilterCallback
)
{
    PxControllerFilterCallback_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerFilterCallback_filter_mut(
    self_: *mut PxControllerFilterCallback,
    a: *const PxController,
    b: *const PxController
) -> bool
{
    PxControllerFilterCallback_filter_mut(
        self_,
        a,
        b
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerFilters_new(
    filterData: *const PxFilterData,
    cb: *mut PxQueryFilterCallback,
    cctFilterCb: *mut PxControllerFilterCallback
) -> PxControllerFilters
{
    PxControllerFilters_new(
        filterData,
        cb,
        cctFilterCb
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerDesc_isValid(
    self_: *const PxControllerDesc
) -> bool
{
    PxControllerDesc_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerDesc_getType(
    self_: *const PxControllerDesc
) -> PxControllerShapeType
{
    PxControllerDesc_getType(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_getType(
    self_: *const PxController
) -> PxControllerShapeType
{
    PxController_getType(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_release_mut(
    self_: *mut PxController
)
{
    PxController_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_move_mut(
    self_: *mut PxController,
    disp: *const PxVec3,
    minDist: f32,
    elapsedTime: f32,
    filters: *const PxControllerFilters,
    obstacles: *const PxObstacleContext
) -> PxControllerCollisionFlags
{
    PxController_move_mut(
        self_,
        disp,
        minDist,
        elapsedTime,
        filters,
        obstacles
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_setPosition_mut(
    self_: *mut PxController,
    position: *const PxExtendedVec3
) -> bool
{
    PxController_setPosition_mut(
        self_,
        position
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_getPosition(
    self_: *const PxController
) -> *const PxExtendedVec3
{
    PxController_getPosition(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_setFootPosition_mut(
    self_: *mut PxController,
    position: *const PxExtendedVec3
) -> bool
{
    PxController_setFootPosition_mut(
        self_,
        position
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_getFootPosition(
    self_: *const PxController
) -> PxExtendedVec3
{
    PxController_getFootPosition(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_getActor(
    self_: *const PxController
) -> *mut PxRigidDynamic
{
    PxController_getActor(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_setStepOffset_mut(
    self_: *mut PxController,
    offset: f32
)
{
    PxController_setStepOffset_mut(
        self_,
        offset
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_getStepOffset(
    self_: *const PxController
) -> f32
{
    PxController_getStepOffset(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_setNonWalkableMode_mut(
    self_: *mut PxController,
    flag: PxControllerNonWalkableMode
)
{
    PxController_setNonWalkableMode_mut(
        self_,
        flag
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_getNonWalkableMode(
    self_: *const PxController
) -> PxControllerNonWalkableMode
{
    PxController_getNonWalkableMode(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_getContactOffset(
    self_: *const PxController
) -> f32
{
    PxController_getContactOffset(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_setContactOffset_mut(
    self_: *mut PxController,
    offset: f32
)
{
    PxController_setContactOffset_mut(
        self_,
        offset
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_getUpDirection(
    self_: *const PxController
) -> PxVec3
{
    PxController_getUpDirection(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_setUpDirection_mut(
    self_: *mut PxController,
    up: *const PxVec3
)
{
    PxController_setUpDirection_mut(
        self_,
        up
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_getSlopeLimit(
    self_: *const PxController
) -> f32
{
    PxController_getSlopeLimit(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_setSlopeLimit_mut(
    self_: *mut PxController,
    slopeLimit: f32
)
{
    PxController_setSlopeLimit_mut(
        self_,
        slopeLimit
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_invalidateCache_mut(
    self_: *mut PxController
)
{
    PxController_invalidateCache_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_getScene_mut(
    self_: *mut PxController
) -> *mut PxScene
{
    PxController_getScene_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_getUserData(
    self_: *const PxController
) -> *mut c_void
{
    PxController_getUserData(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_setUserData_mut(
    self_: *mut PxController,
    userData: *mut c_void
)
{
    PxController_setUserData_mut(
        self_,
        userData
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_getState(
    self_: *const PxController,
    state: *mut PxControllerState
)
{
    PxController_getState(
        self_,
        state
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_getStats(
    self_: *const PxController,
    stats: *mut PxControllerStats
)
{
    PxController_getStats(
        self_,
        stats
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxController_resize_mut(
    self_: *mut PxController,
    height: f32
)
{
    PxController_resize_mut(
        self_,
        height
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBoxControllerDesc_new_alloc(

) -> *mut PxBoxControllerDesc
{
    PxBoxControllerDesc_new_alloc(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBoxControllerDesc_delete(
    self_: *mut PxBoxControllerDesc
)
{
    PxBoxControllerDesc_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBoxControllerDesc_setToDefault_mut(
    self_: *mut PxBoxControllerDesc
)
{
    PxBoxControllerDesc_setToDefault_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBoxControllerDesc_isValid(
    self_: *const PxBoxControllerDesc
) -> bool
{
    PxBoxControllerDesc_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBoxController_getHalfHeight(
    self_: *const PxBoxController
) -> f32
{
    PxBoxController_getHalfHeight(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBoxController_getHalfSideExtent(
    self_: *const PxBoxController
) -> f32
{
    PxBoxController_getHalfSideExtent(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBoxController_getHalfForwardExtent(
    self_: *const PxBoxController
) -> f32
{
    PxBoxController_getHalfForwardExtent(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBoxController_setHalfHeight_mut(
    self_: *mut PxBoxController,
    halfHeight: f32
) -> bool
{
    PxBoxController_setHalfHeight_mut(
        self_,
        halfHeight
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBoxController_setHalfSideExtent_mut(
    self_: *mut PxBoxController,
    halfSideExtent: f32
) -> bool
{
    PxBoxController_setHalfSideExtent_mut(
        self_,
        halfSideExtent
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBoxController_setHalfForwardExtent_mut(
    self_: *mut PxBoxController,
    halfForwardExtent: f32
) -> bool
{
    PxBoxController_setHalfForwardExtent_mut(
        self_,
        halfForwardExtent
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCapsuleControllerDesc_new_alloc(

) -> *mut PxCapsuleControllerDesc
{
    PxCapsuleControllerDesc_new_alloc(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCapsuleControllerDesc_delete(
    self_: *mut PxCapsuleControllerDesc
)
{
    PxCapsuleControllerDesc_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCapsuleControllerDesc_setToDefault_mut(
    self_: *mut PxCapsuleControllerDesc
)
{
    PxCapsuleControllerDesc_setToDefault_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCapsuleControllerDesc_isValid(
    self_: *const PxCapsuleControllerDesc
) -> bool
{
    PxCapsuleControllerDesc_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCapsuleController_getRadius(
    self_: *const PxCapsuleController
) -> f32
{
    PxCapsuleController_getRadius(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCapsuleController_setRadius_mut(
    self_: *mut PxCapsuleController,
    radius: f32
) -> bool
{
    PxCapsuleController_setRadius_mut(
        self_,
        radius
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCapsuleController_getHeight(
    self_: *const PxCapsuleController
) -> f32
{
    PxCapsuleController_getHeight(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCapsuleController_setHeight_mut(
    self_: *mut PxCapsuleController,
    height: f32
) -> bool
{
    PxCapsuleController_setHeight_mut(
        self_,
        height
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCapsuleController_getClimbingMode(
    self_: *const PxCapsuleController
) -> PxCapsuleClimbingMode
{
    PxCapsuleController_getClimbingMode(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCapsuleController_setClimbingMode_mut(
    self_: *mut PxCapsuleController,
    mode: PxCapsuleClimbingMode
) -> bool
{
    PxCapsuleController_setClimbingMode_mut(
        self_,
        mode
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerBehaviorCallback_getBehaviorFlags_mut(
    self_: *mut PxControllerBehaviorCallback,
    shape: *const PxShape,
    actor: *const PxActor
) -> PxControllerBehaviorFlags
{
    PxControllerBehaviorCallback_getBehaviorFlags_mut(
        self_,
        shape,
        actor
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerBehaviorCallback_getBehaviorFlags_mut_1(
    self_: *mut PxControllerBehaviorCallback,
    controller: *const PxController
) -> PxControllerBehaviorFlags
{
    PxControllerBehaviorCallback_getBehaviorFlags_mut_1(
        self_,
        controller
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerBehaviorCallback_getBehaviorFlags_mut_2(
    self_: *mut PxControllerBehaviorCallback,
    obstacle: *const PxObstacle
) -> PxControllerBehaviorFlags
{
    PxControllerBehaviorCallback_getBehaviorFlags_mut_2(
        self_,
        obstacle
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerManager_release_mut(
    self_: *mut PxControllerManager
)
{
    PxControllerManager_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerManager_getScene(
    self_: *const PxControllerManager
) -> *mut PxScene
{
    PxControllerManager_getScene(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerManager_getNbControllers(
    self_: *const PxControllerManager
) -> u32
{
    PxControllerManager_getNbControllers(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerManager_getController_mut(
    self_: *mut PxControllerManager,
    index: u32
) -> *mut PxController
{
    PxControllerManager_getController_mut(
        self_,
        index
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerManager_createController_mut(
    self_: *mut PxControllerManager,
    desc: *const PxControllerDesc
) -> *mut PxController
{
    PxControllerManager_createController_mut(
        self_,
        desc
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerManager_purgeControllers_mut(
    self_: *mut PxControllerManager
)
{
    PxControllerManager_purgeControllers_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerManager_getRenderBuffer_mut(
    self_: *mut PxControllerManager
) -> *mut PxRenderBuffer
{
    PxControllerManager_getRenderBuffer_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerManager_setDebugRenderingFlags_mut(
    self_: *mut PxControllerManager,
    flags: PxControllerDebugRenderFlags
)
{
    PxControllerManager_setDebugRenderingFlags_mut(
        self_,
        flags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerManager_getNbObstacleContexts(
    self_: *const PxControllerManager
) -> u32
{
    PxControllerManager_getNbObstacleContexts(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerManager_getObstacleContext_mut(
    self_: *mut PxControllerManager,
    index: u32
) -> *mut PxObstacleContext
{
    PxControllerManager_getObstacleContext_mut(
        self_,
        index
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerManager_createObstacleContext_mut(
    self_: *mut PxControllerManager
) -> *mut PxObstacleContext
{
    PxControllerManager_createObstacleContext_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerManager_computeInteractions_mut(
    self_: *mut PxControllerManager,
    elapsedTime: f32,
    cctFilterCb: *mut PxControllerFilterCallback
)
{
    PxControllerManager_computeInteractions_mut(
        self_,
        elapsedTime,
        cctFilterCb
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerManager_setTessellation_mut(
    self_: *mut PxControllerManager,
    flag: bool,
    maxEdgeLength: f32
)
{
    PxControllerManager_setTessellation_mut(
        self_,
        flag,
        maxEdgeLength
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerManager_setOverlapRecoveryModule_mut(
    self_: *mut PxControllerManager,
    flag: bool
)
{
    PxControllerManager_setOverlapRecoveryModule_mut(
        self_,
        flag
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerManager_setPreciseSweeps_mut(
    self_: *mut PxControllerManager,
    flag: bool
)
{
    PxControllerManager_setPreciseSweeps_mut(
        self_,
        flag
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerManager_setPreventVerticalSlidingAgainstCeiling_mut(
    self_: *mut PxControllerManager,
    flag: bool
)
{
    PxControllerManager_setPreventVerticalSlidingAgainstCeiling_mut(
        self_,
        flag
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxControllerManager_shiftOrigin_mut(
    self_: *mut PxControllerManager,
    shift: *const PxVec3
)
{
    PxControllerManager_shiftOrigin_mut(
        self_,
        shift
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateControllerManager(
    scene: *mut PxScene,
    lockingEnabled: bool
) -> *mut PxControllerManager
{
    phys_PxCreateControllerManager(
        scene,
        lockingEnabled
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDim3_new(

) -> PxDim3
{
    PxDim3_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSDFDesc_new(

) -> PxSDFDesc
{
    PxSDFDesc_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSDFDesc_isValid(
    self_: *const PxSDFDesc
) -> bool
{
    PxSDFDesc_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConvexMeshDesc_new(

) -> PxConvexMeshDesc
{
    PxConvexMeshDesc_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConvexMeshDesc_setToDefault_mut(
    self_: *mut PxConvexMeshDesc
)
{
    PxConvexMeshDesc_setToDefault_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxConvexMeshDesc_isValid(
    self_: *const PxConvexMeshDesc
) -> bool
{
    PxConvexMeshDesc_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMeshDesc_new(

) -> PxTriangleMeshDesc
{
    PxTriangleMeshDesc_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMeshDesc_setToDefault_mut(
    self_: *mut PxTriangleMeshDesc
)
{
    PxTriangleMeshDesc_setToDefault_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMeshDesc_isValid(
    self_: *const PxTriangleMeshDesc
) -> bool
{
    PxTriangleMeshDesc_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTetrahedronMeshDesc_new(

) -> PxTetrahedronMeshDesc
{
    PxTetrahedronMeshDesc_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTetrahedronMeshDesc_isValid(
    self_: *const PxTetrahedronMeshDesc
) -> bool
{
    PxTetrahedronMeshDesc_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSoftBodySimulationDataDesc_new(

) -> PxSoftBodySimulationDataDesc
{
    PxSoftBodySimulationDataDesc_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSoftBodySimulationDataDesc_isValid(
    self_: *const PxSoftBodySimulationDataDesc
) -> bool
{
    PxSoftBodySimulationDataDesc_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVH34MidphaseDesc_setToDefault_mut(
    self_: *mut PxBVH34MidphaseDesc
)
{
    PxBVH34MidphaseDesc_setToDefault_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVH34MidphaseDesc_isValid(
    self_: *const PxBVH34MidphaseDesc
) -> bool
{
    PxBVH34MidphaseDesc_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMidphaseDesc_new(

) -> PxMidphaseDesc
{
    PxMidphaseDesc_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMidphaseDesc_getType(
    self_: *const PxMidphaseDesc
) -> PxMeshMidPhase
{
    PxMidphaseDesc_getType(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMidphaseDesc_setToDefault_mut(
    self_: *mut PxMidphaseDesc,
    type_: PxMeshMidPhase
)
{
    PxMidphaseDesc_setToDefault_mut(
        self_,
        type_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMidphaseDesc_isValid(
    self_: *const PxMidphaseDesc
) -> bool
{
    PxMidphaseDesc_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVHDesc_new(

) -> PxBVHDesc
{
    PxBVHDesc_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVHDesc_setToDefault_mut(
    self_: *mut PxBVHDesc
)
{
    PxBVHDesc_setToDefault_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBVHDesc_isValid(
    self_: *const PxBVHDesc
) -> bool
{
    PxBVHDesc_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCookingParams_new(
    sc: *const PxTolerancesScale
) -> PxCookingParams
{
    PxCookingParams_new(
        sc
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetStandaloneInsertionCallback(

) -> *mut PxInsertionCallback
{
    phys_PxGetStandaloneInsertionCallback(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCookBVH(
    desc: *const PxBVHDesc,
    stream: *mut PxOutputStream
) -> bool
{
    phys_PxCookBVH(
        desc,
        stream
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateBVH(
    desc: *const PxBVHDesc,
    insertionCallback: *mut PxInsertionCallback
) -> *mut PxBVH
{
    phys_PxCreateBVH(
        desc,
        insertionCallback
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCookHeightField(
    desc: *const PxHeightFieldDesc,
    stream: *mut PxOutputStream
) -> bool
{
    phys_PxCookHeightField(
        desc,
        stream
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateHeightField(
    desc: *const PxHeightFieldDesc,
    insertionCallback: *mut PxInsertionCallback
) -> *mut PxHeightField
{
    phys_PxCreateHeightField(
        desc,
        insertionCallback
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCookConvexMesh(
    params: *const PxCookingParams,
    desc: *const PxConvexMeshDesc,
    stream: *mut PxOutputStream,
    condition: *mut PxConvexMeshCookingResult
) -> bool
{
    phys_PxCookConvexMesh(
        params,
        desc,
        stream,
        condition
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateConvexMesh(
    params: *const PxCookingParams,
    desc: *const PxConvexMeshDesc,
    insertionCallback: *mut PxInsertionCallback,
    condition: *mut PxConvexMeshCookingResult
) -> *mut PxConvexMesh
{
    phys_PxCreateConvexMesh(
        params,
        desc,
        insertionCallback,
        condition
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxValidateConvexMesh(
    params: *const PxCookingParams,
    desc: *const PxConvexMeshDesc
) -> bool
{
    phys_PxValidateConvexMesh(
        params,
        desc
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxComputeHullPolygons(
    params: *const PxCookingParams,
    mesh: *const PxSimpleTriangleMesh,
    inCallback: *mut PxAllocatorCallback,
    nbVerts: *mut u32,
    vertices: *mut *mut PxVec3,
    nbIndices: *mut u32,
    indices: *mut *mut u32,
    nbPolygons: *mut u32,
    hullPolygons: *mut *mut PxHullPolygon
) -> bool
{
    phys_PxComputeHullPolygons(
        params,
        mesh,
        inCallback,
        nbVerts,
        vertices,
        nbIndices,
        indices,
        nbPolygons,
        hullPolygons
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxValidateTriangleMesh(
    params: *const PxCookingParams,
    desc: *const PxTriangleMeshDesc
) -> bool
{
    phys_PxValidateTriangleMesh(
        params,
        desc
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateTriangleMesh(
    params: *const PxCookingParams,
    desc: *const PxTriangleMeshDesc,
    insertionCallback: *mut PxInsertionCallback,
    condition: *mut PxTriangleMeshCookingResult
) -> *mut PxTriangleMesh
{
    phys_PxCreateTriangleMesh(
        params,
        desc,
        insertionCallback,
        condition
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCookTriangleMesh(
    params: *const PxCookingParams,
    desc: *const PxTriangleMeshDesc,
    stream: *mut PxOutputStream,
    condition: *mut PxTriangleMeshCookingResult
) -> bool
{
    phys_PxCookTriangleMesh(
        params,
        desc,
        stream,
        condition
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultMemoryOutputStream_new_alloc(
    allocator: *mut PxAllocatorCallback
) -> *mut PxDefaultMemoryOutputStream
{
    PxDefaultMemoryOutputStream_new_alloc(
        allocator
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultMemoryOutputStream_delete(
    self_: *mut PxDefaultMemoryOutputStream
)
{
    PxDefaultMemoryOutputStream_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultMemoryOutputStream_write_mut(
    self_: *mut PxDefaultMemoryOutputStream,
    src: *const c_void,
    count: u32
) -> u32
{
    PxDefaultMemoryOutputStream_write_mut(
        self_,
        src,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultMemoryOutputStream_getSize(
    self_: *const PxDefaultMemoryOutputStream
) -> u32
{
    PxDefaultMemoryOutputStream_getSize(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultMemoryOutputStream_getData(
    self_: *const PxDefaultMemoryOutputStream
) -> *mut u8
{
    PxDefaultMemoryOutputStream_getData(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultMemoryInputData_new_alloc(
    data: *mut u8,
    length: u32
) -> *mut PxDefaultMemoryInputData
{
    PxDefaultMemoryInputData_new_alloc(
        data,
        length
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultMemoryInputData_read_mut(
    self_: *mut PxDefaultMemoryInputData,
    dest: *mut c_void,
    count: u32
) -> u32
{
    PxDefaultMemoryInputData_read_mut(
        self_,
        dest,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultMemoryInputData_getLength(
    self_: *const PxDefaultMemoryInputData
) -> u32
{
    PxDefaultMemoryInputData_getLength(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultMemoryInputData_seek_mut(
    self_: *mut PxDefaultMemoryInputData,
    pos: u32
)
{
    PxDefaultMemoryInputData_seek_mut(
        self_,
        pos
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultMemoryInputData_tell(
    self_: *const PxDefaultMemoryInputData
) -> u32
{
    PxDefaultMemoryInputData_tell(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultFileOutputStream_new_alloc(
    name: *const c_char
) -> *mut PxDefaultFileOutputStream
{
    PxDefaultFileOutputStream_new_alloc(
        name
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultFileOutputStream_delete(
    self_: *mut PxDefaultFileOutputStream
)
{
    PxDefaultFileOutputStream_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultFileOutputStream_write_mut(
    self_: *mut PxDefaultFileOutputStream,
    src: *const c_void,
    count: u32
) -> u32
{
    PxDefaultFileOutputStream_write_mut(
        self_,
        src,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultFileOutputStream_isValid_mut(
    self_: *mut PxDefaultFileOutputStream
) -> bool
{
    PxDefaultFileOutputStream_isValid_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultFileInputData_new_alloc(
    name: *const c_char
) -> *mut PxDefaultFileInputData
{
    PxDefaultFileInputData_new_alloc(
        name
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultFileInputData_delete(
    self_: *mut PxDefaultFileInputData
)
{
    PxDefaultFileInputData_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultFileInputData_read_mut(
    self_: *mut PxDefaultFileInputData,
    dest: *mut c_void,
    count: u32
) -> u32
{
    PxDefaultFileInputData_read_mut(
        self_,
        dest,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultFileInputData_seek_mut(
    self_: *mut PxDefaultFileInputData,
    pos: u32
)
{
    PxDefaultFileInputData_seek_mut(
        self_,
        pos
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultFileInputData_tell(
    self_: *const PxDefaultFileInputData
) -> u32
{
    PxDefaultFileInputData_tell(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultFileInputData_getLength(
    self_: *const PxDefaultFileInputData
) -> u32
{
    PxDefaultFileInputData_getLength(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultFileInputData_isValid(
    self_: *const PxDefaultFileInputData
) -> bool
{
    PxDefaultFileInputData_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_platformAlignedAlloc(
    size: usize
) -> *mut c_void
{
    phys_platformAlignedAlloc(
        size
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_platformAlignedFree(
    ptr: *mut c_void
)
{
    phys_platformAlignedFree(
        ptr
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultAllocator_allocate_mut(
    self_: *mut PxDefaultAllocator,
    size: usize,
    anon_param1: *const c_char,
    anon_param2: *const c_char,
    anon_param3: i32
) -> *mut c_void
{
    PxDefaultAllocator_allocate_mut(
        self_,
        size,
        anon_param1,
        anon_param2,
        anon_param3
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultAllocator_deallocate_mut(
    self_: *mut PxDefaultAllocator,
    ptr: *mut c_void
)
{
    PxDefaultAllocator_deallocate_mut(
        self_,
        ptr
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultAllocator_delete(
    self_: *mut PxDefaultAllocator
)
{
    PxDefaultAllocator_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_setActors_mut(
    self_: *mut PxJoint,
    actor0: *mut PxRigidActor,
    actor1: *mut PxRigidActor
)
{
    PxJoint_setActors_mut(
        self_,
        actor0,
        actor1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_getActors(
    self_: *const PxJoint,
    actor0: *mut *mut PxRigidActor,
    actor1: *mut *mut PxRigidActor
)
{
    PxJoint_getActors(
        self_,
        actor0,
        actor1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_setLocalPose_mut(
    self_: *mut PxJoint,
    actor: PxJointActorIndex,
    localPose: *const PxTransform
)
{
    PxJoint_setLocalPose_mut(
        self_,
        actor,
        localPose
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_getLocalPose(
    self_: *const PxJoint,
    actor: PxJointActorIndex
) -> PxTransform
{
    PxJoint_getLocalPose(
        self_,
        actor
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_getRelativeTransform(
    self_: *const PxJoint
) -> PxTransform
{
    PxJoint_getRelativeTransform(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_getRelativeLinearVelocity(
    self_: *const PxJoint
) -> PxVec3
{
    PxJoint_getRelativeLinearVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_getRelativeAngularVelocity(
    self_: *const PxJoint
) -> PxVec3
{
    PxJoint_getRelativeAngularVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_setBreakForce_mut(
    self_: *mut PxJoint,
    force: f32,
    torque: f32
)
{
    PxJoint_setBreakForce_mut(
        self_,
        force,
        torque
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_getBreakForce(
    self_: *const PxJoint,
    force: *mut f32,
    torque: *mut f32
)
{
    PxJoint_getBreakForce(
        self_,
        force,
        torque
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_setConstraintFlags_mut(
    self_: *mut PxJoint,
    flags: PxConstraintFlags
)
{
    PxJoint_setConstraintFlags_mut(
        self_,
        flags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_setConstraintFlag_mut(
    self_: *mut PxJoint,
    flag: PxConstraintFlag,
    value: bool
)
{
    PxJoint_setConstraintFlag_mut(
        self_,
        flag,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_getConstraintFlags(
    self_: *const PxJoint
) -> PxConstraintFlags
{
    PxJoint_getConstraintFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_setInvMassScale0_mut(
    self_: *mut PxJoint,
    invMassScale: f32
)
{
    PxJoint_setInvMassScale0_mut(
        self_,
        invMassScale
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_getInvMassScale0(
    self_: *const PxJoint
) -> f32
{
    PxJoint_getInvMassScale0(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_setInvInertiaScale0_mut(
    self_: *mut PxJoint,
    invInertiaScale: f32
)
{
    PxJoint_setInvInertiaScale0_mut(
        self_,
        invInertiaScale
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_getInvInertiaScale0(
    self_: *const PxJoint
) -> f32
{
    PxJoint_getInvInertiaScale0(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_setInvMassScale1_mut(
    self_: *mut PxJoint,
    invMassScale: f32
)
{
    PxJoint_setInvMassScale1_mut(
        self_,
        invMassScale
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_getInvMassScale1(
    self_: *const PxJoint
) -> f32
{
    PxJoint_getInvMassScale1(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_setInvInertiaScale1_mut(
    self_: *mut PxJoint,
    invInertiaScale: f32
)
{
    PxJoint_setInvInertiaScale1_mut(
        self_,
        invInertiaScale
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_getInvInertiaScale1(
    self_: *const PxJoint
) -> f32
{
    PxJoint_getInvInertiaScale1(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_getConstraint(
    self_: *const PxJoint
) -> *mut PxConstraint
{
    PxJoint_getConstraint(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_setName_mut(
    self_: *mut PxJoint,
    name: *const c_char
)
{
    PxJoint_setName_mut(
        self_,
        name
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_getName(
    self_: *const PxJoint
) -> *const c_char
{
    PxJoint_getName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_release_mut(
    self_: *mut PxJoint
)
{
    PxJoint_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_getScene(
    self_: *const PxJoint
) -> *mut PxScene
{
    PxJoint_getScene(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJoint_getBinaryMetaData(
    stream: *mut PxOutputStream
)
{
    PxJoint_getBinaryMetaData(
        stream
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSpring_new(
    stiffness_: f32,
    damping_: f32
) -> PxSpring
{
    PxSpring_new(
        stiffness_,
        damping_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxSetJointGlobalFrame(
    joint: *mut PxJoint,
    wsAnchor: *const PxVec3,
    wsAxis: *const PxVec3
)
{
    phys_PxSetJointGlobalFrame(
        joint,
        wsAnchor,
        wsAxis
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxDistanceJointCreate(
    physics: *mut PxPhysics,
    actor0: *mut PxRigidActor,
    localFrame0: *const PxTransform,
    actor1: *mut PxRigidActor,
    localFrame1: *const PxTransform
) -> *mut PxDistanceJoint
{
    phys_PxDistanceJointCreate(
        physics,
        actor0,
        localFrame0,
        actor1,
        localFrame1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDistanceJoint_getDistance(
    self_: *const PxDistanceJoint
) -> f32
{
    PxDistanceJoint_getDistance(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDistanceJoint_setMinDistance_mut(
    self_: *mut PxDistanceJoint,
    distance: f32
)
{
    PxDistanceJoint_setMinDistance_mut(
        self_,
        distance
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDistanceJoint_getMinDistance(
    self_: *const PxDistanceJoint
) -> f32
{
    PxDistanceJoint_getMinDistance(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDistanceJoint_setMaxDistance_mut(
    self_: *mut PxDistanceJoint,
    distance: f32
)
{
    PxDistanceJoint_setMaxDistance_mut(
        self_,
        distance
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDistanceJoint_getMaxDistance(
    self_: *const PxDistanceJoint
) -> f32
{
    PxDistanceJoint_getMaxDistance(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDistanceJoint_setTolerance_mut(
    self_: *mut PxDistanceJoint,
    tolerance: f32
)
{
    PxDistanceJoint_setTolerance_mut(
        self_,
        tolerance
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDistanceJoint_getTolerance(
    self_: *const PxDistanceJoint
) -> f32
{
    PxDistanceJoint_getTolerance(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDistanceJoint_setStiffness_mut(
    self_: *mut PxDistanceJoint,
    stiffness: f32
)
{
    PxDistanceJoint_setStiffness_mut(
        self_,
        stiffness
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDistanceJoint_getStiffness(
    self_: *const PxDistanceJoint
) -> f32
{
    PxDistanceJoint_getStiffness(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDistanceJoint_setDamping_mut(
    self_: *mut PxDistanceJoint,
    damping: f32
)
{
    PxDistanceJoint_setDamping_mut(
        self_,
        damping
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDistanceJoint_getDamping(
    self_: *const PxDistanceJoint
) -> f32
{
    PxDistanceJoint_getDamping(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDistanceJoint_setContactDistance_mut(
    self_: *mut PxDistanceJoint,
    contactDistance: f32
)
{
    PxDistanceJoint_setContactDistance_mut(
        self_,
        contactDistance
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDistanceJoint_getContactDistance(
    self_: *const PxDistanceJoint
) -> f32
{
    PxDistanceJoint_getContactDistance(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDistanceJoint_setDistanceJointFlags_mut(
    self_: *mut PxDistanceJoint,
    flags: PxDistanceJointFlags
)
{
    PxDistanceJoint_setDistanceJointFlags_mut(
        self_,
        flags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDistanceJoint_setDistanceJointFlag_mut(
    self_: *mut PxDistanceJoint,
    flag: PxDistanceJointFlag,
    value: bool
)
{
    PxDistanceJoint_setDistanceJointFlag_mut(
        self_,
        flag,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDistanceJoint_getDistanceJointFlags(
    self_: *const PxDistanceJoint
) -> PxDistanceJointFlags
{
    PxDistanceJoint_getDistanceJointFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDistanceJoint_getConcreteTypeName(
    self_: *const PxDistanceJoint
) -> *const c_char
{
    PxDistanceJoint_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxContactJointCreate(
    physics: *mut PxPhysics,
    actor0: *mut PxRigidActor,
    localFrame0: *const PxTransform,
    actor1: *mut PxRigidActor,
    localFrame1: *const PxTransform
) -> *mut PxContactJoint
{
    phys_PxContactJointCreate(
        physics,
        actor0,
        localFrame0,
        actor1,
        localFrame1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJacobianRow_new(

) -> PxJacobianRow
{
    PxJacobianRow_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJacobianRow_new_1(
    lin0: *const PxVec3,
    lin1: *const PxVec3,
    ang0: *const PxVec3,
    ang1: *const PxVec3
) -> PxJacobianRow
{
    PxJacobianRow_new_1(
        lin0,
        lin1,
        ang0,
        ang1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactJoint_setContact_mut(
    self_: *mut PxContactJoint,
    contact: *const PxVec3
)
{
    PxContactJoint_setContact_mut(
        self_,
        contact
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactJoint_setContactNormal_mut(
    self_: *mut PxContactJoint,
    contactNormal: *const PxVec3
)
{
    PxContactJoint_setContactNormal_mut(
        self_,
        contactNormal
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactJoint_setPenetration_mut(
    self_: *mut PxContactJoint,
    penetration: f32
)
{
    PxContactJoint_setPenetration_mut(
        self_,
        penetration
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactJoint_getContact(
    self_: *const PxContactJoint
) -> PxVec3
{
    PxContactJoint_getContact(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactJoint_getContactNormal(
    self_: *const PxContactJoint
) -> PxVec3
{
    PxContactJoint_getContactNormal(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactJoint_getPenetration(
    self_: *const PxContactJoint
) -> f32
{
    PxContactJoint_getPenetration(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactJoint_getRestitution(
    self_: *const PxContactJoint
) -> f32
{
    PxContactJoint_getRestitution(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactJoint_setRestitution_mut(
    self_: *mut PxContactJoint,
    restitution: f32
)
{
    PxContactJoint_setRestitution_mut(
        self_,
        restitution
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactJoint_getBounceThreshold(
    self_: *const PxContactJoint
) -> f32
{
    PxContactJoint_getBounceThreshold(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactJoint_setBounceThreshold_mut(
    self_: *mut PxContactJoint,
    bounceThreshold: f32
)
{
    PxContactJoint_setBounceThreshold_mut(
        self_,
        bounceThreshold
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactJoint_getConcreteTypeName(
    self_: *const PxContactJoint
) -> *const c_char
{
    PxContactJoint_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactJoint_computeJacobians(
    self_: *const PxContactJoint,
    jacobian: *mut PxJacobianRow
)
{
    PxContactJoint_computeJacobians(
        self_,
        jacobian
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxContactJoint_getNbJacobianRows(
    self_: *const PxContactJoint
) -> u32
{
    PxContactJoint_getNbJacobianRows(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxFixedJointCreate(
    physics: *mut PxPhysics,
    actor0: *mut PxRigidActor,
    localFrame0: *const PxTransform,
    actor1: *mut PxRigidActor,
    localFrame1: *const PxTransform
) -> *mut PxFixedJoint
{
    phys_PxFixedJointCreate(
        physics,
        actor0,
        localFrame0,
        actor1,
        localFrame1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxFixedJoint_getConcreteTypeName(
    self_: *const PxFixedJoint
) -> *const c_char
{
    PxFixedJoint_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLimitParameters_new_alloc(

) -> *mut PxJointLimitParameters
{
    PxJointLimitParameters_new_alloc(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLimitParameters_isValid(
    self_: *const PxJointLimitParameters
) -> bool
{
    PxJointLimitParameters_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLimitParameters_isSoft(
    self_: *const PxJointLimitParameters
) -> bool
{
    PxJointLimitParameters_isSoft(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLinearLimit_new(
    scale: *const PxTolerancesScale,
    extent: f32,
    contactDist_deprecated: f32
) -> PxJointLinearLimit
{
    PxJointLinearLimit_new(
        scale,
        extent,
        contactDist_deprecated
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLinearLimit_new_1(
    extent: f32,
    spring: *const PxSpring
) -> PxJointLinearLimit
{
    PxJointLinearLimit_new_1(
        extent,
        spring
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLinearLimit_isValid(
    self_: *const PxJointLinearLimit
) -> bool
{
    PxJointLinearLimit_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLinearLimit_delete(
    self_: *mut PxJointLinearLimit
)
{
    PxJointLinearLimit_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLinearLimitPair_new(
    scale: *const PxTolerancesScale,
    lowerLimit: f32,
    upperLimit: f32,
    contactDist_deprecated: f32
) -> PxJointLinearLimitPair
{
    PxJointLinearLimitPair_new(
        scale,
        lowerLimit,
        upperLimit,
        contactDist_deprecated
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLinearLimitPair_new_1(
    lowerLimit: f32,
    upperLimit: f32,
    spring: *const PxSpring
) -> PxJointLinearLimitPair
{
    PxJointLinearLimitPair_new_1(
        lowerLimit,
        upperLimit,
        spring
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLinearLimitPair_isValid(
    self_: *const PxJointLinearLimitPair
) -> bool
{
    PxJointLinearLimitPair_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLinearLimitPair_delete(
    self_: *mut PxJointLinearLimitPair
)
{
    PxJointLinearLimitPair_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointAngularLimitPair_new(
    lowerLimit: f32,
    upperLimit: f32,
    contactDist_deprecated: f32
) -> PxJointAngularLimitPair
{
    PxJointAngularLimitPair_new(
        lowerLimit,
        upperLimit,
        contactDist_deprecated
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointAngularLimitPair_new_1(
    lowerLimit: f32,
    upperLimit: f32,
    spring: *const PxSpring
) -> PxJointAngularLimitPair
{
    PxJointAngularLimitPair_new_1(
        lowerLimit,
        upperLimit,
        spring
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointAngularLimitPair_isValid(
    self_: *const PxJointAngularLimitPair
) -> bool
{
    PxJointAngularLimitPair_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointAngularLimitPair_delete(
    self_: *mut PxJointAngularLimitPair
)
{
    PxJointAngularLimitPair_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLimitCone_new(
    yLimitAngle: f32,
    zLimitAngle: f32,
    contactDist_deprecated: f32
) -> PxJointLimitCone
{
    PxJointLimitCone_new(
        yLimitAngle,
        zLimitAngle,
        contactDist_deprecated
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLimitCone_new_1(
    yLimitAngle: f32,
    zLimitAngle: f32,
    spring: *const PxSpring
) -> PxJointLimitCone
{
    PxJointLimitCone_new_1(
        yLimitAngle,
        zLimitAngle,
        spring
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLimitCone_isValid(
    self_: *const PxJointLimitCone
) -> bool
{
    PxJointLimitCone_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLimitCone_delete(
    self_: *mut PxJointLimitCone
)
{
    PxJointLimitCone_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLimitPyramid_new(
    yLimitAngleMin: f32,
    yLimitAngleMax: f32,
    zLimitAngleMin: f32,
    zLimitAngleMax: f32,
    contactDist_deprecated: f32
) -> PxJointLimitPyramid
{
    PxJointLimitPyramid_new(
        yLimitAngleMin,
        yLimitAngleMax,
        zLimitAngleMin,
        zLimitAngleMax,
        contactDist_deprecated
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLimitPyramid_new_1(
    yLimitAngleMin: f32,
    yLimitAngleMax: f32,
    zLimitAngleMin: f32,
    zLimitAngleMax: f32,
    spring: *const PxSpring
) -> PxJointLimitPyramid
{
    PxJointLimitPyramid_new_1(
        yLimitAngleMin,
        yLimitAngleMax,
        zLimitAngleMin,
        zLimitAngleMax,
        spring
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLimitPyramid_isValid(
    self_: *const PxJointLimitPyramid
) -> bool
{
    PxJointLimitPyramid_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxJointLimitPyramid_delete(
    self_: *mut PxJointLimitPyramid
)
{
    PxJointLimitPyramid_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxPrismaticJointCreate(
    physics: *mut PxPhysics,
    actor0: *mut PxRigidActor,
    localFrame0: *const PxTransform,
    actor1: *mut PxRigidActor,
    localFrame1: *const PxTransform
) -> *mut PxPrismaticJoint
{
    phys_PxPrismaticJointCreate(
        physics,
        actor0,
        localFrame0,
        actor1,
        localFrame1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPrismaticJoint_getPosition(
    self_: *const PxPrismaticJoint
) -> f32
{
    PxPrismaticJoint_getPosition(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPrismaticJoint_getVelocity(
    self_: *const PxPrismaticJoint
) -> f32
{
    PxPrismaticJoint_getVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPrismaticJoint_setLimit_mut(
    self_: *mut PxPrismaticJoint,
    anon_param0: *const PxJointLinearLimitPair
)
{
    PxPrismaticJoint_setLimit_mut(
        self_,
        anon_param0
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPrismaticJoint_getLimit(
    self_: *const PxPrismaticJoint
) -> PxJointLinearLimitPair
{
    PxPrismaticJoint_getLimit(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPrismaticJoint_setPrismaticJointFlags_mut(
    self_: *mut PxPrismaticJoint,
    flags: PxPrismaticJointFlags
)
{
    PxPrismaticJoint_setPrismaticJointFlags_mut(
        self_,
        flags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPrismaticJoint_setPrismaticJointFlag_mut(
    self_: *mut PxPrismaticJoint,
    flag: PxPrismaticJointFlag,
    value: bool
)
{
    PxPrismaticJoint_setPrismaticJointFlag_mut(
        self_,
        flag,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPrismaticJoint_getPrismaticJointFlags(
    self_: *const PxPrismaticJoint
) -> PxPrismaticJointFlags
{
    PxPrismaticJoint_getPrismaticJointFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPrismaticJoint_getConcreteTypeName(
    self_: *const PxPrismaticJoint
) -> *const c_char
{
    PxPrismaticJoint_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxRevoluteJointCreate(
    physics: *mut PxPhysics,
    actor0: *mut PxRigidActor,
    localFrame0: *const PxTransform,
    actor1: *mut PxRigidActor,
    localFrame1: *const PxTransform
) -> *mut PxRevoluteJoint
{
    phys_PxRevoluteJointCreate(
        physics,
        actor0,
        localFrame0,
        actor1,
        localFrame1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRevoluteJoint_getAngle(
    self_: *const PxRevoluteJoint
) -> f32
{
    PxRevoluteJoint_getAngle(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRevoluteJoint_getVelocity(
    self_: *const PxRevoluteJoint
) -> f32
{
    PxRevoluteJoint_getVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRevoluteJoint_setLimit_mut(
    self_: *mut PxRevoluteJoint,
    limits: *const PxJointAngularLimitPair
)
{
    PxRevoluteJoint_setLimit_mut(
        self_,
        limits
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRevoluteJoint_getLimit(
    self_: *const PxRevoluteJoint
) -> PxJointAngularLimitPair
{
    PxRevoluteJoint_getLimit(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRevoluteJoint_setDriveVelocity_mut(
    self_: *mut PxRevoluteJoint,
    velocity: f32,
    autowake: bool
)
{
    PxRevoluteJoint_setDriveVelocity_mut(
        self_,
        velocity,
        autowake
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRevoluteJoint_getDriveVelocity(
    self_: *const PxRevoluteJoint
) -> f32
{
    PxRevoluteJoint_getDriveVelocity(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRevoluteJoint_setDriveForceLimit_mut(
    self_: *mut PxRevoluteJoint,
    limit: f32
)
{
    PxRevoluteJoint_setDriveForceLimit_mut(
        self_,
        limit
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRevoluteJoint_getDriveForceLimit(
    self_: *const PxRevoluteJoint
) -> f32
{
    PxRevoluteJoint_getDriveForceLimit(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRevoluteJoint_setDriveGearRatio_mut(
    self_: *mut PxRevoluteJoint,
    ratio: f32
)
{
    PxRevoluteJoint_setDriveGearRatio_mut(
        self_,
        ratio
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRevoluteJoint_getDriveGearRatio(
    self_: *const PxRevoluteJoint
) -> f32
{
    PxRevoluteJoint_getDriveGearRatio(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRevoluteJoint_setRevoluteJointFlags_mut(
    self_: *mut PxRevoluteJoint,
    flags: PxRevoluteJointFlags
)
{
    PxRevoluteJoint_setRevoluteJointFlags_mut(
        self_,
        flags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRevoluteJoint_setRevoluteJointFlag_mut(
    self_: *mut PxRevoluteJoint,
    flag: PxRevoluteJointFlag,
    value: bool
)
{
    PxRevoluteJoint_setRevoluteJointFlag_mut(
        self_,
        flag,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRevoluteJoint_getRevoluteJointFlags(
    self_: *const PxRevoluteJoint
) -> PxRevoluteJointFlags
{
    PxRevoluteJoint_getRevoluteJointFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRevoluteJoint_getConcreteTypeName(
    self_: *const PxRevoluteJoint
) -> *const c_char
{
    PxRevoluteJoint_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxSphericalJointCreate(
    physics: *mut PxPhysics,
    actor0: *mut PxRigidActor,
    localFrame0: *const PxTransform,
    actor1: *mut PxRigidActor,
    localFrame1: *const PxTransform
) -> *mut PxSphericalJoint
{
    phys_PxSphericalJointCreate(
        physics,
        actor0,
        localFrame0,
        actor1,
        localFrame1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSphericalJoint_getLimitCone(
    self_: *const PxSphericalJoint
) -> PxJointLimitCone
{
    PxSphericalJoint_getLimitCone(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSphericalJoint_setLimitCone_mut(
    self_: *mut PxSphericalJoint,
    limit: *const PxJointLimitCone
)
{
    PxSphericalJoint_setLimitCone_mut(
        self_,
        limit
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSphericalJoint_getSwingYAngle(
    self_: *const PxSphericalJoint
) -> f32
{
    PxSphericalJoint_getSwingYAngle(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSphericalJoint_getSwingZAngle(
    self_: *const PxSphericalJoint
) -> f32
{
    PxSphericalJoint_getSwingZAngle(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSphericalJoint_setSphericalJointFlags_mut(
    self_: *mut PxSphericalJoint,
    flags: PxSphericalJointFlags
)
{
    PxSphericalJoint_setSphericalJointFlags_mut(
        self_,
        flags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSphericalJoint_setSphericalJointFlag_mut(
    self_: *mut PxSphericalJoint,
    flag: PxSphericalJointFlag,
    value: bool
)
{
    PxSphericalJoint_setSphericalJointFlag_mut(
        self_,
        flag,
        value
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSphericalJoint_getSphericalJointFlags(
    self_: *const PxSphericalJoint
) -> PxSphericalJointFlags
{
    PxSphericalJoint_getSphericalJointFlags(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSphericalJoint_getConcreteTypeName(
    self_: *const PxSphericalJoint
) -> *const c_char
{
    PxSphericalJoint_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxD6JointCreate(
    physics: *mut PxPhysics,
    actor0: *mut PxRigidActor,
    localFrame0: *const PxTransform,
    actor1: *mut PxRigidActor,
    localFrame1: *const PxTransform
) -> *mut PxD6Joint
{
    phys_PxD6JointCreate(
        physics,
        actor0,
        localFrame0,
        actor1,
        localFrame1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6JointDrive_new(

) -> PxD6JointDrive
{
    PxD6JointDrive_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6JointDrive_new_1(
    driveStiffness: f32,
    driveDamping: f32,
    driveForceLimit: f32,
    isAcceleration: bool
) -> PxD6JointDrive
{
    PxD6JointDrive_new_1(
        driveStiffness,
        driveDamping,
        driveForceLimit,
        isAcceleration
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6JointDrive_isValid(
    self_: *const PxD6JointDrive
) -> bool
{
    PxD6JointDrive_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_setMotion_mut(
    self_: *mut PxD6Joint,
    axis: PxD6Axis,
    type_: PxD6Motion
)
{
    PxD6Joint_setMotion_mut(
        self_,
        axis,
        type_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_getMotion(
    self_: *const PxD6Joint,
    axis: PxD6Axis
) -> PxD6Motion
{
    PxD6Joint_getMotion(
        self_,
        axis
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_getTwistAngle(
    self_: *const PxD6Joint
) -> f32
{
    PxD6Joint_getTwistAngle(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_getSwingYAngle(
    self_: *const PxD6Joint
) -> f32
{
    PxD6Joint_getSwingYAngle(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_getSwingZAngle(
    self_: *const PxD6Joint
) -> f32
{
    PxD6Joint_getSwingZAngle(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_setDistanceLimit_mut(
    self_: *mut PxD6Joint,
    limit: *const PxJointLinearLimit
)
{
    PxD6Joint_setDistanceLimit_mut(
        self_,
        limit
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_getDistanceLimit(
    self_: *const PxD6Joint
) -> PxJointLinearLimit
{
    PxD6Joint_getDistanceLimit(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_setLinearLimit_mut(
    self_: *mut PxD6Joint,
    axis: PxD6Axis,
    limit: *const PxJointLinearLimitPair
)
{
    PxD6Joint_setLinearLimit_mut(
        self_,
        axis,
        limit
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_getLinearLimit(
    self_: *const PxD6Joint,
    axis: PxD6Axis
) -> PxJointLinearLimitPair
{
    PxD6Joint_getLinearLimit(
        self_,
        axis
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_setTwistLimit_mut(
    self_: *mut PxD6Joint,
    limit: *const PxJointAngularLimitPair
)
{
    PxD6Joint_setTwistLimit_mut(
        self_,
        limit
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_getTwistLimit(
    self_: *const PxD6Joint
) -> PxJointAngularLimitPair
{
    PxD6Joint_getTwistLimit(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_setSwingLimit_mut(
    self_: *mut PxD6Joint,
    limit: *const PxJointLimitCone
)
{
    PxD6Joint_setSwingLimit_mut(
        self_,
        limit
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_getSwingLimit(
    self_: *const PxD6Joint
) -> PxJointLimitCone
{
    PxD6Joint_getSwingLimit(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_setPyramidSwingLimit_mut(
    self_: *mut PxD6Joint,
    limit: *const PxJointLimitPyramid
)
{
    PxD6Joint_setPyramidSwingLimit_mut(
        self_,
        limit
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_getPyramidSwingLimit(
    self_: *const PxD6Joint
) -> PxJointLimitPyramid
{
    PxD6Joint_getPyramidSwingLimit(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_setDrive_mut(
    self_: *mut PxD6Joint,
    index: PxD6Drive,
    drive: *const PxD6JointDrive
)
{
    PxD6Joint_setDrive_mut(
        self_,
        index,
        drive
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_getDrive(
    self_: *const PxD6Joint,
    index: PxD6Drive
) -> PxD6JointDrive
{
    PxD6Joint_getDrive(
        self_,
        index
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_setDrivePosition_mut(
    self_: *mut PxD6Joint,
    pose: *const PxTransform,
    autowake: bool
)
{
    PxD6Joint_setDrivePosition_mut(
        self_,
        pose,
        autowake
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_getDrivePosition(
    self_: *const PxD6Joint
) -> PxTransform
{
    PxD6Joint_getDrivePosition(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_setDriveVelocity_mut(
    self_: *mut PxD6Joint,
    linear: *const PxVec3,
    angular: *const PxVec3,
    autowake: bool
)
{
    PxD6Joint_setDriveVelocity_mut(
        self_,
        linear,
        angular,
        autowake
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_getDriveVelocity(
    self_: *const PxD6Joint,
    linear: *mut PxVec3,
    angular: *mut PxVec3
)
{
    PxD6Joint_getDriveVelocity(
        self_,
        linear,
        angular
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_setProjectionLinearTolerance_mut(
    self_: *mut PxD6Joint,
    tolerance: f32
)
{
    PxD6Joint_setProjectionLinearTolerance_mut(
        self_,
        tolerance
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_getProjectionLinearTolerance(
    self_: *const PxD6Joint
) -> f32
{
    PxD6Joint_getProjectionLinearTolerance(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_setProjectionAngularTolerance_mut(
    self_: *mut PxD6Joint,
    tolerance: f32
)
{
    PxD6Joint_setProjectionAngularTolerance_mut(
        self_,
        tolerance
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_getProjectionAngularTolerance(
    self_: *const PxD6Joint
) -> f32
{
    PxD6Joint_getProjectionAngularTolerance(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxD6Joint_getConcreteTypeName(
    self_: *const PxD6Joint
) -> *const c_char
{
    PxD6Joint_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGearJointCreate(
    physics: *mut PxPhysics,
    actor0: *mut PxRigidActor,
    localFrame0: *const PxTransform,
    actor1: *mut PxRigidActor,
    localFrame1: *const PxTransform
) -> *mut PxGearJoint
{
    phys_PxGearJointCreate(
        physics,
        actor0,
        localFrame0,
        actor1,
        localFrame1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGearJoint_setHinges_mut(
    self_: *mut PxGearJoint,
    hinge0: *const PxBase,
    hinge1: *const PxBase
) -> bool
{
    PxGearJoint_setHinges_mut(
        self_,
        hinge0,
        hinge1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGearJoint_setGearRatio_mut(
    self_: *mut PxGearJoint,
    ratio: f32
)
{
    PxGearJoint_setGearRatio_mut(
        self_,
        ratio
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGearJoint_getGearRatio(
    self_: *const PxGearJoint
) -> f32
{
    PxGearJoint_getGearRatio(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGearJoint_getConcreteTypeName(
    self_: *const PxGearJoint
) -> *const c_char
{
    PxGearJoint_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxRackAndPinionJointCreate(
    physics: *mut PxPhysics,
    actor0: *mut PxRigidActor,
    localFrame0: *const PxTransform,
    actor1: *mut PxRigidActor,
    localFrame1: *const PxTransform
) -> *mut PxRackAndPinionJoint
{
    phys_PxRackAndPinionJointCreate(
        physics,
        actor0,
        localFrame0,
        actor1,
        localFrame1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRackAndPinionJoint_setJoints_mut(
    self_: *mut PxRackAndPinionJoint,
    hinge: *const PxBase,
    prismatic: *const PxBase
) -> bool
{
    PxRackAndPinionJoint_setJoints_mut(
        self_,
        hinge,
        prismatic
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRackAndPinionJoint_setRatio_mut(
    self_: *mut PxRackAndPinionJoint,
    ratio: f32
)
{
    PxRackAndPinionJoint_setRatio_mut(
        self_,
        ratio
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRackAndPinionJoint_getRatio(
    self_: *const PxRackAndPinionJoint
) -> f32
{
    PxRackAndPinionJoint_getRatio(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRackAndPinionJoint_setData_mut(
    self_: *mut PxRackAndPinionJoint,
    nbRackTeeth: u32,
    nbPinionTeeth: u32,
    rackLength: f32
) -> bool
{
    PxRackAndPinionJoint_setData_mut(
        self_,
        nbRackTeeth,
        nbPinionTeeth,
        rackLength
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRackAndPinionJoint_getConcreteTypeName(
    self_: *const PxRackAndPinionJoint
) -> *const c_char
{
    PxRackAndPinionJoint_getConcreteTypeName(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGroupsMask_new_alloc(

) -> *mut PxGroupsMask
{
    PxGroupsMask_new_alloc(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxGroupsMask_delete(
    self_: *mut PxGroupsMask
)
{
    PxGroupsMask_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxDefaultSimulationFilterShader(
    attributes0: u32,
    filterData0: PxFilterData,
    attributes1: u32,
    filterData1: PxFilterData,
    pairFlags: *mut PxPairFlags,
    constantBlock: *const c_void,
    constantBlockSize: u32
) -> PxFilterFlags
{
    phys_PxDefaultSimulationFilterShader(
        attributes0,
        filterData0,
        attributes1,
        filterData1,
        pairFlags,
        constantBlock,
        constantBlockSize
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetGroupCollisionFlag(
    group1: u16,
    group2: u16
) -> bool
{
    phys_PxGetGroupCollisionFlag(
        group1,
        group2
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxSetGroupCollisionFlag(
    group1: u16,
    group2: u16,
    enable: bool
)
{
    phys_PxSetGroupCollisionFlag(
        group1,
        group2,
        enable
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetGroup(
    actor: *const PxActor
) -> u16
{
    phys_PxGetGroup(
        actor
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxSetGroup(
    actor: *mut PxActor,
    collisionGroup: u16
)
{
    phys_PxSetGroup(
        actor,
        collisionGroup
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetFilterOps(
    op0: *mut PxFilterOp,
    op1: *mut PxFilterOp,
    op2: *mut PxFilterOp
)
{
    phys_PxGetFilterOps(
        op0,
        op1,
        op2
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxSetFilterOps(
    op0: *const PxFilterOp,
    op1: *const PxFilterOp,
    op2: *const PxFilterOp
)
{
    phys_PxSetFilterOps(
        op0,
        op1,
        op2
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetFilterBool(

) -> bool
{
    phys_PxGetFilterBool(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxSetFilterBool(
    enable: bool
)
{
    phys_PxSetFilterBool(
        enable
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetFilterConstants(
    c0: *mut PxGroupsMask,
    c1: *mut PxGroupsMask
)
{
    phys_PxGetFilterConstants(
        c0,
        c1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxSetFilterConstants(
    c0: *const PxGroupsMask,
    c1: *const PxGroupsMask
)
{
    phys_PxSetFilterConstants(
        c0,
        c1
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxGetGroupsMask(
    actor: *const PxActor
) -> PxGroupsMask
{
    phys_PxGetGroupsMask(
        actor
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxSetGroupsMask(
    actor: *mut PxActor,
    mask: *const PxGroupsMask
)
{
    phys_PxSetGroupsMask(
        actor,
        mask
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultErrorCallback_new_alloc(

) -> *mut PxDefaultErrorCallback
{
    PxDefaultErrorCallback_new_alloc(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultErrorCallback_delete(
    self_: *mut PxDefaultErrorCallback
)
{
    PxDefaultErrorCallback_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultErrorCallback_reportError_mut(
    self_: *mut PxDefaultErrorCallback,
    code: PxErrorCode,
    message: *const c_char,
    file: *const c_char,
    line: i32
)
{
    PxDefaultErrorCallback_reportError_mut(
        self_,
        code,
        message,
        file,
        line
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidActorExt_createExclusiveShape(
    actor: *mut PxRigidActor,
    geometry: *const PxGeometry,
    materials: *const *mut PxMaterial,
    materialCount: u16,
    shapeFlags: PxShapeFlags
) -> *mut PxShape
{
    PxRigidActorExt_createExclusiveShape(
        actor,
        geometry,
        materials,
        materialCount,
        shapeFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidActorExt_createExclusiveShape_1(
    actor: *mut PxRigidActor,
    geometry: *const PxGeometry,
    material: *const PxMaterial,
    shapeFlags: PxShapeFlags
) -> *mut PxShape
{
    PxRigidActorExt_createExclusiveShape_1(
        actor,
        geometry,
        material,
        shapeFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidActorExt_getRigidActorShapeLocalBoundsList(
    actor: *const PxRigidActor,
    numBounds: *mut u32
) -> *mut PxBounds3
{
    PxRigidActorExt_getRigidActorShapeLocalBoundsList(
        actor,
        numBounds
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidActorExt_createBVHFromActor(
    physics: *mut PxPhysics,
    actor: *const PxRigidActor
) -> *mut PxBVH
{
    PxRigidActorExt_createBVHFromActor(
        physics,
        actor
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMassProperties_new(

) -> PxMassProperties
{
    PxMassProperties_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMassProperties_new_1(
    m: f32,
    inertiaT: *const PxMat33,
    com: *const PxVec3
) -> PxMassProperties
{
    PxMassProperties_new_1(
        m,
        inertiaT,
        com
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMassProperties_new_2(
    geometry: *const PxGeometry
) -> PxMassProperties
{
    PxMassProperties_new_2(
        geometry
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMassProperties_translate_mut(
    self_: *mut PxMassProperties,
    t: *const PxVec3
)
{
    PxMassProperties_translate_mut(
        self_,
        t
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMassProperties_getMassSpaceInertia(
    inertia: *const PxMat33,
    massFrame: *mut PxQuat
) -> PxVec3
{
    PxMassProperties_getMassSpaceInertia(
        inertia,
        massFrame
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMassProperties_translateInertia(
    inertia: *const PxMat33,
    mass: f32,
    t: *const PxVec3
) -> PxMat33
{
    PxMassProperties_translateInertia(
        inertia,
        mass,
        t
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMassProperties_rotateInertia(
    inertia: *const PxMat33,
    q: *const PxQuat
) -> PxMat33
{
    PxMassProperties_rotateInertia(
        inertia,
        q
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMassProperties_scaleInertia(
    inertia: *const PxMat33,
    scaleRotation: *const PxQuat,
    scale: *const PxVec3
) -> PxMat33
{
    PxMassProperties_scaleInertia(
        inertia,
        scaleRotation,
        scale
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMassProperties_sum(
    props: *const PxMassProperties,
    transforms: *const PxTransform,
    count: u32
) -> PxMassProperties
{
    PxMassProperties_sum(
        props,
        transforms,
        count
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBodyExt_updateMassAndInertia(
    body: *mut PxRigidBody,
    shapeDensities: *const f32,
    shapeDensityCount: u32,
    massLocalPose: *const PxVec3,
    includeNonSimShapes: bool
) -> bool
{
    PxRigidBodyExt_updateMassAndInertia(
        body,
        shapeDensities,
        shapeDensityCount,
        massLocalPose,
        includeNonSimShapes
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBodyExt_updateMassAndInertia_1(
    body: *mut PxRigidBody,
    density: f32,
    massLocalPose: *const PxVec3,
    includeNonSimShapes: bool
) -> bool
{
    PxRigidBodyExt_updateMassAndInertia_1(
        body,
        density,
        massLocalPose,
        includeNonSimShapes
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBodyExt_setMassAndUpdateInertia(
    body: *mut PxRigidBody,
    shapeMasses: *const f32,
    shapeMassCount: u32,
    massLocalPose: *const PxVec3,
    includeNonSimShapes: bool
) -> bool
{
    PxRigidBodyExt_setMassAndUpdateInertia(
        body,
        shapeMasses,
        shapeMassCount,
        massLocalPose,
        includeNonSimShapes
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBodyExt_setMassAndUpdateInertia_1(
    body: *mut PxRigidBody,
    mass: f32,
    massLocalPose: *const PxVec3,
    includeNonSimShapes: bool
) -> bool
{
    PxRigidBodyExt_setMassAndUpdateInertia_1(
        body,
        mass,
        massLocalPose,
        includeNonSimShapes
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBodyExt_computeMassPropertiesFromShapes(
    shapes: *const *const PxShape,
    shapeCount: u32
) -> PxMassProperties
{
    PxRigidBodyExt_computeMassPropertiesFromShapes(
        shapes,
        shapeCount
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBodyExt_addForceAtPos(
    body: *mut PxRigidBody,
    force: *const PxVec3,
    pos: *const PxVec3,
    mode: PxForceMode,
    wakeup: bool
)
{
    PxRigidBodyExt_addForceAtPos(
        body,
        force,
        pos,
        mode,
        wakeup
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBodyExt_addForceAtLocalPos(
    body: *mut PxRigidBody,
    force: *const PxVec3,
    pos: *const PxVec3,
    mode: PxForceMode,
    wakeup: bool
)
{
    PxRigidBodyExt_addForceAtLocalPos(
        body,
        force,
        pos,
        mode,
        wakeup
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBodyExt_addLocalForceAtPos(
    body: *mut PxRigidBody,
    force: *const PxVec3,
    pos: *const PxVec3,
    mode: PxForceMode,
    wakeup: bool
)
{
    PxRigidBodyExt_addLocalForceAtPos(
        body,
        force,
        pos,
        mode,
        wakeup
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBodyExt_addLocalForceAtLocalPos(
    body: *mut PxRigidBody,
    force: *const PxVec3,
    pos: *const PxVec3,
    mode: PxForceMode,
    wakeup: bool
)
{
    PxRigidBodyExt_addLocalForceAtLocalPos(
        body,
        force,
        pos,
        mode,
        wakeup
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBodyExt_getVelocityAtPos(
    body: *const PxRigidBody,
    pos: *const PxVec3
) -> PxVec3
{
    PxRigidBodyExt_getVelocityAtPos(
        body,
        pos
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBodyExt_getLocalVelocityAtLocalPos(
    body: *const PxRigidBody,
    pos: *const PxVec3
) -> PxVec3
{
    PxRigidBodyExt_getLocalVelocityAtLocalPos(
        body,
        pos
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBodyExt_getVelocityAtOffset(
    body: *const PxRigidBody,
    pos: *const PxVec3
) -> PxVec3
{
    PxRigidBodyExt_getVelocityAtOffset(
        body,
        pos
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBodyExt_computeVelocityDeltaFromImpulse(
    body: *const PxRigidBody,
    impulsiveForce: *const PxVec3,
    impulsiveTorque: *const PxVec3,
    deltaLinearVelocity: *mut PxVec3,
    deltaAngularVelocity: *mut PxVec3
)
{
    PxRigidBodyExt_computeVelocityDeltaFromImpulse(
        body,
        impulsiveForce,
        impulsiveTorque,
        deltaLinearVelocity,
        deltaAngularVelocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBodyExt_computeVelocityDeltaFromImpulse_1(
    body: *const PxRigidBody,
    globalPose: *const PxTransform,
    point: *const PxVec3,
    impulse: *const PxVec3,
    invMassScale: f32,
    invInertiaScale: f32,
    deltaLinearVelocity: *mut PxVec3,
    deltaAngularVelocity: *mut PxVec3
)
{
    PxRigidBodyExt_computeVelocityDeltaFromImpulse_1(
        body,
        globalPose,
        point,
        impulse,
        invMassScale,
        invInertiaScale,
        deltaLinearVelocity,
        deltaAngularVelocity
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBodyExt_computeLinearAngularImpulse(
    body: *const PxRigidBody,
    globalPose: *const PxTransform,
    point: *const PxVec3,
    impulse: *const PxVec3,
    invMassScale: f32,
    invInertiaScale: f32,
    linearImpulse: *mut PxVec3,
    angularImpulse: *mut PxVec3
)
{
    PxRigidBodyExt_computeLinearAngularImpulse(
        body,
        globalPose,
        point,
        impulse,
        invMassScale,
        invInertiaScale,
        linearImpulse,
        angularImpulse
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBodyExt_linearSweepSingle(
    body: *mut PxRigidBody,
    scene: *mut PxScene,
    unitDir: *const PxVec3,
    distance: f32,
    outputFlags: PxHitFlags,
    closestHit: *mut PxSweepHit,
    shapeIndex: *mut u32,
    filterData: *const PxQueryFilterData,
    filterCall: *mut PxQueryFilterCallback,
    cache: *const PxQueryCache,
    inflation: f32
) -> bool
{
    PxRigidBodyExt_linearSweepSingle(
        body,
        scene,
        unitDir,
        distance,
        outputFlags,
        closestHit,
        shapeIndex,
        filterData,
        filterCall,
        cache,
        inflation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRigidBodyExt_linearSweepMultiple(
    body: *mut PxRigidBody,
    scene: *mut PxScene,
    unitDir: *const PxVec3,
    distance: f32,
    outputFlags: PxHitFlags,
    touchHitBuffer: *mut PxSweepHit,
    touchHitShapeIndices: *mut u32,
    touchHitBufferSize: u32,
    block: *mut PxSweepHit,
    blockingShapeIndex: *mut i32,
    overflow: *mut bool,
    filterData: *const PxQueryFilterData,
    filterCall: *mut PxQueryFilterCallback,
    cache: *const PxQueryCache,
    inflation: f32
) -> u32
{
    PxRigidBodyExt_linearSweepMultiple(
        body,
        scene,
        unitDir,
        distance,
        outputFlags,
        touchHitBuffer,
        touchHitShapeIndices,
        touchHitBufferSize,
        block,
        blockingShapeIndex,
        overflow,
        filterData,
        filterCall,
        cache,
        inflation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShapeExt_getGlobalPose(
    shape: *const PxShape,
    actor: *const PxRigidActor
) -> PxTransform
{
    PxShapeExt_getGlobalPose(
        shape,
        actor
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShapeExt_raycast(
    shape: *const PxShape,
    actor: *const PxRigidActor,
    rayOrigin: *const PxVec3,
    rayDir: *const PxVec3,
    maxDist: f32,
    hitFlags: PxHitFlags,
    maxHits: u32,
    rayHits: *mut PxRaycastHit
) -> u32
{
    PxShapeExt_raycast(
        shape,
        actor,
        rayOrigin,
        rayDir,
        maxDist,
        hitFlags,
        maxHits,
        rayHits
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShapeExt_overlap(
    shape: *const PxShape,
    actor: *const PxRigidActor,
    otherGeom: *const PxGeometry,
    otherGeomPose: *const PxTransform
) -> bool
{
    PxShapeExt_overlap(
        shape,
        actor,
        otherGeom,
        otherGeomPose
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShapeExt_sweep(
    shape: *const PxShape,
    actor: *const PxRigidActor,
    unitDir: *const PxVec3,
    distance: f32,
    otherGeom: *const PxGeometry,
    otherGeomPose: *const PxTransform,
    sweepHit: *mut PxSweepHit,
    hitFlags: PxHitFlags
) -> bool
{
    PxShapeExt_sweep(
        shape,
        actor,
        unitDir,
        distance,
        otherGeom,
        otherGeomPose,
        sweepHit,
        hitFlags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxShapeExt_getWorldBounds(
    shape: *const PxShape,
    actor: *const PxRigidActor,
    inflation: f32
) -> PxBounds3
{
    PxShapeExt_getWorldBounds(
        shape,
        actor,
        inflation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshOverlapUtil_new_alloc(

) -> *mut PxMeshOverlapUtil
{
    PxMeshOverlapUtil_new_alloc(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshOverlapUtil_delete(
    self_: *mut PxMeshOverlapUtil
)
{
    PxMeshOverlapUtil_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshOverlapUtil_findOverlap_mut(
    self_: *mut PxMeshOverlapUtil,
    geom: *const PxGeometry,
    geomPose: *const PxTransform,
    meshGeom: *const PxTriangleMeshGeometry,
    meshPose: *const PxTransform
) -> u32
{
    PxMeshOverlapUtil_findOverlap_mut(
        self_,
        geom,
        geomPose,
        meshGeom,
        meshPose
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshOverlapUtil_findOverlap_mut_1(
    self_: *mut PxMeshOverlapUtil,
    geom: *const PxGeometry,
    geomPose: *const PxTransform,
    hfGeom: *const PxHeightFieldGeometry,
    hfPose: *const PxTransform
) -> u32
{
    PxMeshOverlapUtil_findOverlap_mut_1(
        self_,
        geom,
        geomPose,
        hfGeom,
        hfPose
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshOverlapUtil_getResults(
    self_: *const PxMeshOverlapUtil
) -> *const u32
{
    PxMeshOverlapUtil_getResults(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxMeshOverlapUtil_getNbResults(
    self_: *const PxMeshOverlapUtil
) -> u32
{
    PxMeshOverlapUtil_getNbResults(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxComputeTriangleMeshPenetration(
    direction: *mut PxVec3,
    depth: *mut f32,
    geom: *const PxGeometry,
    geomPose: *const PxTransform,
    meshGeom: *const PxTriangleMeshGeometry,
    meshPose: *const PxTransform,
    maxIter: u32,
    usedIter: *mut u32
) -> bool
{
    phys_PxComputeTriangleMeshPenetration(
        direction,
        depth,
        geom,
        geomPose,
        meshGeom,
        meshPose,
        maxIter,
        usedIter
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxComputeHeightFieldPenetration(
    direction: *mut PxVec3,
    depth: *mut f32,
    geom: *const PxGeometry,
    geomPose: *const PxTransform,
    heightFieldGeom: *const PxHeightFieldGeometry,
    heightFieldPose: *const PxTransform,
    maxIter: u32,
    usedIter: *mut u32
) -> bool
{
    phys_PxComputeHeightFieldPenetration(
        direction,
        depth,
        geom,
        geomPose,
        heightFieldGeom,
        heightFieldPose,
        maxIter,
        usedIter
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxXmlMiscParameter_new(

) -> PxXmlMiscParameter
{
    PxXmlMiscParameter_new(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxXmlMiscParameter_new_1(
    inUpVector: *mut PxVec3,
    inScale: PxTolerancesScale
) -> PxXmlMiscParameter
{
    PxXmlMiscParameter_new_1(
        inUpVector,
        inScale
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerialization_isSerializable(
    collection: *mut PxCollection,
    sr: *mut PxSerializationRegistry,
    externalReferences: *const PxCollection
) -> bool
{
    PxSerialization_isSerializable(
        collection,
        sr,
        externalReferences
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerialization_complete(
    collection: *mut PxCollection,
    sr: *mut PxSerializationRegistry,
    exceptFor: *const PxCollection,
    followJoints: bool
)
{
    PxSerialization_complete(
        collection,
        sr,
        exceptFor,
        followJoints
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerialization_createSerialObjectIds(
    collection: *mut PxCollection,
    base: u64
)
{
    PxSerialization_createSerialObjectIds(
        collection,
        base
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerialization_createCollectionFromXml(
    inputData: *mut PxInputData,
    cooking: *mut PxCooking,
    sr: *mut PxSerializationRegistry,
    externalRefs: *const PxCollection,
    stringTable: *mut PxStringTable,
    outArgs: *mut PxXmlMiscParameter
) -> *mut PxCollection
{
    PxSerialization_createCollectionFromXml(
        inputData,
        cooking,
        sr,
        externalRefs,
        stringTable,
        outArgs
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerialization_createCollectionFromBinary(
    memBlock: *mut c_void,
    sr: *mut PxSerializationRegistry,
    externalRefs: *const PxCollection
) -> *mut PxCollection
{
    PxSerialization_createCollectionFromBinary(
        memBlock,
        sr,
        externalRefs
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerialization_serializeCollectionToXml(
    outputStream: *mut PxOutputStream,
    collection: *mut PxCollection,
    sr: *mut PxSerializationRegistry,
    cooking: *mut PxCooking,
    externalRefs: *const PxCollection,
    inArgs: *mut PxXmlMiscParameter
) -> bool
{
    PxSerialization_serializeCollectionToXml(
        outputStream,
        collection,
        sr,
        cooking,
        externalRefs,
        inArgs
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerialization_serializeCollectionToBinary(
    outputStream: *mut PxOutputStream,
    collection: *mut PxCollection,
    sr: *mut PxSerializationRegistry,
    externalRefs: *const PxCollection,
    exportNames: bool
) -> bool
{
    PxSerialization_serializeCollectionToBinary(
        outputStream,
        collection,
        sr,
        externalRefs,
        exportNames
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSerialization_createSerializationRegistry(
    physics: *mut PxPhysics
) -> *mut PxSerializationRegistry
{
    PxSerialization_createSerializationRegistry(
        physics
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultCpuDispatcher_release_mut(
    self_: *mut PxDefaultCpuDispatcher
)
{
    PxDefaultCpuDispatcher_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultCpuDispatcher_setRunProfiled_mut(
    self_: *mut PxDefaultCpuDispatcher,
    runProfiled: bool
)
{
    PxDefaultCpuDispatcher_setRunProfiled_mut(
        self_,
        runProfiled
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxDefaultCpuDispatcher_getRunProfiled(
    self_: *const PxDefaultCpuDispatcher
) -> bool
{
    PxDefaultCpuDispatcher_getRunProfiled(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxDefaultCpuDispatcherCreate(
    numThreads: u32,
    affinityMasks: *mut u32,
    mode: PxDefaultCpuDispatcherWaitForWorkMode,
    yieldProcessorCount: u32
) -> *mut PxDefaultCpuDispatcher
{
    phys_PxDefaultCpuDispatcherCreate(
        numThreads,
        affinityMasks,
        mode,
        yieldProcessorCount
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxBuildSmoothNormals(
    nbTris: u32,
    nbVerts: u32,
    verts: *const PxVec3,
    dFaces: *const u32,
    wFaces: *const u16,
    normals: *mut PxVec3,
    flip: bool
) -> bool
{
    phys_PxBuildSmoothNormals(
        nbTris,
        nbVerts,
        verts,
        dFaces,
        wFaces,
        normals,
        flip
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateDynamic(
    sdk: *mut PxPhysics,
    transform: *const PxTransform,
    geometry: *const PxGeometry,
    material: *mut PxMaterial,
    density: f32,
    shapeOffset: *const PxTransform
) -> *mut PxRigidDynamic
{
    phys_PxCreateDynamic(
        sdk,
        transform,
        geometry,
        material,
        density,
        shapeOffset
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateDynamic_1(
    sdk: *mut PxPhysics,
    transform: *const PxTransform,
    shape: *mut PxShape,
    density: f32
) -> *mut PxRigidDynamic
{
    phys_PxCreateDynamic_1(
        sdk,
        transform,
        shape,
        density
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateKinematic(
    sdk: *mut PxPhysics,
    transform: *const PxTransform,
    geometry: *const PxGeometry,
    material: *mut PxMaterial,
    density: f32,
    shapeOffset: *const PxTransform
) -> *mut PxRigidDynamic
{
    phys_PxCreateKinematic(
        sdk,
        transform,
        geometry,
        material,
        density,
        shapeOffset
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateKinematic_1(
    sdk: *mut PxPhysics,
    transform: *const PxTransform,
    shape: *mut PxShape,
    density: f32
) -> *mut PxRigidDynamic
{
    phys_PxCreateKinematic_1(
        sdk,
        transform,
        shape,
        density
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateStatic(
    sdk: *mut PxPhysics,
    transform: *const PxTransform,
    geometry: *const PxGeometry,
    material: *mut PxMaterial,
    shapeOffset: *const PxTransform
) -> *mut PxRigidStatic
{
    phys_PxCreateStatic(
        sdk,
        transform,
        geometry,
        material,
        shapeOffset
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateStatic_1(
    sdk: *mut PxPhysics,
    transform: *const PxTransform,
    shape: *mut PxShape
) -> *mut PxRigidStatic
{
    phys_PxCreateStatic_1(
        sdk,
        transform,
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCloneShape(
    physicsSDK: *mut PxPhysics,
    shape: *const PxShape,
    isExclusive: bool
) -> *mut PxShape
{
    phys_PxCloneShape(
        physicsSDK,
        shape,
        isExclusive
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCloneStatic(
    physicsSDK: *mut PxPhysics,
    transform: *const PxTransform,
    actor: *const PxRigidActor
) -> *mut PxRigidStatic
{
    phys_PxCloneStatic(
        physicsSDK,
        transform,
        actor
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCloneDynamic(
    physicsSDK: *mut PxPhysics,
    transform: *const PxTransform,
    body: *const PxRigidDynamic
) -> *mut PxRigidDynamic
{
    phys_PxCloneDynamic(
        physicsSDK,
        transform,
        body
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreatePlane(
    sdk: *mut PxPhysics,
    plane: *const PxPlane,
    material: *mut PxMaterial
) -> *mut PxRigidStatic
{
    phys_PxCreatePlane(
        sdk,
        plane,
        material
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxScaleRigidActor(
    actor: *mut PxRigidActor,
    scale: f32,
    scaleMassProps: bool
)
{
    phys_PxScaleRigidActor(
        actor,
        scale,
        scaleMassProps
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxStringTableExt_createStringTable(
    inAllocator: *mut PxAllocatorCallback
) -> *mut PxStringTable
{
    PxStringTableExt_createStringTable(
        inAllocator
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBroadPhaseExt_createRegionsFromWorldBounds(
    regions: *mut PxBounds3,
    globalBounds: *const PxBounds3,
    nbSubdiv: u32,
    upAxis: u32
) -> u32
{
    PxBroadPhaseExt_createRegionsFromWorldBounds(
        regions,
        globalBounds,
        nbSubdiv,
        upAxis
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQueryExt_raycastAny(
    scene: *const PxScene,
    origin: *const PxVec3,
    unitDir: *const PxVec3,
    distance: f32,
    hit: *mut PxQueryHit,
    filterData: *const PxQueryFilterData,
    filterCall: *mut PxQueryFilterCallback,
    cache: *const PxQueryCache
) -> bool
{
    PxSceneQueryExt_raycastAny(
        scene,
        origin,
        unitDir,
        distance,
        hit,
        filterData,
        filterCall,
        cache
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQueryExt_raycastSingle(
    scene: *const PxScene,
    origin: *const PxVec3,
    unitDir: *const PxVec3,
    distance: f32,
    outputFlags: PxHitFlags,
    hit: *mut PxRaycastHit,
    filterData: *const PxQueryFilterData,
    filterCall: *mut PxQueryFilterCallback,
    cache: *const PxQueryCache
) -> bool
{
    PxSceneQueryExt_raycastSingle(
        scene,
        origin,
        unitDir,
        distance,
        outputFlags,
        hit,
        filterData,
        filterCall,
        cache
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQueryExt_raycastMultiple(
    scene: *const PxScene,
    origin: *const PxVec3,
    unitDir: *const PxVec3,
    distance: f32,
    outputFlags: PxHitFlags,
    hitBuffer: *mut PxRaycastHit,
    hitBufferSize: u32,
    blockingHit: *mut bool,
    filterData: *const PxQueryFilterData,
    filterCall: *mut PxQueryFilterCallback,
    cache: *const PxQueryCache
) -> i32
{
    PxSceneQueryExt_raycastMultiple(
        scene,
        origin,
        unitDir,
        distance,
        outputFlags,
        hitBuffer,
        hitBufferSize,
        blockingHit,
        filterData,
        filterCall,
        cache
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQueryExt_sweepAny(
    scene: *const PxScene,
    geometry: *const PxGeometry,
    pose: *const PxTransform,
    unitDir: *const PxVec3,
    distance: f32,
    queryFlags: PxHitFlags,
    hit: *mut PxQueryHit,
    filterData: *const PxQueryFilterData,
    filterCall: *mut PxQueryFilterCallback,
    cache: *const PxQueryCache,
    inflation: f32
) -> bool
{
    PxSceneQueryExt_sweepAny(
        scene,
        geometry,
        pose,
        unitDir,
        distance,
        queryFlags,
        hit,
        filterData,
        filterCall,
        cache,
        inflation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQueryExt_sweepSingle(
    scene: *const PxScene,
    geometry: *const PxGeometry,
    pose: *const PxTransform,
    unitDir: *const PxVec3,
    distance: f32,
    outputFlags: PxHitFlags,
    hit: *mut PxSweepHit,
    filterData: *const PxQueryFilterData,
    filterCall: *mut PxQueryFilterCallback,
    cache: *const PxQueryCache,
    inflation: f32
) -> bool
{
    PxSceneQueryExt_sweepSingle(
        scene,
        geometry,
        pose,
        unitDir,
        distance,
        outputFlags,
        hit,
        filterData,
        filterCall,
        cache,
        inflation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQueryExt_sweepMultiple(
    scene: *const PxScene,
    geometry: *const PxGeometry,
    pose: *const PxTransform,
    unitDir: *const PxVec3,
    distance: f32,
    outputFlags: PxHitFlags,
    hitBuffer: *mut PxSweepHit,
    hitBufferSize: u32,
    blockingHit: *mut bool,
    filterData: *const PxQueryFilterData,
    filterCall: *mut PxQueryFilterCallback,
    cache: *const PxQueryCache,
    inflation: f32
) -> i32
{
    PxSceneQueryExt_sweepMultiple(
        scene,
        geometry,
        pose,
        unitDir,
        distance,
        outputFlags,
        hitBuffer,
        hitBufferSize,
        blockingHit,
        filterData,
        filterCall,
        cache,
        inflation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQueryExt_overlapMultiple(
    scene: *const PxScene,
    geometry: *const PxGeometry,
    pose: *const PxTransform,
    hitBuffer: *mut PxOverlapHit,
    hitBufferSize: u32,
    filterData: *const PxQueryFilterData,
    filterCall: *mut PxQueryFilterCallback
) -> i32
{
    PxSceneQueryExt_overlapMultiple(
        scene,
        geometry,
        pose,
        hitBuffer,
        hitBufferSize,
        filterData,
        filterCall
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxSceneQueryExt_overlapAny(
    scene: *const PxScene,
    geometry: *const PxGeometry,
    pose: *const PxTransform,
    hit: *mut PxOverlapHit,
    filterData: *const PxQueryFilterData,
    filterCall: *mut PxQueryFilterCallback
) -> bool
{
    PxSceneQueryExt_overlapAny(
        scene,
        geometry,
        pose,
        hit,
        filterData,
        filterCall
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBatchQueryExt_release_mut(
    self_: *mut PxBatchQueryExt
)
{
    PxBatchQueryExt_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBatchQueryExt_raycast_mut(
    self_: *mut PxBatchQueryExt,
    origin: *const PxVec3,
    unitDir: *const PxVec3,
    distance: f32,
    maxNbTouches: u16,
    hitFlags: PxHitFlags,
    filterData: *const PxQueryFilterData,
    cache: *const PxQueryCache
) -> *mut PxRaycastBuffer
{
    PxBatchQueryExt_raycast_mut(
        self_,
        origin,
        unitDir,
        distance,
        maxNbTouches,
        hitFlags,
        filterData,
        cache
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBatchQueryExt_sweep_mut(
    self_: *mut PxBatchQueryExt,
    geometry: *const PxGeometry,
    pose: *const PxTransform,
    unitDir: *const PxVec3,
    distance: f32,
    maxNbTouches: u16,
    hitFlags: PxHitFlags,
    filterData: *const PxQueryFilterData,
    cache: *const PxQueryCache,
    inflation: f32
) -> *mut PxSweepBuffer
{
    PxBatchQueryExt_sweep_mut(
        self_,
        geometry,
        pose,
        unitDir,
        distance,
        maxNbTouches,
        hitFlags,
        filterData,
        cache,
        inflation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBatchQueryExt_overlap_mut(
    self_: *mut PxBatchQueryExt,
    geometry: *const PxGeometry,
    pose: *const PxTransform,
    maxNbTouches: u16,
    filterData: *const PxQueryFilterData,
    cache: *const PxQueryCache
) -> *mut PxOverlapBuffer
{
    PxBatchQueryExt_overlap_mut(
        self_,
        geometry,
        pose,
        maxNbTouches,
        filterData,
        cache
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxBatchQueryExt_execute_mut(
    self_: *mut PxBatchQueryExt
)
{
    PxBatchQueryExt_execute_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateBatchQueryExt(
    scene: *const PxScene,
    queryFilterCallback: *mut PxQueryFilterCallback,
    maxNbRaycasts: u32,
    maxNbRaycastTouches: u32,
    maxNbSweeps: u32,
    maxNbSweepTouches: u32,
    maxNbOverlaps: u32,
    maxNbOverlapTouches: u32
) -> *mut PxBatchQueryExt
{
    phys_PxCreateBatchQueryExt(
        scene,
        queryFilterCallback,
        maxNbRaycasts,
        maxNbRaycastTouches,
        maxNbSweeps,
        maxNbSweepTouches,
        maxNbOverlaps,
        maxNbOverlapTouches
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateBatchQueryExt_1(
    scene: *const PxScene,
    queryFilterCallback: *mut PxQueryFilterCallback,
    raycastBuffers: *mut PxRaycastBuffer,
    maxNbRaycasts: u32,
    raycastTouches: *mut PxRaycastHit,
    maxNbRaycastTouches: u32,
    sweepBuffers: *mut PxSweepBuffer,
    maxNbSweeps: u32,
    sweepTouches: *mut PxSweepHit,
    maxNbSweepTouches: u32,
    overlapBuffers: *mut PxOverlapBuffer,
    maxNbOverlaps: u32,
    overlapTouches: *mut PxOverlapHit,
    maxNbOverlapTouches: u32
) -> *mut PxBatchQueryExt
{
    phys_PxCreateBatchQueryExt_1(
        scene,
        queryFilterCallback,
        raycastBuffers,
        maxNbRaycasts,
        raycastTouches,
        maxNbRaycastTouches,
        sweepBuffers,
        maxNbSweeps,
        sweepTouches,
        maxNbSweepTouches,
        overlapBuffers,
        maxNbOverlaps,
        overlapTouches,
        maxNbOverlapTouches
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateExternalSceneQuerySystem(
    desc: *const PxSceneQueryDesc,
    contextID: u64
) -> *mut PxSceneQuerySystem
{
    phys_PxCreateExternalSceneQuerySystem(
        desc,
        contextID
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomSceneQuerySystem_addPruner_mut(
    self_: *mut PxCustomSceneQuerySystem,
    primaryType: PxPruningStructureType,
    secondaryType: PxDynamicTreeSecondaryPruner,
    preallocated: u32
) -> u32
{
    PxCustomSceneQuerySystem_addPruner_mut(
        self_,
        primaryType,
        secondaryType,
        preallocated
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomSceneQuerySystem_startCustomBuildstep_mut(
    self_: *mut PxCustomSceneQuerySystem
) -> u32
{
    PxCustomSceneQuerySystem_startCustomBuildstep_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomSceneQuerySystem_customBuildstep_mut(
    self_: *mut PxCustomSceneQuerySystem,
    index: u32
)
{
    PxCustomSceneQuerySystem_customBuildstep_mut(
        self_,
        index
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomSceneQuerySystem_finishCustomBuildstep_mut(
    self_: *mut PxCustomSceneQuerySystem
)
{
    PxCustomSceneQuerySystem_finishCustomBuildstep_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomSceneQuerySystemAdapter_delete(
    self_: *mut PxCustomSceneQuerySystemAdapter
)
{
    PxCustomSceneQuerySystemAdapter_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomSceneQuerySystemAdapter_getPrunerIndex(
    self_: *const PxCustomSceneQuerySystemAdapter,
    actor: *const PxRigidActor,
    shape: *const PxShape
) -> u32
{
    PxCustomSceneQuerySystemAdapter_getPrunerIndex(
        self_,
        actor,
        shape
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxCustomSceneQuerySystemAdapter_processPruner(
    self_: *const PxCustomSceneQuerySystemAdapter,
    prunerIndex: u32,
    context: *const PxQueryThreadContext,
    filterData: *const PxQueryFilterData,
    filterCall: *mut PxQueryFilterCallback
) -> bool
{
    PxCustomSceneQuerySystemAdapter_processPruner(
        self_,
        prunerIndex,
        context,
        filterData,
        filterCall
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateCustomSceneQuerySystem(
    sceneQueryUpdateMode: PxSceneQueryUpdateMode,
    contextID: u64,
    adapter: *const PxCustomSceneQuerySystemAdapter,
    usesTreeOfPruners: bool
) -> *mut PxCustomSceneQuerySystem
{
    phys_PxCreateCustomSceneQuerySystem(
        sceneQueryUpdateMode,
        contextID,
        adapter,
        usesTreeOfPruners
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxFindFaceIndex(
    convexGeom: *const PxConvexMeshGeometry,
    geomPose: *const PxTransform,
    impactPos: *const PxVec3,
    unitDir: *const PxVec3
) -> u32
{
    phys_PxFindFaceIndex(
        convexGeom,
        geomPose,
        impactPos,
        unitDir
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPoissonSampler_setSamplingRadius_mut(
    self_: *mut PxPoissonSampler,
    samplingRadius: f32
) -> bool
{
    PxPoissonSampler_setSamplingRadius_mut(
        self_,
        samplingRadius
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPoissonSampler_addSamplesInSphere_mut(
    self_: *mut PxPoissonSampler,
    sphereCenter: *const PxVec3,
    sphereRadius: f32,
    createVolumeSamples: bool
)
{
    PxPoissonSampler_addSamplesInSphere_mut(
        self_,
        sphereCenter,
        sphereRadius,
        createVolumeSamples
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPoissonSampler_addSamplesInBox_mut(
    self_: *mut PxPoissonSampler,
    axisAlignedBox: *const PxBounds3,
    boxOrientation: *const PxQuat,
    createVolumeSamples: bool
)
{
    PxPoissonSampler_addSamplesInBox_mut(
        self_,
        axisAlignedBox,
        boxOrientation,
        createVolumeSamples
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPoissonSampler_delete(
    self_: *mut PxPoissonSampler
)
{
    PxPoissonSampler_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateShapeSampler(
    geometry: *const PxGeometry,
    transform: *const PxTransform,
    worldBounds: *const PxBounds3,
    initialSamplingRadius: f32,
    numSampleAttemptsAroundPoint: i32
) -> *mut PxPoissonSampler
{
    phys_PxCreateShapeSampler(
        geometry,
        transform,
        worldBounds,
        initialSamplingRadius,
        numSampleAttemptsAroundPoint
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMeshPoissonSampler_isPointInTriangleMesh_mut(
    self_: *mut PxTriangleMeshPoissonSampler,
    p: *const PxVec3
) -> bool
{
    PxTriangleMeshPoissonSampler_isPointInTriangleMesh_mut(
        self_,
        p
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTriangleMeshPoissonSampler_delete(
    self_: *mut PxTriangleMeshPoissonSampler
)
{
    PxTriangleMeshPoissonSampler_delete(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreateTriangleMeshSampler(
    triangles: *const u32,
    numTriangles: u32,
    vertices: *const PxVec3,
    numVertices: u32,
    initialSamplingRadius: f32,
    numSampleAttemptsAroundPoint: i32
) -> *mut PxTriangleMeshPoissonSampler
{
    phys_PxCreateTriangleMeshSampler(
        triangles,
        numTriangles,
        vertices,
        numVertices,
        initialSamplingRadius,
        numSampleAttemptsAroundPoint
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTetrahedronMeshExt_findTetrahedronContainingPoint(
    mesh: *const PxTetrahedronMesh,
    point: *const PxVec3,
    bary: *mut PxVec4,
    tolerance: f32
) -> i32
{
    PxTetrahedronMeshExt_findTetrahedronContainingPoint(
        mesh,
        point,
        bary,
        tolerance
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxTetrahedronMeshExt_findTetrahedronClosestToPoint(
    mesh: *const PxTetrahedronMesh,
    point: *const PxVec3,
    bary: *mut PxVec4
) -> i32
{
    PxTetrahedronMeshExt_findTetrahedronClosestToPoint(
        mesh,
        point,
        bary
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxInitExtensions(
    physics: *mut PxPhysics,
    pvd: *mut PxPvd
) -> bool
{
    phys_PxInitExtensions(
        physics,
        pvd
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCloseExtensions(

)
{
    phys_PxCloseExtensions(

    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRepXObject_new(
    inTypeName: *const c_char,
    inSerializable: *const c_void,
    inId: u64
) -> PxRepXObject
{
    PxRepXObject_new(
        inTypeName,
        inSerializable,
        inId
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRepXObject_isValid(
    self_: *const PxRepXObject
) -> bool
{
    PxRepXObject_isValid(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRepXInstantiationArgs_new(
    inPhysics: *mut PxPhysics,
    inCooking: *mut PxCooking,
    inStringTable: *mut PxStringTable
) -> PxRepXInstantiationArgs
{
    PxRepXInstantiationArgs_new(
        inPhysics,
        inCooking,
        inStringTable
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRepXSerializer_getTypeName_mut(
    self_: *mut PxRepXSerializer
) -> *const c_char
{
    PxRepXSerializer_getTypeName_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRepXSerializer_objectToFile_mut(
    self_: *mut PxRepXSerializer,
    inLiveObject: *const PxRepXObject,
    inCollection: *mut PxCollection,
    inWriter: *mut XmlWriter,
    inTempBuffer: *mut MemoryBuffer,
    inArgs: *mut PxRepXInstantiationArgs
)
{
    PxRepXSerializer_objectToFile_mut(
        self_,
        inLiveObject,
        inCollection,
        inWriter,
        inTempBuffer,
        inArgs
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxRepXSerializer_fileToObject_mut(
    self_: *mut PxRepXSerializer,
    inReader: *mut XmlReader,
    inAllocator: *mut XmlMemoryAllocator,
    inArgs: *mut PxRepXInstantiationArgs,
    inCollection: *mut PxCollection
) -> PxRepXObject
{
    PxRepXSerializer_fileToObject_mut(
        self_,
        inReader,
        inAllocator,
        inArgs,
        inCollection
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvd_connect_mut(
    self_: *mut PxPvd,
    transport: *mut PxPvdTransport,
    flags: PxPvdInstrumentationFlags
) -> bool
{
    PxPvd_connect_mut(
        self_,
        transport,
        flags
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvd_disconnect_mut(
    self_: *mut PxPvd
)
{
    PxPvd_disconnect_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvd_isConnected_mut(
    self_: *mut PxPvd,
    useCachedStatus: bool
) -> bool
{
    PxPvd_isConnected_mut(
        self_,
        useCachedStatus
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvd_getTransport_mut(
    self_: *mut PxPvd
) -> *mut PxPvdTransport
{
    PxPvd_getTransport_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvd_getInstrumentationFlags_mut(
    self_: *mut PxPvd
) -> PxPvdInstrumentationFlags
{
    PxPvd_getInstrumentationFlags_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvd_release_mut(
    self_: *mut PxPvd
)
{
    PxPvd_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxCreatePvd(
    foundation: *mut PxFoundation
) -> *mut PxPvd
{
    phys_PxCreatePvd(
        foundation
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvdTransport_connect_mut(
    self_: *mut PxPvdTransport
) -> bool
{
    PxPvdTransport_connect_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvdTransport_disconnect_mut(
    self_: *mut PxPvdTransport
)
{
    PxPvdTransport_disconnect_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvdTransport_isConnected_mut(
    self_: *mut PxPvdTransport
) -> bool
{
    PxPvdTransport_isConnected_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvdTransport_write_mut(
    self_: *mut PxPvdTransport,
    inBytes: *const u8,
    inLength: u32
) -> bool
{
    PxPvdTransport_write_mut(
        self_,
        inBytes,
        inLength
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvdTransport_lock_mut(
    self_: *mut PxPvdTransport
) -> *mut PxPvdTransport
{
    PxPvdTransport_lock_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvdTransport_unlock_mut(
    self_: *mut PxPvdTransport
)
{
    PxPvdTransport_unlock_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvdTransport_flush_mut(
    self_: *mut PxPvdTransport
)
{
    PxPvdTransport_flush_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvdTransport_getWrittenDataSize_mut(
    self_: *mut PxPvdTransport
) -> u64
{
    PxPvdTransport_getWrittenDataSize_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_PxPvdTransport_release_mut(
    self_: *mut PxPvdTransport
)
{
    PxPvdTransport_release_mut(
        self_
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxDefaultPvdSocketTransportCreate(
    host: *const c_char,
    port: i32,
    timeoutInMilliseconds: u32
) -> *mut PxPvdTransport
{
    phys_PxDefaultPvdSocketTransportCreate(
        host,
        port,
        timeoutInMilliseconds
    )
}

#[no_mangle]
pub unsafe extern "C" fn magicphysx_phys_PxDefaultPvdFileTransportCreate(
    name: *const c_char
) -> *mut PxPvdTransport
{
    phys_PxDefaultPvdFileTransportCreate(
        name
    )
}

    